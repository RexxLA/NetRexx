.* ------------------------------------------------------------------
.* NetRexx language definition                                    mfc
.* Copyright (c) Mike Cowlishaw 1996, 2009.  All Rights Reserved.
.* ------------------------------------------------------------------
:h2 id=refreturn.Return instruction
.pi /RETURN instruction
.pi /Instructions/RETURN
.pi /Functions/return from
.pi /Internal functions/return from
.pi /Subroutines/return from
.pi /Subroutines/passing back values from
[%char
.bx left right
:xmp.
:hp2.return:ehp2. &lbrk.:hp1.expression:ehp1.&rbrk.;
:exmp.
.bx off
]]
[%smff
.synret
]]
.pi /Results/returned by RETURN
:p.:kw.return:ekw. is used to return control (and possibly a result)
from a NetRexx program or method to the point of its invocation.
:p.
The expression (if any) is evaluated, active control constructs are
terminated (as though by a :kw.leave:ekw. instruction), and the value of
the expression is passed back to the caller.
:p.
The result passed back to the caller is a string of type :hp4.Rexx:ehp4.,
unless a different type was specified using the :kw.returns:ekw. keyword
on the :a id=refmethod.:kw.method:ekw. instruction:ea. for the current
method.
In this case, the type of the value of the expression must match (or be
convertible to, as by the rules for assignment) the type specified by
the :kw.returns:ekw. phrase.
:p.
Within a method, the use of expressions on :kw.return:ekw. must be
consistent.  That is, either all :kw.return:ekw. instructions must
specify a expression, or none may.
If a :kw.returns:ekw. phrase is given on the :kw.method:ekw. instruction
for the current method then all :kw.return:ekw. instructions must
specify an expression.
.cp 25
