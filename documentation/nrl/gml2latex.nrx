/**
 * Class gml2latex implements... 
 * <BR>
 * Created on: do, 27, jun 2013 01:12:16 +0200
 */
class gml2latex

  names =  "nr3part3 nr3notat nr3chars nr3struc nr3types nr3terms nr3methc nr3conv nr3exprs nr3claus nr3assig nr3invar nr3keys nr3class nr3do nr3exit nr3if nr3impor nr3iter nr3leave nr3loop nr3meth nr3nop nr3numer nr3optio nr3pack nr3parse nr3prop nr3retur nr3say nr3selec nr3signa nr3trace nr3prog  nr3minor nr3spec nr3parsi nr3arith nr3binar nr3excep nr3rexxc nr3appa nr3appb nr3appc nr3cexcep nr3crexx nr3crops nr3crset"
  /**
   * Default constructor
   */
  method gml2latex()
    loop i=1 to names.words()
      in = BufferedReader(FileReader(names.word(i)'.nrl'))
      out = PrintWriter(BufferedWriter(FileWriter(names.word(i)'.tex')))
      loop forever
	line = Rexx in.readLine()
	if line = null then leave

	if line.left(2) = ".*" then iterate
	if line.left(3) = ".cp" then iterate
	if line.left(3) = ".ty" then iterate
	if line.left(6) = "[%char" then iterate
	if line.left(2) = "]]" then iterate
	if line.left(6) = "[%smff" then iterate
	if line.left(4) = ".syn" then iterate
	line=this.substitute(line,in)
	out.println(line)
      end
      in.close()
      out.close()
    end
    return
    
  method substitute(line,in=BufferedReader) signals IOException

    line = line.changestr('_',' ')
    line = line.changestr(':p.',' ')
    line = line.changestr(':br.','')
    line = line.changestr('%','\\%')
    line = line.changestr('&amp.','\\&')
    
    line = line.changestr(':kw.','\\texttt{')
    line = line.changestr(':ekw.','}')

    line = line.changestr(':hp1.','\\emph{')
    line = line.changestr(':ehp1.','}')

    line = line.changestr(':hp2.','\\textbf{')
    line = line.changestr(':ehp2.','}')

    line = line.changestr(':hp3.','\\emph{')
    line = line.changestr(':ehp3.','}')

    line = line.changestr(':hp4.','\\textbf{')
    line = line.changestr(':ehp4.','}')

    line = line.changestr(':ri.','\\emph{')
    line = line.changestr(':eri.','}')

    line = line.changestr(':i.','\\emph{')
    line = line.changestr(':ei.','}')

    line = line.changestr(':q.','"')
    line = line.changestr(':eq.','"')

    line = line.changestr(':fn.','\\footnote{')
    line = line.changestr(':efn.','}')

    line = line.changestr('.bx left right','\\begin{shaded}')
    line = line.changestr('.bx off','\\end{shaded}')

    line = line.changestr('_&lbrk.',' [')
    line = line.changestr('&lbrk.','[')

    line = line.changestr('_&rbrk.',' ]')
    line = line.changestr('&rbrk.',']')

    line = line.changestr('_&lbrc.',' \\{')
    line = line.changestr('_&rbrc.',' \\}')

    line = line.changestr('&colon.',':')
    line = line.changestr('&etc.','\\&')
    line = line.changestr('&dash.','-')
    line = line.changestr('&ndash.','-')
    line = line.changestr('&mdash.','--')
    line = line.changestr('&z.','*')
    line = line.changestr('&gt.','>')
    line = line.changestr('&lt.','>')
    line = line.changestr('&vers.','\\nrversion{}')
    line = line.changestr('&lbrc.','\\{')
    line = line.changestr('&rbrc.','\\}')

    line = line.changestr('&vq.',"'")
    line = line.changestr('&sdq.','"')
    line = line.changestr('&ie.','\\emph{i.e.}')
    line = line.changestr('&eg.','\\emph{e.g.}')
    line = line.changestr('&qv.','\\emph{q.v.}')
    line = line.changestr('&th.','\\emph{th}') -- todo superscript
    line = line.changestr('&ellipsis.','\\ldots')
    line = line.changestr('&bslash.','\\textbackslash ')
    line = line.changestr('&minus.','-')
    line = line.changestr('&idash.','-') -- todo check
    line = line.changestr('&euro.','TODO EURO') --todo euro
    line = line.changestr('&underscore.','\\_')
    line = line.changestr('&vbar.','|')
    line = line.changestr('&Ea.',"\\'{E}")
    line = line.changestr('$.',"\\$")
    

    line = line.changestr(':ul.','\\begin{itemize}')
    line = line.changestr(':eul.','\\end{itemize}')
    line = line.changestr(':ol.','\\begin{enumerate}')
    line = line.changestr(':eol.','\\end{enumerate}')
    
    line = line.changestr(':li.','\\item ')

    line = line.changestr('&sub1.','1') --subscript
    line = line.changestr('&sub2.','2')
    line = line.changestr('&sub3.','3')
    line = line.changestr(':pc.','')
    line = line.changestr(':dd.','')
    line = line.changestr(':note.','\\textbf{Note: }')
    line = line.changestr(':m.','\\texttt{')
    line = line.changestr(':em.','}')

    select
      when line=":p." then return ""
      when line=":xmp." then return "\\begin{alltt}"
      when line=":exmp." then return "\\end{alltt}"
      when line.left(3)='.pi' then do
	parse line '.pi /'first '/' second
	return '\\index{'first','second'}'
      end
      when line.left(3)=':h1' then do
	parse line ':h1 id='id'.'rest
	return '\\chapter{'rest'}\\label{'id'}'
      end
      when line.left(4)=':h1.' then do
	parse line ':h1.'rest
	return '\\chapter{'rest'}'
      end
      when line.left(4)=':h2.' then do
	parse line ':h2.'title
	return "\\chapter{"title"}"
      end
      when line.left(3)=':h2' then do
	parse line ':h2 id='id'.'rest
	return '\\chapter{'rest'}\\label{"id"}'
      end
      when line.left(3)=':h3' then do
	parse line ':h3 id='id'.'rest
	return '\\subsection{'rest'}\\label{"id"}'
      end
      when line.left(4)=':h3.' then do
	parse line ':h3.'rest
	return '\\subsection{'rest'}'
      end
      when line.left(4)=':h4.' then do
	parse line ':h4.'rest
	return '\\subsubsection{'rest'}'
      end
      when line.left(3)=':h4' then do
	parse line ':h4 id='id'.'rest
	return '\\subsubsection{'rest'}\\label{"id"}'
      end
      when line.pos('a id=') > 0 then do
	parse line start ':a id='label'.'title':ea.'rest
	return start title '(see page \\pageref{'label'})' rest
	end
      when line.left(6) = '[%book' then do
	line = Rexx in.readLine()
	returnstring = this.substitute(line,in)
	line = Rexx in.readLine()
	return returnstring
      end -- when line
      when line.left(5) = '[%www' then do
	line = Rexx in.readLine()
	return ''
      end
      when line.left(5) = '[%odt' then do
	line = Rexx in.readLine()
	return ''
      end
      when line.left(3) = ':dl' then do
	return '\\begin{description}'
      end
      when line.left(4) = ':edl' then do
	return '\\end{description}'
      end
      when line.left(4) = ':dt.' then do
	parse line ':dt.'title
	return '\\item{'title'}'
      end
      when line.left(3) = ':dt' then do
	parse line ':dt id='id'.'title
	return '\\item['title']\\label{'id'}'
      end

      otherwise
    end

    
    return line
    
    
  method main(args=String[]) static
    gml2latex()
    