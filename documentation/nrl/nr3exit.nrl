.* ------------------------------------------------------------------
.* NetRexx language definition                                    mfc
.* Copyright (c) Mike Cowlishaw 1996, 2009.  All Rights Reserved.
.* ------------------------------------------------------------------
:h2 id=refexit.Exit instruction
.pi /EXIT instruction
.pi /Instructions/EXIT
.pi /Return code, setting on exit
.pi /Return string, setting on exit
[%char
.bx left right
:xmp.
:hp2.exit:ehp2. &lbrk.:i.expression:ei.&rbrk.;
:exmp.
.bx off
]]
[%smff
.synexi
]]
:p.:kw.exit:ekw. is used to unconditionally leave a program, and
optionally return a result to the caller.
The entire program is terminated immediately.
:p.If an :hp1.expression:ehp1. is given, it is evaluated and the result
of the evaluation is then passed back to the caller in an
implementation-dependent manner when the program terminates.
Typically this value is expected to be a small whole number; most
implementations will accept values in the range 0 through 250.
If no expression is given, a default result (which depends on the
implementation, and is typically zero) is passed back to the caller.
.cp 5;
:p.:hp2.Example::ehp2.
:xmp.
j=3
exit j&z.4
/&z. Would exit with the value '12' &z./
:exmp.
.* :p.
.* If the program was called as an
.* external function this will be detected as an error &dash.
.* either immediately (if RETURN was used), or
.* on return to the caller (if EXIT was used).
.pi /Running off the end of a program
.pi /Bottom of program, reaching during execution
:p.:q.Running off the end:eq. of a program is equivalent to the
instruction :hp4.return;:ehp4..  In the case where the program is simply
a stand-alone application with no :kw.class:ekw. or :kw.method:ekw.
instructions, this has the same effect as :hp4.exit;:ehp4., in that it
terminates the whole program and returns a default result.
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.cp 25
