.* ------------------------------------------------------------------
.* NetRexx language definition                                    mfc
.* Copyright (c) Mike Cowlishaw 1996, 2009.  All Rights Reserved.
.* ------------------------------------------------------------------
:h2 id=refimport.Import instruction
.pi /IMPORT instruction
.pi /Instructions/IMPORT
[%char
.bx left right
:xmp.
:hp2.import:ehp2. :hp1.name:ehp1.;

where :hp1.name:ehp1. is one or more non-numeric :i.symbol:ei.s separated by periods, with an optional trailing period.
:exmp.
.bx off
]]
[%smff
.synimpor
]]
:p.
The :kw.import:ekw. instruction is used to simplify the use of
classes from other packages.
If a class is identified by an :kw.import:ekw. instruction, it can then
be referred to by its short name, as given on the
:a id=refclass.:kw.class:ekw. instruction:ea., as well as by its fully
qualified name.
:p.
There may be zero or more :kw.import:ekw. instructions in a program.
They must precede any :kw.class:ekw. instruction (or any instruction
that would start the default class).
:p.
.pi /Package/name of
In the following description, a :hp1.package name:ehp1. names a package
as described under the :a id=refpackage.:kw.package:ekw.
instruction:ea..
.* :p.
The import :hp1.name:ehp1. must be one of:
:ul.
:li.A qualified class name, which is a package name immediately followed
by a period which is immediately followed by a short class name &dash.
in this case, the individual class identified is imported.
:li.A package name &dash. in this case, all the classes in the specified
package are imported.  The name may have a trailing period.
:li.A partial package name (a package name with one or more parts
omitted from the right, indicated by a trailing period after the parts
that are present) &dash. in this case, all classes in the package hierarchy
below the specified point are imported.
:eul.
.cp 6
:p.:hp2.Examples::ehp2.
:xmp.
import java.lang.String
import java.lang
import java.
:exmp.
:pc.The first example above imports a single class (which could then be
referred to simply as :q.:hp4.String:ehp4.:eq.).
The second example imports all classes in the
:q.:hp4.java.lang:ehp4.:eq. package.
The third example imports all classes in all the packages whose name
starts with :q.:hp4.java.:ehp4.:eq..
.* :p.
.* If two (or more) classes with the same short name are imported, then an
.* attempt to use that short name as a class name or type is an error, as
.* the reference would be ambiguous.
:p.
.pi /Imports/explicit
When a class is imported explicitly, for example, using
:xmp.
import java.awt.List
:exmp.
:pc.this indicates that the short name of the class (:m.List:em.,
in this example) may be used to refer to the class unambiguously.
That is, using this short name will not report an ambiguous reference
warning (as it would without the :kw.import:ekw. instruction, because
a :m.java.util.List:em. class was added in Java 1.2).
:p.
It follows that:
:ul.
:li.Two classes imported explicitly cannot have the same short name.
:li.No class in a program being compiled can have the same short name as
a class that is imported explicitly.
:eul.
:pc.because in either of these situations a use of the short name would
be ambiguous.
:p.
Note also that an explicit import does not import the minor or dependent
classes associated with a name; they each require their own explicit
import (unless the entire package is imported).
:p.
.pi /Imports/automatic
:ri.In the reference implementation, the fundamental NetRexx and Java
package hierarchies are automatically imported by default, as though the
instructions::eri.
:xmp.
import netrexx.lang.
import java.lang.
import java.io.
import java.util.
import java.net.
import java.awt.
import java.applet.
:exmp.
:pc.:ri.had been executed before the program begins.
In addition, classes in the current (working) directory are imported if
no :kw.package:ekw. instruction is specified.  If a :kw.package:ekw.
instruction is specified then all classes in that package are imported.
:eri.
.cp 40
