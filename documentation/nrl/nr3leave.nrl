.* ------------------------------------------------------------------
.* NetRexx language definition                                    mfc
.* Copyright (c) Mike Cowlishaw 1996, 2009.  All Rights Reserved.
.* ------------------------------------------------------------------
:h2 id=refleave.Leave instruction
.pi /LEAVE instruction
.pi /Instructions/LEAVE
.pi /LEAVE instruction/use of variable on
.pi ref /LEAVE instruction/DO construct
.pi /Loops/termination of
[%char
.bx left right
:xmp.
:hp2.leave:ehp2. &lbrk.:hp1.name:ehp1.&rbrk.;

where :hp1.name:ehp1. is a non-numeric :i.symbol:ei..
:exmp.
.bx off
]]
[%smff
.synlea
]]
:p.:kw.leave:ekw. causes immediate exit from one or more :kw.do:ekw.,
:kw.loop:ekw., or :kw.select:ekw. constructs.
It may only be used in the body (the first :hp1.instructionlist:ehp1.)
of the construct.
:p.
Execution of the instruction list is terminated, and control is
passed to the :kw.end:ekw. clause of the construct, just as though the
last clause in the body of the construct had just been executed or (if
a loop) the termination condition had been met normally, except that on
exit the control variable (if any) will contain the value it had when
the :kw.leave:ekw. instruction was executed.
:p.
If no :hp1.name:ehp1. is specified, then :kw.leave:ekw. must be
within an active loop and will terminate the innermost active loop.
:p.
If a :hp1.name:ehp1. is specified, then it must be the name of the
label (or control variable for a loop with no label), of a currently
active :kw.do:ekw., :kw.loop:ekw., or :kw.select:ekw. construct
(which may be the innermost).  That construct (and any active constructs
inside it) is then terminated.  Control then passes to the clause
following the :kw.end:ekw. clause that matches the
:kw.do:ekw., :kw.loop:ekw., or :kw.select:ekw. clause identified by the
:hp1.name:ehp1..
.cp 5;
:p.:hp2.Example::ehp2.
:xmp.
loop i=1 to 5
  say i
  if i=3 then leave
  end i
/&z. Would display the numbers:  1, 2, 3  &z./
:exmp.
.cp 4;
:p.:hp2.Notes::ehp2.
:ol.
.pi /FINALLY/reached by LEAVE
:li.If any construct being left includes a :kw.finally:ekw. clause, the
:hp1.instructionlist:ehp1. following the :kw.finally:ekw. will be
executed before the construct is left.
.pi /Active constructs
.pi /Loops/active
.pi /Constructs/active
.pi /Names/on LEAVE instructions
:li.
A :kw.do:ekw., :kw.loop:ekw., or :kw.select:ekw. construct
is active if it is currently being executed.
If a method (even in the same class) is called during execution of an
active construct, then the construct becomes inactive until the method
has returned.
:kw.leave:ekw. cannot be used to leave an inactive construct.
:li.The :hp1.name:ehp1. symbol, if specified, must exactly match the
label (or the name of the control variable, for a loop with no label) in
the :kw.do:ekw., :kw.loop:ekw., or :kw.select:ekw. clause in all
respects except case.
:eol.
.cp 25
