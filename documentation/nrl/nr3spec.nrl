.* ------------------------------------------------------------------
.* NetRexx language definition                                    mfc
.* Copyright (c) Mike Cowlishaw 1996, 2009.  All Rights Reserved.
.* ------------------------------------------------------------------
:h2 id=refspecial.Special names and methods
:p.
For convenience, NetRexx provides some :i.special names:ei. for naming
commonly-used concepts within terms.
These are only recognized if there is no variable of the same name
previously seen in the current scope, as described in the section on
:a id=refterms.:hp1.Terms:ehp1.:ea..
This allows the set of special words to be expanded in the future, if
necessary, without invalidating existing variables.  Therefore, these
names are not reserved; they may be used as variable names instead, if
desired.
:p.
There are also two :q.special methods:eq. that are used when
constructing objects.
.* and constructors for the primitive types.
.* - - - -
.cp 25
:h3.Special names
.pi /Special words
:p.
The following special names are allowed in NetRexx programs, and are
recognized independently of case.
:fn.
:ri.Unless :kw.options strictcase:ekw. is in effect.
:eri.
:efn.
With the exception of :hp4.length:ehp4. and :hp4.class:ehp4., these
may only be used alone as a term or at the start of a compound term.
:dl tsize=25mm termhi=4.
.cp 5
:dt id=refswask.ask
.pi /Special words/ask
.pi /Names/special/ask
.pi /Words/special/ask
.pi /ASK special word
.pi /stdin, reading with ASK
:dd.:p.
Returns a string of type :hp4.Rexx:ehp4., read as a line from the
implementation-defined default input stream (often the user's
:q.console:eq.).
.cp 5
:p.:hp2.Example::ehp2.
:xmp.
if ask='yes' then say 'OK'
:exmp.
:p.:hp4.ask:ehp4. can only appear alone, or at the start of a
compound term.
:fn.
:ri.In the reference implementation, :hp4.ask:ehp4. is simply a shorthand
for :hp4.RexxIO.Ask():ehp4..:eri.
:efn.
.*
.* --
.cp 5
:dt id=refswclass.class
.pi /Special words/class
.pi /Names, special/class
.pi /Words, special/class
.pi /CLASS/special word
:dd.:p.
The object of type :hp4.Class:ehp4. that describes a specific type.
This word is only recognized as the second part of a compound term,
where the evaluation of the first part of the term resulted in a
type or qualified type.
.cp 5
:p.:hp2.Example::ehp2.
:xmp.
obj=String.class
say obj.isInterface /&z. would say '0' &z./
:exmp.
.* --
.cp 5
:dt id=refswdigit.digits
.pi /Special words/digits
.pi /Names/special/digits
.pi /Words/special/digits
.pi /DIGITS/special word
:dd.:p.
The current setting of :a id=refndigits.:kw.numeric digits:ekw.:ea.,
returned as a string of type :hp4.Rexx:ehp4..
This will be one or more Arabic numerals, with no leading blanks, zeros,
or sign, and no trailing blanks or exponent.
:p.:hp4.digits:ehp4. can only appear alone, or at the start of a
compound term.
.* --
.cp 5
:dt id=refswform.form
.pi /Special words/form
.pi /Names/special/form
.pi /Words/special/form
.pi /FORM/special word
:dd.:p.
The current setting of :a id=refnform.:kw.numeric form:ekw.:ea.,
returned as a string of type :hp4.Rexx:ehp4..
This will have either the value :q.:hp4.scientific:ehp4.:eq. or the
value :q.:hp4.engineering:ehp4.:eq..
:p.:hp4.form:ehp4. can only appear alone, or at the start of a
compound term.
.* --
.cp 5
:dt id=refswleng.length
.pi /Special words/length
.pi /Names/special/length
.pi /Words/special/length
.pi /LENGTH/special word
:dd.:p.
The length of an :a id=refarray.array:ea., returned as an
implementation-dependent binary type or string.
This word is only recognized as the last part of a compound term,
where the evaluation of the rest of the term resulted in an array of
dimension 1.
.* --
.cp 5
:p.:hp2.Example::ehp2.
:xmp.
foo=char&lbrk.7&rbrk.
say foo.length     /&z. would say '7' &z./
:exmp.
:p.
Note that you can get the length of a NetRexx string with the
same syntax.
:fn.
:ri.Unless :kw.options strictargs:ekw. is in effect.
:eri.
:efn.
In that case, however, a :hp4.length():ehp4. method is being invoked.
.* --
.cp 5
:dt id=refswnull.null
.pi /Special words/null
.pi /Names/special/null
.pi /Words/special/null
.pi /NULL special word
.pi /Empty reference, null
.pi /References/null
:dd.:p.
The :i.empty reference:ei..  This is a special value that represents
:q.no value:eq. and may be assigned to variables (or returned from
methods) except those whose type is both primitive and undimensioned.
It may also be be used in a comparison for equality (or inequality) with
values of suitable type, and may be given a type.
.*
.cp 6
:p.:hp2.Examples::ehp2.
:xmp.
blob=int&lbrk.3&rbrk.   -- 'blob' refers to array of 3 ints
blob=null     -- 'blob' is still of type int&lbrk.&rbrk.,
              -- but refers to no real object
mob=Mark null -- 'mob' is type 'Mark'
:exmp.
:p.The :hp4.null:ehp4. value may be considered to represent the state of
being uninitialized.  It can only appear as simple symbol, not as a part
of a compound term.
.*
.* --
.cp 5
:dt id=refswsourc.source
.pi /Special words/source
.pi /Names/special/source
.pi /Words/special/source
.pi /SOURCE special word
.pi /Program/filename of
.pi /Class/filename of
:dd.:p.
Returns a string of type :hp4.Rexx:ehp4. identifying the source of the
current class.
The string consists of the following words, with a single blank between
the words and no trailing or leading blanks:
:ol.
:li.the name of the underlying environment (&eg., :hp4.Java:ehp4.)
:li.either :hp4.method:ehp4. (if the term is being used within a method)
or :hp4.class:ehp4. (if the term is being used within a property
assignment, before the first method in a class)
:li.
an implementation-dependent representation of the name of the
source stream for the class (&eg., :hp4.Fred.nrx:ehp4.).
:eol.
:p.:hp4.source:ehp4. can only appear alone, or at the start of a
compound term.
.* --
.cp 5
:dt id=refswsourl.sourceline
.pi /Special words/sourceline
.pi /Names, special/sourceline
.pi /Words, special/sourceline
.pi /SOURCELINE/special word
:dd.:p.
The line number of the first token of the current clause in the
NetRexx program, returned as a string of type :hp4.Rexx:ehp4..
This will be one or more Arabic numerals, with no leading blanks, zeros,
or sign, and no trailing blanks or exponent.
:p.:hp4.sourceline:ehp4. can only appear alone, or at the start of a
compound term.
.*
.* --
.cp 5
:dt id=refswsuper.super
.pi /Special words/super
.pi /Names/special/super
.pi /Words/special/super
.pi /SUPER/special word
.pi /References/to current object
:dd.:p.
Returns a reference to the current object, with a type that is the
type of the class that the current object's class extends.
This means that a search for methods or properties
which :hp4.super:ehp4. qualifies will start from the superclass rather
than in the current class.
This is used for invoking a method or property (in the superclass or one
of its superclasses) that has been overridden in the current class.
.cp 6
:p.:hp2.Example::ehp2.
:xmp.
method printit(x)
  say 'it'          -- modification
  super.printit(x)  -- now the usual processing
:exmp.
:p.
If a property being referenced is in fact defined by a superclass of
the current class, then the prefix :q.:hp4.super.:ehp4.:eq. is perhaps
the clearest way to indicate that name refers to a property of a
superclass rather than to a local variable.
(You could also qualify it by the name of the superclass.)
:p.:hp4.super:ehp4. can only appear alone, or at the start of a
compound term.
.*
.* --
.cp 5
:dt id=refswthis.this
.pi /Special words/this
.pi /Names/special/this
.pi /Words/special/this
.pi /THIS/special word
.pi /References/to current object
:dd.:p.
Returns a reference to the current object.
When a method is invoked, for example in:
:xmp.
word=Rexx "hello"  -- 'word' refers to "hello"
say word.substr(3) -- invokes substr on "hello"
:exmp.
:pc.then the method :hp4.substr:ehp4. in the class :hp4.Rexx:ehp4. is
invoked, with argument :hp4.'3':ehp4., and with the properties of the
value (object) :hp4."hello":ehp4. available to it.
These properties may be accessed simply by name, or (more explicitly) by
prefixing the name with :q.:hp4.this.:ehp4.:eq..
Using :q.:hp4.this.:ehp4.:eq. can make a method more readable,
especially when several objects of the same type are being manipulated
in the method.
:p.:hp4.this:ehp4. can only appear alone, or at the start of a
compound term.
.* --
.cp 5
:dt id=refswtrace.trace
.pi /Special words/trace
.pi /Names/special/trace
.pi /Words/special/trace
.pi /TRACE/special word
:dd.
The current :a id=reftrace.:kw.trace:ekw.:ea. setting,
returned as a NetRexx string.
This will be one of the words:
:xmp.
off var methods all results
:exmp.
:pc.
(:m.var:em. is returned when clause tracing is off but variable
tracing has then been turned on using a :kw.trace var:ekw. instruction.)
:p.:hp4.trace:ehp4. can only appear alone, or at the start of a
compound term.
.cp 8
.* --
:dt id=refswvers.version
.pi /Special words/version
.pi /Names/special/version
.pi /Words/special/version
.pi /VERSION special word
:dd.:p.
Returns a string of type :hp4.Rexx:ehp4. identifying the version of the
NetRexx language in effect when the current class was processed.
The string consists of the following words, with a single blank between
the words and no trailing or leading blanks:
:ol.
:li.A word describing the language.  The first seven letters will be the
characters :hp4.NetRexx:ehp4., and the remainder may be used to identify
a particular implementation or language processor.
This word may not include any periods.
:li.
The language level description, which must be a number with no sign or
exponential part.
For example, :q.:hp4.&vers.:ehp4.:eq. is the language level of this
definition.
:li.
Three words describing the language processor release date in
the same format as the default for the Rexx :q.:hp4.date():ehp4.:eq.
function.
:fn.
As defined in :cit.American National Standard for Information
Technology &dash. Programming Language REXX, X3.274-1996:ecit., American
National Standards Institute, New York, 1996.
:efn.
For example, :q.:hp4.22 May 2009:ehp4.:eq..
:eol.
:p.:hp4.version:ehp4. can only appear alone, or at the start of a
compound term.
:edl.
.* - - - - -
:h3 id=refspecm.Special methods
.pi /Special methods
.pi /Methods/special
.pi /Constructors/special
:p.
Constructors (methods used for constructing objects) in NetRexx
must invoke a constructor of their superclass before making any
modifications to the current object (or invoke another constructor in
the current class).
:p.
.pi /SUPER/special method
.pi /THIS/special method
.pi /Special methods/this
.pi /Special methods/super
This is simplified and made explicit by the provision of the special
method names :hp4.super:ehp4. and :hp4.this:ehp4., which refer to
constructors of the superclass and current class respectively.  These
special methods are only recognized when used as the first, method call,
instruction in a constructor, as described in
:a id=refmethcon.:hp1.Methods and constructors:ehp1.:ea..
Their names will be recognized independently of case.
:fn.
:ri.Unless :kw.options strictcase:ekw. is in effect.
:eri.
:efn.
:p.
In addition, NetRexx provides special constructor methods for the
primitive types that allow binary construction of primitives.
These are described in :a id=refbincon.:hp1.Binary values and
arithmetic:ehp1.:ea..
.* - - - - -
.cp 20
