.* ------------------------------------------------------------------
.* NetRexx language definition                                    mfc
.* Copyright (c) Mike Cowlishaw 1996, 2009.  All Rights Reserved.
.* ------------------------------------------------------------------
:h2.Iterate instruction
.pi /ITERATE instruction
.pi /Instructions/ITERATE
.pi /ITERATE instruction/use of variable on
.pi ref /ITERATE instruction/LOOP construct
.pi /Loops/modification of
[%char
.bx left right
:xmp.
:hp2.iterate:ehp2. &lbrk.:hp1.name:ehp1.&rbrk.;

where :hp1.name:ehp1. is a non-numeric :i.symbol:ei..
:exmp.
.bx off
]]
[%smff
.synite
]]
:p.:kw.iterate:ekw. alters the flow of control within a :kw.loop:ekw.
construct.
It may only be used in the body (the first :hp1.instructionlist:ehp1.)
of the construct.
:p.Execution of the instruction list stops, and control is passed
directly back up to the :kw.loop:ekw. clause just as though the last
clause in the body of the construct had just been executed.
The control variable (if any) is then stepped (iterated) and termination
conditions tested as normal and the instruction list is executed again,
unless the loop is terminated by the :kw.loop:ekw. clause.
:p.If no :hp1.name:ehp1. is specified, then :kw.iterate:ekw. will step
the innermost active loop.
:p.
If a :hp1.name:ehp1. is specified, then it must be the name of the
label, or control variable if there is no label, of a currently active
loop (which may be the innermost), and this is the loop that is
iterated.
Any active :kw.do:ekw., :kw.loop:ekw., or :kw.select:ekw. constructs
inside the loop selected for iteration are terminated (as though by a
:kw.leave:ekw. instruction).
.cp 6;
:p.:hp2.Example::ehp2.
:xmp.
loop i=1 to 4
  if i=2 then iterate i
  say i
  end
/&z. Would display the numbers:  1, 3, 4  &z./
:exmp.
.cp 4
:p.:hp2.Notes::ehp2.
:ol.
.pi /Active constructs/
.pi /Loops/active
.pi /Names/on ITERATE instructions
:li.A loop is active if it is currently being executed.
If a method (even in the same class) is called during execution of a
loop, then the loop becomes inactive until the method has returned.
:kw.iterate:ekw. cannot be used to step an inactive loop.
:li.The :hp1.name:ehp1. symbol, if specified, must exactly match the
label (or the name of the control variable, if there is no label) in the
:kw.loop:ekw. clause in all respects except case.
:eol.
.cp 25
