-- diskw.nrx Pipeline stage
/*
 *  Copyright (C) 1997-2011 Ed Tomlinson, 2020 Jeffrey Hennick
 *
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 *
 */


/*
 23/ 2/20 Documentation; givehelp(). Jeff Hennick
 20/12/ 4 Refine Windows check from substr(2,1) = ':'. Jeff Hennick
 20/12/ 2 Fix for relative filepath.  Jeff Hennick
 99/05/29 use byte[] directly.  ejt
 98/09/06 added stream option
*/

import org.netrexx.njpipes.pipes.

options nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.stages

class diskw extends stage

method run() public

rc  = int 0
blk = boolean 1

bo = [byte 0]
bc = Class

    file = arg()
    if file.word(1).upper()='STREAM' then do
       blk = 0
       file = file.subword(2)
    end

    if file.pos('.\\') > 0 | file.left(1) = '\\' | file.substr(2,2) = ':\\' then
       file = file.changestr("\\","/")       -- fix any Windows spec
    if file.left(1) = '/' | file.substr(2,2) = ':/' then  -- absolute path already
      nop
    else do
       workDir = File("").getAbsolutePath()  -- find out where the working directory is
       file = workDir || '/' || file         -- make a messy absolute path for our file, maybe with relative parts
    end

    do
       peekto()                                  -- do nothing if no input
       do
          out0 = boolean 1                       -- pass thru if connected
          selectOutput(0)
       catch StageError
          out0 = 0
       end
       if blk then
          do
             outFile = FileWriter(String file)
             out = BufferedWriter(outFile)
             loop forever
                line = peekto()
                if line<>null then do
                   if String>=line then
                      d = String line
                   else
                      d = line.toString()
                   out.write(d,0,d.length())
                end
                out.newLine()
                if out0 then
                   output(line)
                readto()
             catch StageError
                signal StageError
             catch ee=IOException
                Emsg(13,'Error - 'ee.getMessage())
             finally
                do
                   out.close()
                catch ee=IOException
                   Emsg(13,'Error - 'ee.getMessage())
                end
             end
          end
       else
          do
             bc = bo.getClass()
             b = byte[]
             boutFile = DataOutputStream(FileOutputStream(String file))
             bout = BufferedOutputStream(boutFile)
             loop forever
                line = peekto()
                if line<>null then do
                   select
                      when bc.isInstance(line) then
                         b = byte[] line
                      when String>=line then
                         b = (String line).getBytes()
                      otherwise
                         b = line.toString().getBytes()
                   end
                   bout.write(b,0,b.length)
                end
                if out0 then
                   output(line)
                readto()
             catch StageError
                signal StageError
             catch ee=IOException
                Emsg(13,'Error - 'ee.getMessage())
             finally
                do
                   bout.close()
                catch ee=IOException
                   Emsg(13,'Error - 'ee.getMessage())
                end
             end
          end
    catch ee=IOException
       Emsg(13,'Error - 'ee.getMessage())
    catch StageError
       rc = rc()
    end

exit(rc*(rc<>12))

method givehelp() static
return -
"/** filew -- Replace or Create a File\n" -
"\n" -
"  >>--+--DISKW--+--string---><\n" -
"      +--FILEW--+\n" -
"      +-->------+\n" -
"*/\n"
