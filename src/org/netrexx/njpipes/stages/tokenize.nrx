-- tokenize.nrx NJPipe Stage
/*
 *  Copyright (C) 1998  Jeffrey Hennick, JHennick@Delphi.Com
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.  
 */
-- 98/ 6/12  DSring.  Add CMS documentation.  JHennick

/** tokenise

   >>--+-TOKENISE-+--delimitedString--+-----------------+-----------------><
       +-TOKENIZE-+                   +-delimitedString-+

*/

package org.netrexx.njpipes.stages

import org.netrexx.njpipes.pipes.

class tokenize extends stage

method run() public

rc      = int  0

   a = arg()

   a1 = DString(a)
   tokens = a1.String
   a2 = a1.Residue

   if a='' then
      rc = 1
   else do
      tokens = tokens || ' '
      ch = tokens.left(1)
      to = ch.copies(tokens.length())
   end

   between = DString(a2).String

   loop while rc=0
      line = Rexx peekto()
      data = line.translate(to,tokens)       -- make a mask for pos(ch)

      i = data.pos(ch)
      loop while i>0                         -- while tokens
         t = line.substr(i,1)                -- extract it
         if i=1 then
            do
               data = data.substr(2)         -- fixup data and line
               line = line.substr(2)
            end
         else
            do
               data = data.substr(i+1)       -- fixup data
               output(line.left(i-1))        -- output data before token
               line = line.substr(i+1)       -- fixup line
            end
         if t \= '' then output(t)           -- output the token if not space
         i = data.pos(ch)
      end
      if line<>'' then                       -- if any more data
         output(line)

      if between<>'' then                    -- add separator if requested
         output(between)

      readto()

   catch StageError
      rc = rc()
   end

exit(rc*(rc<>12))

