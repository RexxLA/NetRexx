-- random.nrx Pipeline stage
/*
 *  Copyright (C) 1997 Ed Tomlinson
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 */

/*
  23/02/22 Documentation; givehelp(). Jeff Hennick
  20/ 5/18  Added *s; nanoTime was currentTimeMills; documentation.  Jeff Hennick
  97/  /    Ed Tomlinson
*/

options binary nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.stages
import org.netrexx.njpipes.pipes.

class random extends stage uses java.lang.System

method run() public

   mask = java.lang.Integer.MAX_VALUE

   n = arg()
   parse n max seed .
   if seed = '' then seed = '*'
   if seed = '*' then seed = nanoTime()
   if max = '' then max = '*'

   if \max.datatype('W') & max \= '*' then
      Emsg(11,'Error - 'getName()' option 'max' must be positive number or *.')

   if max = '*' then max = mask
   else max = max + 1

   if max < 0 then
      Emsg(11,'Error - 'getName()' option 'max' must be positive number or *.')

   x = java.util.Random(seed)

   loop
      output(rexx(x.nextInt(max)))
   catch StageError
      rc = rc()
   end

   exit(rc * (rc<>12))

Method givehelp() static
return -
"/** random -- Generate Pseudorandom Numbers\n" -
"\n" -
" >>--RANDOM--+---------------------------------+----><\n" -
"             | +-*----------+  +-*-----------+ |\n" -
"             +-+-max_number-+--+-------------+-+\n" -
"                               +-seed_number-+\n" -
"\n" -
"  Note: NetRexx Pipelines will be a different sequence than CMS gives\n" -
"  with the same seed. Although each is consistent with the same seed.\n" -
"\n" -
"*/\n"
