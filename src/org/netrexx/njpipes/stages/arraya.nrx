-- arraya.nrx Pipeline stage
/*
 *  Copyright (C) 1997-2011 Ed Tomlinson
 *
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 *
 */

/*
  23/ 2/18 Documentation; givehelp(). Jeff Hennick
  98/12/10  initial
*/

options nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.stages

import org.netrexx.njpipes.pipes.

class arraya extends stage

method run() public
--trace results

    out1 = boolean 1
    do
       do
         obj = peekto()  -- wait for input
       catch StageError
          rc = rc()
       end
       v = object[] arg(null)
       st = Rexx
       st = Rexx v[0].toString
       st = st + 1
       loop i = st to v.length-1
          obj = peekto()
-- say '45 i:' obj '*** in ***'
          v[i] = obj
          v[0] = Rexx i
--  say '48 i:' i v[i]
          if out1 then do
             output(obj)
          catch StageError
             out1 = 0
          end
          readto()
       catch StageError
          rc = rc()
       catch ArrayIndexOutOfBoundsException
       end
    catch ClassCastException
--     say 'Arg()' Not a array'
       Emsg(11,'Error - object is not an array')
    end

    do                     -- pass rest of input on secondary
       selectOutput(1)
       shortstreams()
    catch StageError
    end
--o='arrayA '
--loop i = 0 to v.length - 1
--z=v[i]
--if z=null then z="NULL"
--o = o',' i':' z
--end
--say ''
--say o
--say ''

exit(rc*(rc<>12))

method givehelp() static
return -
"/** arraya -- Writes a NetRexx Array\n" -
"\n" -
" >>--ARRAYA--array_name--><\n" -
"\n" -
"NetRexx Pipelines Only.\n" -
"\n" -
"*/\n"
