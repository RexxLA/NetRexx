-- changeregex.nrx NJPipe Stage
/*
 *  Copyright (C) 2020  Jeffrey Hennick, Jeff (at) Jeff (dash) H (dot) com
 *Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 */

/*
 20/ 7 /10 New. From CHANGE and REGEX.  Jeff Hennick
*/

/** changeregex
                                                      +-ONE-+
  >>--CHANGERegex---delimitedString--delimitedString--+-----+----><
                                                      +-ALL-+

*/
options nostrictcase nostrictargs nostrictsignal nobinary

package org.netrexx.njpipes.stages

import org.netrexx.njpipes.pipes.
import java.util.regex.

class changeregex extends stage uses IRange

method run() public

   args = Rexx ''
   rest = Rexx ''
   outl = Rexx ''

   args = arg()

   fds = DString(args)
   from_str = fds.String

   tds = Dstring(fds.Residue())
   to_str = tds.String

   parse tds.Residue() w1 rest

   if rest <> '' then
     Emsg(11, 'Changeregex extra agruments:' rest)

   if w1 <> '' & 'ONE ALL'.wordpos(w1.upper) = 0 then
     Emsg(11, 'Changeregex unexpected agruments:' tds.Residue())

   all = w1.upper = 'ALL'

     /* One time compile */
   do
     pat = Pattern.compile(from_str);
   catch PatternSyntaxException
     Emsg(11, 'Changeregex invalid Java regex pattern:' from_str)
   end

   if all then loop forever
      line = peekto().toString()

      outl = pat.matcher(line).replaceAll(to_str)

      output(outl)

      readto()
   catch StageError
   end

   else loop forever
      line = peekto().toString()

      outl = pat.matcher(line).replaceFirst(to_str)

      output(outl)

      readto()
   catch StageError
   end

   rc = mrc()

exit(rc*(rc<>12))
