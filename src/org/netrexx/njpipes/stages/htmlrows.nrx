-- htmlrows.nrx Pipeline stage
/*
 *  Copyright (C) 2020 Jeffrey Hennick Jeff [a t] Jeff [dash] H [d o t] c o m
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 */

/*
  23/02/21 Documentation; givehelp(). Jeff Hennick
  20/12/10 New. Jeff Hennick
*/


options nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.stages

import org.netrexx.njpipes.pipes.

class htmlrows extends stage

method run()

  args = arg()

  sep = ','
  sepa = getKeyWord(args, 'SEParator', 3, 'Q')
  if sepa[2] \= '' then do
    sep = sepa[2]
    args = sepa[1]
  end

  row = '<tr>'
  endrow = '</tr>'
  rowa = getKeyWord(args, 'ROW', 0, 'Q')
  if rowa[2] \= '' then do
    row = '<tr' rowa[2]'>'
    args = rowa[1]
  end

  yeshead = 0
  head = '<th>'
  endhead = '</th>'
  heada = getKeyWord(args, 'HEAD', 0, 'Q')
  if heada[2] \= '' then do
    head = '<th' heada[2]'>'
    args = heada[1]
    yeshead = 1
  end

  yesdata = 0
  yesdata = 1
  data = '<td>'
  enddata = '</td>'
  dataa = getKeyWord(args, 'DATA', 0, 'Q')
  if dataa[2] \= '' then do
    data = '<td' dataa[2]'>'
    args = dataa[1]
    yesdata = 1
  end

  if args <> '' then
    Emsg(11, 'Extra arguments:' args)

  recone = 1
  loop label Main forever

    record = Rexx peekto()

    recch = 0
    if recone then do
      if yeshead then do
        record = row || head || record.changestr(sep, endhead || head) || endhead || endrow
        recch = 1
      end
      recone = 0
    end
    if \recone & \recch then do
      if yesdata then do
        record = row || data || record.changestr(sep, enddata || data) || enddata || endrow
        recch = 1
      end
    end
    if \recch then do
      record = row || record || endrow
    end

    output(record)

    readto()

  catch stageError
    rc = rc()
  end Main

  Exit(rc*(rc<>12))

Method givehelp() static
return -
"/** htmlrows -- Convert rows to HTML format\n" -
"\n" -
"                              +-SEParator \",\"-----+\n" -
">>--HTMLROWs--+-------------+-+-------------------+-->\n" -
"              +-ROW-QString-+ +-SEParator-QString-+\n" -
"\n" -
"  >--+--------------+-+--------------+--><\n" -
"     +-HEAD-QString-+ +-DATA-QString-+\n" -
"\n" -
"HTMLROW reads rows from its primary input stream and writes them to\n" -
"its primary output stream, altering them to have the proper HTML tags\n" -
"for TABLE ROWS.\n" -
"\n" -
"I.e., it converts\n" -
"  abc,mnop,xyz\n" -
"into\n" -
"  <tr><td>abc</td><td>mnop</td><td>xyz</td></tr>\n" -
"\n" -
"The SEPARATOR QStirng, by default the comma character, can be specified.\n" -
"\n" -
"There are options to put additional data inside the tags.  This could\n" -
"be used for class or style tag options, for example.\n" -
" - ROW QString : puts its information into the <tr>-tags\n" -
" - DATA QString : puts its information into the <td>-tags\n" -
" - HEAD QString : puts its information into the <th>-tags (1)\n" -
"\n" -
"QString is a quoted string of characters.  The quote marks may be\n" -
"either single or double, but must match.  If there are no spaces\n" -
"in the string, the quote marks are optional.\n" -
"\n" -
"(1) If there is a HEAD option, the first row read has <th>-tags\n" -
"    instead of <td>-tags.  It must have a QString of at least \"\".\n" -
"    Succeeding rows have the standard <td>-tags.\n" -
"\n" -
"*/\n"
