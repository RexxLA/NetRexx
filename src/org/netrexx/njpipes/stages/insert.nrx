-- insert.nrx Pipeline stage
/*
 *  Copyright (C) 1997-2020 Ed Tomlinson
 *
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 *
 */

/*
 23/02/21  Documentation; givehelp(). Jeff Hennick
 20/ 5/28  inputRange; rethink bytearray logic; documentation. Jeff Hennick
 15/07/27  add '' as synonym for BEFORE; help tags in documentation. Jeff Hennick
 99/05/29  initial.  ejt
*/

options nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.stages

options binary

import org.netrexx.njpipes.pipes.

/* To use methods in pipes/utils.nrx  add 'uses utils' to the class statement */

class insert extends stage uses java.lang.System, IRange

/* objects shared between the ...setup and run methods */

properties private

before = boolean
str    = rexx
bstr   = byte[]
bcls   = Class
ir     = rexx  0
st     = rexx  0
ed     = rexx  0

/* method to initialize a stage.  Only called once unless the arg() changes */

method insert_setup() private

   a = arg()

   ds  = DString(a)
   str = ds.String
   a   = ds.Residue().upper()

   select
      when a.word(1)='BEFORE', a='' then
         before = 1
      when a.word(1)='AFTER' then
         before = 0
      otherwise
         a = '.' a
--         Emsg(11,'Error - insert found invalid parm 'a)
   end

   parse a . a

   if a <> '' then do
     ri = Get1IRange(a)
     st = ri.StartCol()
     ed = ri.EndCol() +1
     ir = 1
   end
   else ir = 0

   bstr = str.toString().getBytes()
   bcls = bstr.getClass()


method run()

   /* insert objects that need to be reset every invokation here */

   rc  = 0

   do -- to catch the terminating StageError

      /* call ...setup only if required */

      if doSetup() then
         insert_setup()

      /* setup code that must execute every time the stage object runs
       *
       * if there are setup problems then
       *    signal StageError(11,'termplate1 had this error')
       *
       */

      /* body of stage */

      if before then
         loop forever
            bs = 0
            o = peekto()
            if bcls.isInstance(o) then
               do
                  bs = 1
 --                 b = byte[(byte[] o).length+bstr.length]
 --                 arraycopy(bstr,0,b,0,bstr.length)
 --                 arraycopy(o,0,b,bstr.length,(byte[] o).length)
 --                 output(b)
               end
 --           else
               do
                  ro = rexx o
                  if ir then do
                     parse ro l =(st) r
                     oo = l || str || r
                     if bs then output(oo.toString().getBytes())
                     else output(oo)
                  end
                  else do
                     oo = str||ro
                     if bs then output(oo.toString().getBytes())
                     else output(oo)
                  end
               end
            readto()
         catch ClassCastException
            Emsg(11,'Error - Input not a rexx object')
         end
      else
         loop forever
            bs = 0
            o = peekto()
            if bcls.isInstance(o) then
               do
                  bs = 1
--                  b = byte[(byte[] o).length+bstr.length]
--                  arraycopy(o,0,b,0,(byte[] o).length)
--                  arraycopy(bstr,0,b,(byte[] o).length,bstr.length)
--                  output(b)
               end
--            else
               do
                  ro = rexx o
                  if ir then do
                     if ed = '*' then do
                        oo = ro||str
                        if bs then output(oo.toString().getBytes())
                        else output(oo)
                     end
                     else do
                        parse ro l =(ed) r
                        oo = l || str || r
                        if bs then output(oo.toString().getBytes())
                        else output(oo)
                     end
                  end
                  else do
                     oo = ro || str
                     if bs then output(oo.toString().getBytes())
                     else output(oo)
                  end
               end
            readto()
         catch ClassCastException
            Emsg(11,'Error - Input not a rexx object')
         end

   catch StageError
   end

   rc = mrc()

exit(rc*(rc<>12))

method givehelp() static
return -
"/** insert\n" -
"\n" -
"Insert a string into a record.  Will be much more efficient than specs especially\n" -
"if the input is a Byte[]\n" -
"\n" -
"                                  +-BEFORE-+\n" -
" >>--INSERT--| delimitedString |--+--------+---+-------------+--->>\n" -
"                                  +-AFTER--+   +-inputRange--+\n" -
"\n" -
"*/\n"
