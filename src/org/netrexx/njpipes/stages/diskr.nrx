--diskr.nrx Pipeline stage
/*
 *  Copyright (C) 1997-2011 Ed Tomlinson, 2020 Jeffrey Hennick
 *
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 *
 */


/*
 23/ 2/20 Documentation; givehelp(). Jeff Hennick
 20/12/ 4 Refine Windows check from substr(2,1) = ':'. Jeff Hennick
 20/12/ 2 Make filename a clean relative path.  Jeff Hennick
 99/05/29 use byte[] directly.  ejt
 98/09/06 add an stream option
 25/02/19 fix issue #72 absolute path is relative
*/

options nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.stages

import org.netrexx.njpipes.pipes.

class diskr extends stage

method run() public

    file = arg()
    if file.word(1).upper()<>'STREAM' then
       do
         if file.pos('.\\') > 0 | file.left(1) = '\\' | file.substr(2,2) = ':\\' then
            file = file.changestr("\\","/")       -- fix any Windows spec
         if file.left(1) = '/' | file.substr(2,2) = ':/' then  -- absolute path already
            nop
         else do
            workDir = File("").getAbsolutePath()  -- find out where the working directory is
            file = workDir || '/' || file         -- make a messy absolute path for our file, maybe with relative parts
         end

          inFile = Filereader(file)
          in = BufferedReader(inFile)
          loop while in.ready()
             z = counter(1)
             line = rexx in.readLine()
             z = counter(z)
             if line<>null then
                output(line)
          catch StageError
             rc = rc()
          catch e=IOException
             Emsg(13,'Error - '||e.getMessage())
          finally
             counter(z)
             do
                in.close()
             catch e=IOException
                Emsg(13,'Error - '||e.getMessage())
             end
          end
       catch FileNotFoundException
   --     say 'File 'Arg()' Not found'
          Emsg(13,'Error - File "'file'" not found')
       end
    else
       do
          bytes = byte[32768]
          file = file.subword(2)
          binFile = DataInputStream(FileInputStream(String file))
          bin = BufferedInputStream(binFile)
          loop forever
             z = counter(1)
             c = bin.read(bytes)
             z = counter(z)
             if c=-1 then
                leave
             if c=0 then
                iterate
             b = byte[c]
             java.lang.System.arraycopy(bytes,0,b,0,c)
             output(b)
          catch StageError
             rc = rc()
          catch e=IOException
             Emsg(13,'Error - '||e.getMessage())
          finally
             counter(z)
             do
                bin.close()
             catch e=IOException
                Emsg(13,'Error - '||e.getMessage())
             end
          end
       catch FileNotFoundException
   --     say 'File 'file' Not found'
          Emsg(13,'Error - File "'file'" not found')
       end

exit(rc*(rc<>12))

method givehelp() static
return -
"/** diskr -- Read a File\n" -
"\n" -
"  >>--+--DISKR--+--string---><\n" -
"      +--FILER--+\n" -
"      +--<------+\n" -
"*/\n"
