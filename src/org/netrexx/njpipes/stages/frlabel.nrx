-- frlabel.nrx Pipeline stage
/*
 *  Copyright (C) 1998  Jeffrey Hennick, JHennick@Delphi.Com
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 */

/*
  23/ 2/21 Documentation; givehelp(). Jeff Hennick
  98/ 6/10  rc4 --> 12.  Added CMS documentation.  JHennick
*/

options nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.stages

import org.netrexx.njpipes.pipes.

class frlabel extends stage

method run()


   /* variable declarations */
   _labelFound   = boolean  0
   _rc           = int      0
   _Label_len    = int      0
   _output1      = boolean  1
   _output0      = boolean  1

   /* get incoming arguments and associated parameters */
   parse arg() Label
   _Label_len = Label.length()               -- handy to have around for speed


   /* find out which streams we have available */
   do                                           -- enable catch
      selectOutput(1)

      catch StageError
      _output1 = 0
   end

   do                                           -- enable catch
      selectOutput(0)

      catch StageError
      _output0 = 0
   end


   select
       when \ _output0 then
            _rc = 13                            -- no reason to continue without stream 0
       when _Label_len <> 0 then
            loop forever until _labelFound
               _record = Rexx peekto()          -- look at the next record
               if Label = _record.left(_Label_len) then
                  do
                     _labelFound = 1
                     selectOutput(0)
                     shortStreams()

                  catch StageError           -- errors (or end of datastream)
                     _rc = rc()

                     if _rc = 4 then _rc = 12
                  end
               else
                    do
                       if _output1 then
                          do
                             selectOutput(1)
                             output(_record)
                          end
                    end

               if \ _labelFound then
                  readto()

               catch StageError                 -- errors (or end of datastream)
               _rc = rc()
            end
       otherwise
            do
               selectOutput(0)
               shortStreams()

               catch StageError                 -- errors (or end of datastream)
               _rc = rc()
            end
   end

   exit(_rc * (_rc <> 12) )        -- sever streams and leave with Colishaw (tm) retcode

Method givehelp() static
return -
"/** frlabel -- Select Records from the First One with Leading String\n" -
"\n" -
"   >>--+-FRLABEL---+--+--------+------><\n" -
"       +-FROMLABLE-+  +-string-+\n" -
"\n" -
"  Purpose: read records searching for a string starting in column 1. copy all records\n" -
"           thereafter (including the record containing the label) to stream 0.\n" -
"           copy all preceding records to stream 1 (if it exists).\n" -
"\n" -
"           a null argument causes stream 0 to be shorted to output (0).\n" -
"\n" -
"  Contributed by Chuck Moore.\n" -
"\n" -
"**/\n"
