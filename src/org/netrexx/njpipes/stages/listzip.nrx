-- listzip.nrx Pipeline stage
/*
 *  Copyright (C) 2019  R.V. Jansen
 *  Distributed under the ICU 1.8.1 Licence with NO WARRANTIES of ANY kind.
 *  See LICENSE for the licence and information on using, copying, modifying,
 *  and distributing this program.
 *
 */

/*
  23/02/21 Documentation; givehelp(). Jeff Hennick
  19/  /   R.V. Jansen
*/

options nostrictcase nostrictargs nostrictsignal nobinary
package org.netrexx.njpipes.stages
import org.netrexx.njpipes.pipes.
import java.util.

class listzip extends stage

  properties private
  zipEntries = ArrayList

  --trace results
  method run()
    -- listzip must be the first stage in a pipe
    do
      a = arg()
      i = readZip(a).iterator()
      loop while i.hasNext()
      output(i.next())
      end
    catch StageError
      say 'error in listzip'
    end
    rc = rc()
    exit(rc*(rc<>12))

  method readZip(zipFile) returns ArrayList --of Rexx
    do
      this.zipEntries = ArrayList()
      zipFileStream   = FileInputStream(zipFile)
      this.readZipFileStream(zipFileStream)
      return this.zipEntries
    catch IOException
      say "error reading zip file"
      return null
    end

  method readZipFileStream(zipFileStream=InputStream)
    zipInputStream_ = ZipInputStream(zipFileStream)
    zipEntry_       = ZipEntry
    loop forever
      zipEntry_ = zipInputStream_.getNextEntry()
      if zipEntry_ = null then leave
      this.zipEntries.add(zipEntry_.getName())
      if \zipEntry_.isDirectory() then if zipEntry_.getName().endsWith(".zip") then do
        this.readZipFileStream(zipInputStream_) -- recursion
      end
    catch e=IOException
      say "error reading zip file stream" e.toString()
    end -- loop forever

Method givehelp() static
return -
"/** listzip -- List the Files in a Zipped File\n" -
"\n" -
">>---LISTZIP----zipFileName------><\n" -
"\n" -
"*/\n"
