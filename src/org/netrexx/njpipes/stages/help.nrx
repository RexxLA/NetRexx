-- help.nrx NJPipe Stage
/*
 *  Copyright (C) 2023  Jeffrey Hennick, Jeff @ Jeff-H . com
 *  Distributed under the ICU 1.8.1 License with NO WARRANTIES of ANY kind.
 *  See LICENSE for the license and information on using, copying, modifying,
 *  and distributing this program.
 */
/*
*/

options nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.stages

import org.netrexx.njpipes.pipes.

class help extends stage binary

method run()

  parse arg() stage_to_help .
  if stage_to_help = '' then
    say "Usage: HELP stage_name."
  else if stage_to_help = 'HELP' then
    say helphelp()
  else do
    stageClass = class.forName('org.netrexx.njpipes.stages.'stage_to_help)
    helpMethod = stageClass.getMethod('giveHelp',null)
    say helpMethod.invoke(stageClass,null)
  catch java.lang.ClassNotFoundException
    Emsg(11, "Stage" stage_to_help "was not found.")
  catch java.lang.NoSuchMethodException
    Emsg(11, "No Help was found for Stage" stage_to_help".")
  catch java.lang.IllegalAccessException
    Emsg(11, "Illegal Access.")
  catch java.lang.reflect.InvocationTargetException
    Emsg(11, "Reflection Invocation Target Error.")
  end

  loop forever
     aobj = peekto()
     output(aobj)
     readto()
  catch StageError
  end

  rc = mrc()
  exit(rc*(rc<>12))

method helphelp() static
  return -
    "/** help\n" -
    " \n" -
    "   >>--+-HELP--+--------+----------------------->< \n" -
    "       |       +-string-+ \n" -
    " \n" -
    "*/\n"

