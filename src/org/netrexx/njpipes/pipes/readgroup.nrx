/* readgroup - Pipes for NetRexx version 0.50 */

-- diskr arg() !
-- chop before string /--/ !
-- append var new !
-- join * / / !
-- stem new ?
-- var new !
-- -_ap_3: 
options nostrictcase nostrictargs nostrictsignal
package org.netrexx.njpipes.pipes
import org.netrexx.njpipes.stages.
--import org.netrexx.njpipes.tests.


options binary

class readgroup extends pipe final

properties static private

   pool = Stack()

properties private

_s_1 = stage
_s_2 = stage
_s_3 = stage
_s_4 = stage
_s_5 = stage
_s_6 = stage


method setContext(new=Rexx) returns pipe

   setRexx('new',new)

return (pipe this)

method readgroup(a=object null)
   setup(a)

method reset() private

   stage_reset()
   pipe_reset()

   _s_1.stage_reset()
   _s_2.stage_reset()
   _s_3.stage_reset()
   _s_4.stage_reset()
   _s_5.stage_reset()
   _s_6.stage_reset()

method get(a=object null) returns readgroup static

   do
      do protect pool
         e = readgroup pool.pop()
      end
      e.reset()
      e.setArg(a)
   catch EmptyStackException
      e = readgroup(a)
   end
   e.config()
   return e

method setup(a=object) private

   setArg(a)
   setName('readgroup')
   setRunaway(2000)

   _s_1 = diskr()
   _s_1.setName('diskr_1')

   _s_2 = chop()
   _s_2.setName('chop_2')

   _s_3 = append()
   _s_3.setName('append_3')

   _s_4 = join()
   _s_4.setName('join_4')

   _s_5 = stemw()
   _s_5.setName('stemw_5')

   _s_6 = var()
   _s_6.setName('var_6')

   setup2()

   addstage(_s_1)
   addstage(_s_2)
   addstage(_s_3)
   addstage(_s_4)
   addstage(_s_5)
   addstage(_s_6)

method config() private

   connect(_s_1,0,_s_2,0)
   connect(_s_2,0,_s_3,0)
   connect(_s_3,0,_s_4,0)
   connect(_s_4,0,_s_5,0)
   connect(_s_6,0,_s_3,-1)

method setup2() private

   _s_5.setRelPriority(+2)
   _s_3.setRelPriority(+1)
   _s_2.setArg(Rexx "before string /--/")
   _s_4.setArg(Rexx "* / /")
   _s_5.setArg(Rexx "new")
   _s_6.setArg(Rexx "new")


method run()

   _s_1.setArg(arg(),boolean 1)

   go()
   do protect pool
      pool.push(this)
   end

method main(a=String[]) static

   p = readgroup.get(buildArg(a))
   p.runpipe()
   if p.rc()<>0 & p.rc()<>12 then say "RC="p.rc
   ThreadPool.stop()

exit p.rc()

