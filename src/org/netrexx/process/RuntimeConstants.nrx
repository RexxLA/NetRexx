/*
 * Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
/* This module, org.netrexx.process.RuntimeConstants
   is Copyright (c) 2015 Rexx Language Association and has been created under
   the Classpath Exception of GPL version 2.
 */ 

package org.netrexx.process;

/**
 * WARNING: The contents of this source file are not part of any
 * supported API.  Code that depends on them does so at its own risk:
 * they are subject to change or removal without notice.
 */
 class RuntimeConstants public interface 

    /* Signature Characters */
    SIGC_VOID	   = char 'V';
    SIG_VOID	   = String "V";
    SIGC_BOOLEAN   = char 'Z';
    SIG_BOOLEAN	   = String "Z";
    SIGC_BYTE	   = char 'B';
    SIG_BYTE	   = String "B";
    SIGC_	   = char 'C';
    SIG_	   = String "C";
    SIGC_SHORT	   = char 'S';
    SIG_SHORT	   = String "S";
    SIGC_INT	   = char 'I';
    SIG_INT	   = String "I";
    SIGC_LONG	   = char 'J';
    SIG_LONG	   = String "J";
    SIGC_FLOAT	   = char 'F';
    SIG_FLOAT	   = String "F";
    SIGC_DOUBLE	   = char 'D';
    SIG_DOUBLE	   = String "D";
    SIGC_ARRAY	   = char '[';
    SIG_ARRAY	   = String "[";
    SIGC_CLASS	   = char 'L';
    SIG_CLASS	   = String "L";
    SIGC_METHOD	   = char '(';
    SIG_METHOD	   = String "(";
    SIGC_ENDCLASS  = char ';';
    SIG_ENDCLASS   = String ";";
    SIGC_ENDMETHOD = char ')';
    SIG_ENDMETHOD  = String ")";
    SIGC_PACKAGE   = char '/';
    SIG_PACKAGE	   = String "/";

    /* Class File Constants */
    JAVA_MAGIC                   =int 8xcafebabe;
    JAVA_MIN_SUPPORTED_VERSION   =int 45;
    JAVA_MAX_SUPPORTED_VERSION   =int 52;
    JAVA_MAX_SUPPORTED_MINOR_VERSION =int 0;

    /* Generate class file version for 1.1  by default */
    JAVA_DEFAULT_VERSION         =int 45;
    JAVA_DEFAULT_MINOR_VERSION   =int 3;

    /* Constant table */
    CONSTANT_UTF8                =int 1;
    CONSTANT_UNICODE             =int 2;
    CONSTANT_INTEGER             =int 3;
    CONSTANT_FLOAT               =int 4;
    CONSTANT_LONG                =int 5;
    CONSTANT_DOUBLE              =int 6;
    CONSTANT_CLASS               =int 7;
    CONSTANT_STRING              =int 8;
    CONSTANT_FIELD               =int 9;
    CONSTANT_METHOD              =int 10;
    CONSTANT_INTERFACEMETHOD     =int 11;
    CONSTANT_NAMEANDTYPE         =int 12;
    CONSTANT_METHODHANDLE        =int 15;
    CONSTANT_METHODTYPE          =int 16;
    CONSTANT_INVOKEDYNAMIC       =int 18;

    /* Access and modifier flags */
    ACC_PUBLIC	     = int 0x00000001;
    ACC_PRIVATE	     = int 0x00000002;
    ACC_PROTECTED    = int 0x00000004;
    ACC_STATIC	     = int 0x00000008;
    ACC_FINAL	     = int 0x00000010;
    ACC_SYNCHRONIZED = int 0x00000020;
    ACC_VOLATILE     = int 0x00000040;
    ACC_TRANSIENT    = int 0x00000080;
    ACC_NATIVE	     = int 0x00000100;
    ACC_INTERFACE    = int 0x00000200;
    ACC_ABSTRACT     = int 0x00000400;
    ACC_SUPER	     = int 0x00000020;
    ACC_STRICT	     = int 0x00000800;

    /* Type codes */
    T_CLASS                      =int 0x00000002;
    T_BOOLEAN                    =int 0x00000004;
    T_CHAR                       =int 0x00000005;
    T_FLOAT                      =int 0x00000006;
    T_DOUBLE                     =int 0x00000007;
    T_BYTE                       =int 0x00000008;
    T_SHORT                      =int 0x00000009;
    T_INT                        =int 0x0000000a;
    T_LONG                       =int 0x0000000b;

    /* Opcodes */
    opc_try                      =int -3;
    opc_dead                     =int -2;
    opc_label                    =int -1;
    opc_nop                      =int 0;
    opc_aconst_null              =int 1;
    opc_iconst_m1                =int 2;
    opc_iconst_0                 =int 3;
    opc_iconst_1                 =int 4;
    opc_iconst_2                 =int 5;
    opc_iconst_3                 =int 6;
    opc_iconst_4                 =int 7;
    opc_iconst_5                 =int 8;
    opc_lconst_0                 =int 9;
    opc_lconst_1                 =int 10;
    opc_fconst_0                 =int 11;
    opc_fconst_1                 =int 12;
    opc_fconst_2                 =int 13;
    opc_dconst_0                 =int 14;
    opc_dconst_1                 =int 15;
    opc_bipush                   =int 16;
    opc_sipush                   =int 17;
    opc_ldc                      =int 18;
    opc_ldc_w                    =int 19;
    opc_ldc2_w                   =int 20;
    opc_iload                    =int 21;
    opc_lload                    =int 22;
    opc_fload                    =int 23;
    opc_dload                    =int 24;
    opc_aload                    =int 25;
    opc_iload_0                  =int 26;
    opc_iload_1                  =int 27;
    opc_iload_2                  =int 28;
    opc_iload_3                  =int 29;
    opc_lload_0                  =int 30;
    opc_lload_1                  =int 31;
    opc_lload_2                  =int 32;
    opc_lload_3                  =int 33;
    opc_fload_0                  =int 34;
    opc_fload_1                  =int 35;
    opc_fload_2                  =int 36;
    opc_fload_3                  =int 37;
    opc_dload_0                  =int 38;
    opc_dload_1                  =int 39;
    opc_dload_2                  =int 40;
    opc_dload_3                  =int 41;
    opc_aload_0                  =int 42;
    opc_aload_1                  =int 43;
    opc_aload_2                  =int 44;
    opc_aload_3                  =int 45;
    opc_iaload                   =int 46;
    opc_laload                   =int 47;
    opc_faload                   =int 48;
    opc_daload                   =int 49;
    opc_aaload                   =int 50;
    opc_baload                   =int 51;
    opc_caload                   =int 52;
    opc_saload                   =int 53;
    opc_istore                   =int 54;
    opc_lstore                   =int 55;
    opc_fstore                   =int 56;
    opc_dstore                   =int 57;
    opc_astore                   =int 58;
    opc_istore_0                 =int 59;
    opc_istore_1                 =int 60;
    opc_istore_2                 =int 61;
    opc_istore_3                 =int 62;
    opc_lstore_0                 =int 63;
    opc_lstore_1                 =int 64;
    opc_lstore_2                 =int 65;
    opc_lstore_3                 =int 66;
    opc_fstore_0                 =int 67;
    opc_fstore_1                 =int 68;
    opc_fstore_2                 =int 69;
    opc_fstore_3                 =int 70;
    opc_dstore_0                 =int 71;
    opc_dstore_1                 =int 72;
    opc_dstore_2                 =int 73;
    opc_dstore_3                 =int 74;
    opc_astore_0                 =int 75;
    opc_astore_1                 =int 76;
    opc_astore_2                 =int 77;
    opc_astore_3                 =int 78;
    opc_iastore                  =int 79;
    opc_lastore                  =int 80;
    opc_fastore                  =int 81;
    opc_dastore                  =int 82;
    opc_aastore                  =int 83;
    opc_bastore                  =int 84;
    opc_castore                  =int 85;
    opc_sastore                  =int 86;
    opc_pop                      =int 87;
    opc_pop2                     =int 88;
    opc_dup                      =int 89;
    opc_dup_x1                   =int 90;
    opc_dup_x2                   =int 91;
    opc_dup2                     =int 92;
    opc_dup2_x1                  =int 93;
    opc_dup2_x2                  =int 94;
    opc_swap                     =int 95;
    opc_iadd                     =int 96;
    opc_ladd                     =int 97;
    opc_fadd                     =int 98;
    opc_dadd                     =int 99;
    opc_isub                     =int 100;
    opc_lsub                     =int 101;
    opc_fsub                     =int 102;
    opc_dsub                     =int 103;
    opc_imul                     =int 104;
    opc_lmul                     =int 105;
    opc_fmul                     =int 106;
    opc_dmul                     =int 107;
    opc_idiv                     =int 108;
    opc_ldiv                     =int 109;
    opc_fdiv                     =int 110;
    opc_ddiv                     =int 111;
    opc_irem                     =int 112;
    opc_lrem                     =int 113;
    opc_frem                     =int 114;
    opc_drem                     =int 115;
    opc_ineg                     =int 116;
    opc_lneg                     =int 117;
    opc_fneg                     =int 118;
    opc_dneg                     =int 119;
    opc_ishl                     =int 120;
    opc_lshl                     =int 121;
    opc_ishr                     =int 122;
    opc_lshr                     =int 123;
    opc_iushr                    =int 124;
    opc_lushr                    =int 125;
    opc_iand                     =int 126;
    opc_land                     =int 127;
    opc_ior                      =int 128;
    opc_lor                      =int 129;
    opc_ixor                     =int 130;
    opc_lxor                     =int 131;
    opc_iinc                     =int 132;
    opc_i2l                      =int 133;
    opc_i2f                      =int 134;
    opc_i2d                      =int 135;
    opc_l2i                      =int 136;
    opc_l2f                      =int 137;
    opc_l2d                      =int 138;
    opc_f2i                      =int 139;
    opc_f2l                      =int 140;
    opc_f2d                      =int 141;
    opc_d2i                      =int 142;
    opc_d2l                      =int 143;
    opc_d2f                      =int 144;
    opc_i2b                      =int 145;
    opc_i2c                      =int 146;
    opc_i2s                      =int 147;
    opc_lcmp                     =int 148;
    opc_fcmpl                    =int 149;
    opc_fcmpg                    =int 150;
    opc_dcmpl                    =int 151;
    opc_dcmpg                    =int 152;
    opc_ifeq                     =int 153;
    opc_ifne                     =int 154;
    opc_iflt                     =int 155;
    opc_ifge                     =int 156;
    opc_ifgt                     =int 157;
    opc_ifle                     =int 158;
    opc_if_icmpeq                =int 159;
    opc_if_icmpne                =int 160;
    opc_if_icmplt                =int 161;
    opc_if_icmpge                =int 162;
    opc_if_icmpgt                =int 163;
    opc_if_icmple                =int 164;
    opc_if_acmpeq                =int 165;
    opc_if_acmpne                =int 166;
    opc_goto                     =int 167;
    opc_jsr                      =int 168;
    opc_ret                      =int 169;
    opc_tableswitch              =int 170;
    opc_lookupswitch             =int 171;
    opc_ireturn                  =int 172;
    opc_lreturn                  =int 173;
    opc_freturn                  =int 174;
    opc_dreturn                  =int 175;
    opc_areturn                  =int 176;
    opc_return                   =int 177;
    opc_getstatic                =int 178;
    opc_putstatic                =int 179;
    opc_getfield                 =int 180;
    opc_putfield                 =int 181;
    opc_invokevirtual            =int 182;
    opc_invokespecial            =int 183;
    opc_invokestatic             =int 184;
    opc_invokeinterface          =int 185;
    opc_invokedynamic            =int 186;
    opc_new                      =int 187;
    opc_newarray                 =int 188;
    opc_anewarray                =int 189;
    opc_arraylength              =int 190;
    opc_athrow                   =int 191;
    opc_checkcast                =int 192;
    opc_instanceof               =int 193;
    opc_monitorenter             =int 194;
    opc_monitorexit              =int 195;
    opc_wide                     =int 196;
    opc_multianewarray           =int 197;
    opc_ifnull                   =int 198;
    opc_ifnonnull                =int 199;
    opc_goto_w                   =int 200;
    opc_jsr_w                    =int 201;
    opc_breakpoint               =int 202;

    /* Opcode Names */
    opcNames=[String -
        "nop",-
        "aconst_null",-
        "iconst_m1",-
        "iconst_0",-
        "iconst_1",-
        "iconst_2",-
        "iconst_3",-
        "iconst_4",-
        "iconst_5",-
        "lconst_0",-
        "lconst_1",-
        "fconst_0",-
        "fconst_1",-
        "fconst_2",-
        "dconst_0",-
        "dconst_1",-
        "bipush",-
        "sipush",-
        "ldc",-
        "ldc_w",-
        "ldc2_w",-
        "iload",-
        "lload",-
        "fload",-
        "dload",-
        "aload",-
        "iload_0",-
        "iload_1",-
        "iload_2",-
        "iload_3",-
        "lload_0",-
        "lload_1",-
        "lload_2",-
        "lload_3",-
        "fload_0",-
        "fload_1",-
        "fload_2",-
        "fload_3",-
        "dload_0",-
        "dload_1",-
        "dload_2",-
        "dload_3",-
        "aload_0",-
        "aload_1",-
        "aload_2",-
        "aload_3",-
        "iaload",-
        "laload",-
        "faload",-
        "daload",-
        "aaload",-
        "baload",-
        "caload",-
        "saload",-
        "istore",-
        "lstore",-
        "fstore",-
        "dstore",-
        "astore",-
        "istore_0",-
        "istore_1",-
        "istore_2",-
        "istore_3",-
        "lstore_0",-
        "lstore_1",-
        "lstore_2",-
        "lstore_3",-
        "fstore_0",-
        "fstore_1",-
        "fstore_2",-
        "fstore_3",-
        "dstore_0",-
        "dstore_1",-
        "dstore_2",-
        "dstore_3",-
        "astore_0",-
        "astore_1",-
        "astore_2",-
        "astore_3",-
        "iastore",-
        "lastore",-
        "fastore",-
        "dastore",-
        "aastore",-
        "bastore",-
        "castore",-
        "sastore",-
        "pop",-
        "pop2",-
        "dup",-
        "dup_x1",-
        "dup_x2",-
        "dup2",-
        "dup2_x1",-
        "dup2_x2",-
        "swap",-
        "iadd",-
        "ladd",-
        "fadd",-
        "dadd",-
        "isub",-
        "lsub",-
        "fsub",-
        "dsub",-
        "imul",-
        "lmul",-
        "fmul",-
        "dmul",-
        "idiv",-
        "ldiv",-
        "fdiv",-
        "ddiv",-
        "irem",-
        "lrem",-
        "frem",-
        "drem",-
        "ineg",-
        "lneg",-
        "fneg",-
        "dneg",-
        "ishl",-
        "lshl",-
        "ishr",-
        "lshr",-
        "iushr",-
        "lushr",-
        "iand",-
        "land",-
        "ior",-
        "lor",-
        "ixor",-
        "lxor",-
        "iinc",-
        "i2l",-
        "i2f",-
        "i2d",-
        "l2i",-
        "l2f",-
        "l2d",-
        "f2i",-
        "f2l",-
        "f2d",-
        "d2i",-
        "d2l",-
        "d2f",-
        "i2b",-
        "i2c",-
        "i2s",-
        "lcmp",-
        "fcmpl",-
        "fcmpg",-
        "dcmpl",-
        "dcmpg",-
        "ifeq",-
        "ifne",-
        "iflt",-
        "ifge",-
        "ifgt",-
        "ifle",-
        "if_icmpeq",-
        "if_icmpne",-
        "if_icmplt",-
        "if_icmpge",-
        "if_icmpgt",-
        "if_icmple",-
        "if_acmpeq",-
        "if_acmpne",-
        "goto",-
        "jsr",-
        "ret",-
        "tableswitch",-
        "lookupswitch",-
        "ireturn",-
        "lreturn",-
        "freturn",-
        "dreturn",-
        "areturn",-
        "return",-
        "getstatic",-
        "putstatic",-
        "getfield",-
        "putfield",-
        "invokevirtual",-
        "invokespecial",-
        "invokestatic",-
        "invokeinterface",-
        "invokedynamic",-
        "new",-
        "newarray",-
        "anewarray",-
        "arraylength",-
        "athrow",-
        "checkcast",-
        "instanceof",-
        "monitorenter",-
        "monitorexit",-
        "wide",-
        "multianewarray",-
        "ifnull",-
        "ifnonnull",-
        "goto_w",-
        "jsr_w",-
        "breakpoint" -
    ];

    /* Opcode Lengths */
    opcLengths=[int -
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        2,-
        3,-
        2,-
        3,-
        3,-
        2,-
        2,-
        2,-
        2,-
        2,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        2,-
        2,-
        2,-
        2,-
        2,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        3,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        2,-
        99,-
        99,-
        1,-
        1,-
        1,-
        1,-
        1,-
        1,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        3,-
        5,-
        5,-
        3,-
        2,-
        3,-
        1,-
        1,-
        3,-
        3,-
        1,-
        1,-
        0,-
        4,-
        3,-
        3,-
        5,-
        5,-
        1 -
    ];

