/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* Venta language processor                                       mfc */
/* Copyright (c) IBM Corporation 1996, 1998.  All Rights Reserved.    */
/* ------------------------------------------------------------------ */
/* RxChunk                                                            */
/*                                                                    */
/*   An object that represents an output (Java) code chunk.           */
/*                                                                    */
/*   For historical reasons, chunks have a number associated with     */
/*   them, which is their position in the list of chunks.  This       */
/*   number is used for 'insert after' additions.                     */
/*                                                                    */
/*   This could be made a minor class in RxStreamer.                  */
/* ------------------------------------------------------------------ */
/* Change list (see RxLanguage for master change list)                */
/* 1997.10.20 Initial                                                 */
/* ------------------------------------------------------------------ */
package org.netrexx.process
options binary nodecimal

/**   An object that represents an output (Java) code chunk.           */
class RxChunk

 properties shared

  line=int               -- line number of source for this chunk
                         -- [may be 0 if not associated with a line]
  indent=int             -- absolute indention, used if formatting
                         -- [-1 if not an indented chunk]
  postindent=int         -- indention after piece, used if formatting
                         -- [-1 if none]
  sep=boolean            -- 1 if separator afterwards if formatting
  datachars=char[]       -- data string for this chunk
  insert=String          -- string to be concatenated to this chunk
                         -- [null if none]

 /** Constructor */
 method RxChunk(newdata=char[], newline=int,-
                 newsep=boolean 0, newindent=int(-1),-
                 newpostindent=int(-1))
  datachars =newdata
  line      =newline
  sep       =newsep
  indent    =newindent
  postindent=newpostindent

