/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* NetRexx language processor                                     mfc */
/* Copyright (c) IBM Corporation 2000.        All Rights Reserved.    */
/* ------------------------------------------------------------------ */
/* NrBlock                                                            */
/*                                                                    */
/*   An object that represents a generalised block start clause.      */
/*                                                                    */
/*   [Extended by NrDo, NrLoop, and NrSelect.]                        */
/*                                                                    */
/* ------------------------------------------------------------------ */
/* 2000.02.24 Initial                                                 */
/* 2000.02.29 Add block PROTECT handling                              */
/* ------------------------------------------------------------------ */
package org.netrexx.process
options binary nodecimal strictcase strictargs

/**   An object that represents a generalised block start clause.      */
class NrBlock implements RxClauseParser abstract
 properties shared
  catches  =Vector                 -- list of catch RxClauses
  finclause=RxClause               -- finally clause [null if none]
  endclause=RxClause               -- end clause

 properties inheritable
  protcode =RxCode                 -- term for PROTECT object [if any]

 properties private
  rxt      =RxTranslator           -- the boss

 method scan(pass=int) abstract
 method getAssigns returns String[] abstract
 method generate abstract
 method interpret(cursor=RxCursor) abstract

 /** Primary constructor */
 method NrBlock(newrxt=RxTranslator)
  rxt=newrxt

 /** evalProtect -- used to evaluate the PROTECT term during interpretation.
    Arg1 is the context cursor
    returns the value object described by the term
    */
 method evalProtect(cursor=RxCursor) returns Object
  code=rxt.tparser.evalterm(cursor, protcode.begoff, 1) -- this is an RHS term
  return code.value

