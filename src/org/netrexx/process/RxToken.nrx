/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* Venta language processor                                       mfc */
/* Copyright (c) IBM Corporation 1996, 1998.  All Rights Reserved.    */
/* ------------------------------------------------------------------ */
/* RxToken                                                            */
/*                                                                    */
/*   An object that represents a token in the input (source) file.    */
/*                                                                    */
/* ------------------------------------------------------------------ */
/* Change list (see RxLanguage for master change list)                */
/* 1996.05.04 Initial                                                 */
/* ------------------------------------------------------------------ */
package org.netrexx.process
options binary nodecimal strictcase strictargs

class RxToken
 properties public constant
  -- Token types
  SP   =char 'B'    -- Space (blank, whitespace between/before symbols/strings
  END  =char ';'    -- End of clause/statement
                    --   value[0] = EOL, EOS, or EOC
  SYM  =char 'S'    -- Symbol
                    --   value = the symbol
  STR  =char 'L'    -- Literal string
                    --   value = the string [escapes not reduced]
  NUM  =char 'N'    -- Literal number
                    --   value = the number [0x and 0b converted]
  OP   =char 'O'    -- Operator character
                    --   value[0] = the character
  DOT  =char '.'    -- Period
  COMMA=char ','    -- Comma
  LPAR =char '('    -- Left  parenthesis
  RPAR =char ')'    -- Right parenthesis
  LBRK =char '['    -- Left  bracket
  RBRK =char ']'    -- Right bracket

  -- sub-types for END [used by RxClauser, RxTracer, and debugging only]
  -- must be \x0-
  EOS =char '\x01'  -- end of stream/source
  EOL =char '\x02'  -- end of line
  EOI =char '\x03'  -- end of clause implied (e.g., NetRexx THEN)
  EOC =char '\x04'  -- end of clause by explicit separator

 properties public
  type=char              -- lexical (token) type
  line=int               -- line number               [origin 1]
  pos =int               -- position in line          [origin 1]
  len =int               -- length of token in source [characters]
  value=char[]           -- value (as defined for type,  else null)

 /* This constructor lets the object be set up in an inline call */
 method RxToken(newtype=char, -
                newline=int, newpos=int, newlen=int, newvalue=char[])
  type=newtype; line=newline; pos=newpos; len=newlen; value=newvalue

 /* This one is the same, except accepts a single char for value */
 method RxToken(newtype=char, -
                newline=int, newpos=int, newlen=int, newvaluechar=char)
  type=newtype; line=newline; pos=newpos; len=newlen
  value=char[1]; value[0]=newvaluechar


