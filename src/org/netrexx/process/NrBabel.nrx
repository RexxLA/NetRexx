/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* NetRexx language processor                                     mfc */
/* Copyright (c) IBM Corporation 1998, 2005.  All Rights Reserved.    */
/* ------------------------------------------------------------------ */
/* NrBabel                                                            */
/*                                                                    */
/*   This class implements language-specific utility routines.        */
/*                                                                    */
/* ------------------------------------------------------------------ */
/* Master Change list (language changes only)                         */
/* 1996.06.04       Start of port to NetRexx                          */
/* 1996.06.18 0.64  Promote char type to act like a short string      */
/* 1996.06.23 0.65  FOR added to LOOP; negative FOR counts OK [=0]    */
/* 1996.06.25 0.66  LOOP .. OVER                                      */
/* 1996.06.27 0.67  External release of NetRexx in NetRexx            */
/* 1996.07.06 0.70  Say can do partials, improved terms, binary class */
/* 1996.07.29 0.72  Numeric FORM                                      */
/* 1996.08.01 0.73  TRACE                                             */
/* 1996.08.06 0.74  STATIC METHODs and PROPERTIES                     */
/* 1996.08.07 0.75  (Release with NRL)                                */
/* 1996.08.13 0.76  Three-pass, improved tracing                      */
/* 1996.08.25 0.77  Options strictcase, CLASS USES, new tracing flags */
/* 1996.09.02 0.79  Use RxClassImage instead of RxPublicAgent, etc.   */
/* 1996.09.06 0.80  Tuning enhancements                               */
/* 1996.09.07 0.81  Fix for JDK 1.0.2                                 */
/* 1996.09.26 0.82  UTF8 support, Unicode in identifiers              */
/* 1996.10.09 0.83  [no]logo, new error-handling, initialized locals  */
/* 1996.10.29 0.84  mostly clean-ups and new Rexx methods             */
/* 1996.11.09 0.85  real error messages, better Findclass/import      */
/* 1996.11.14 0.86  revised findclass/findfield/issubclass, etc.      */
/* 1996.12.01 0.88  power operator, double->Rexx, format, compact...  */
/* 1996.12.17 0.90  separate crossref output file; move to COM.ibm    */
/* 1997.01.03 1.00  language definition complete                      */
/* 1997.02.06       [refresh]                                         */
/* 1997.02.18       [] Indirect properties (access methods, etc.)     */
/* 1997.03.13       [] NODECIMAL [+add Tablet erample]                */
/* 1997.04.15       [] ClassPool, many reorganizations                */
/* 1997.05.06       [] Multiple compilations                          */
/* 1997.05.24       [] Cosmetic changes                               */
/* 1997.06.15 1.01  Add supplement; 'deprecated' support              */
/* 1997.06.25 1.02  Arrayinits, SOURCELINE, SHARED, better findfield  */
/* 1997.07.03 1.103 Java 1.1 support, JAR files, ADAPTER classes      */
/* 1997.07.22 1.104 RxClauseParser reorganization; hexbin numbers     */
/* 1997.08.03 1.113 Reference 1.1; BINARY methods, etc.               */
/* 1997.09.01 1.120 Consolidation; RxTermParser & RxExprParser, etc.  */
/* 1997.10.21 1.121 Minor fixes; COMMENTS option                      */
/* 1997.11.27 1.122 Improved COMMENTS format, 1.1.4 JIT workaround    */
/* 1998.01.10 1.125 Minor fixes, SOURCEDIR, EXPLICIT                  */
/* 1998.02.18 1.128 [Java 1.2b2]                                      */
/* 1998.03.08 1.130 Only use $ in names where needed                  */
/* 1998.04.15 1.132 Minor and dependent classes; cast to interface    */
/* 1998.04.19       RxBabel and major reorganizations; TRACE VAR      */
/* 1998.05.26 1.140 TRACE and NUMERIC allowed before CLASS, etc.      */
/* 1998.09.01 1.142 Java 1.2preFCS updates; euro support, int -1, etc */
/* 1998.09.17 1.145 Explicit import disambiguates                     */
/* 1998.12.21 1.148 SELECT with CASE                                  */
/* 1999.05.27 1.150 UNUSED properties                                 */
/* 2000.02.10 1.160 IF 1,2 and WHEN 1,2 [with conditional OR]         */
/* 2000.04.26 1.173 Interpreter complete [NetRexx 2 alpha]            */
/* 2000.08.26 2.00  Consolidated new release -- NetRexx 2             */
/* ------------------------------------------------------------------ */
package org.netrexx.process
options binary nodecimal strictcase strictargs

class NrBabel implements RxBabel
 properties indirect constant
  Name      = Rexx 'NetRexx'  -- language name
  Version   = NrVersion().getVersion() -- of the language nota bene: must be numeric, or DiagParse will fail
  Extension = Rexx 'nrx'      -- default/identifying extension

 properties private
  rxt=RxTranslator            -- the boss
  program=RxProgram           -- our program

 method NrBabel(newrxt=RxTranslator)
  rxt=newrxt                  -- save
  program=rxt.program

 /** Convert RxType to a readable string */
 -- this is language-dependent
 method typeString(type=RxType) returns Rexx
  if type.dimension=0 then return type.classname  -- just classname
  return type.classname'['||','.copies(type.dimension-1)']'

 /** Convert RxType to a concise readable string */
 method typeConcise(type=RxType) returns Rexx
  package=type.getPackageName()
  if package=null then return typeString(type)         -- no package is easy

  usecla=type.getClassFileName().changestr('$', '.')
  if rxt.classer.isambiguous(program, usecla) then     -- ambiguous if short
    return typeString(type)
  -- return short form
  if type.dimension=0 then return usecla               -- no []
  return usecla'['||','.copies(type.dimension-1)']'    -- add [commas]

 /** Convert RxField visibility to a readable String */
 method fieldVisibility(fieldvisib=int) returns Rexx
  select
    when fieldvisib=RxField.VIS_PUB   then vis='public'
    when fieldvisib=RxField.VIS_INHER then vis='inheritable'
    when fieldvisib=RxField.VIS_SHAR  then vis='shared'
    when fieldvisib=RxField.VIS_PRIV  then vis='private'
    end
  return vis

 /** Convert RxField modifiers to a readable String */
 method fieldModifiers(field=RxField) returns Rexx
  mods=fieldVisibility(field.fieldvisib)

  select
    when field.isConstant()   then mods=mods 'constant'
    when field.isFinal()      then mods=mods 'final'
    when field.isStatic()     then mods=mods 'static'
    when field.isAbstract()   then mods=mods 'abstract'
    otherwise /* no modifiers */ nop
      -- note we don't show some [transient, volatile, native]
    end
  if field.isDeprecated() then mods=mods 'deprecated'

  return mods.space()
