/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* Venta language processor                                       mfc */
/* Copyright (c) IBM Corporation 1996, 2000.  All Rights Reserved.    */
/* ------------------------------------------------------------------ */
/* RxError                                                            */
/*                                                                    */
/*   Process a compile-time error.                                    */
/*   When an RxError is constructed, an error message is displayed.   */
/*   and the error recorded.  The caller can continue if the error    */
/*   is not signalled.                                                */
/*                                                                    */
/*   Errors are usually non-terminal, and will be caught by RxParser  */
/*     if signalled.                                                  */
/*   If QuietError is set, error recording and messages are           */
/*     suppressed; this is used during tentative expression           */
/*     evaluation in pass1, during which errors may be temporary.     */
/*                                                                    */
/*   Quits are always terminal.                                       */
/* ------------------------------------------------------------------ */
/* Change list (see RxLanguage for master change list)                */
/* 1996.05.04 Initial                                                 */
/* 1996.10.07 New multi-level, now Throwable again                    */
/* 1997.04.09 quieterror suppression added                            */
/* 1999.09.30 Java generation suppression added                       */
/* ------------------------------------------------------------------ */
package org.netrexx.process
options binary nodecimal strictcase strictargs

class RxError extends RuntimeException

 /* RxError -- construct and display an error message [etc.]
    Arg1 is translator context (rxt)
    Arg2 is token context (null if unknown)
    Arg3 is message identifier (name)
    Arg4 - Arg7 are optional inserts
    */
 method RxError(rxt=RxTranslator, c=RxToken, id=String,-
                i1=Rexx "", i2=Rexx "", i3=Rexx "", i4=Rexx "")
  if rxt.exec then return -- not compiletime; we should not be here

  if rxt.program.quieterror then return -- quietly continue

  RxMessage(rxt.program, RxMessage.ERROR, c, id, i1, i2, i3, i4)
  rxt.program.errorcount=rxt.program.errorcount+1
  rxt.program.flag.java=0                         -- don't need Java anymore

  if rxt.program.flag.diag then do
    if rxt.program.parser\=null then
     if rxt.program.parser.cursor\=null then
     if rxt.program.parser.cursor.curclause\=null then
      say '# Tokens:' rxt.program.parser.cursor.curclause.showtokens()
    Exception("# RxError traceback for" id).printStackTrace()
    end

