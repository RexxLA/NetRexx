/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* NetRexx language processor diagnostics                         mfc */
/* Copyright (c) IBM Corporation 1996, 1997.  All Rights Reserved.    */
/* ------------------------------------------------------------------ */
/* DiagMutual [2 of 4]                                                */
/*                                                                    */
/*   A quad of objects that are mutually interdependent and in        */
/*   separate programs.                                               */
/*                                                                    */
/* ------------------------------------------------------------------ */
/* Change list (see RxLanguage for master change list)                */
/* 1997.05.01 Initial                                                 */
/* ------------------------------------------------------------------ */
package COM.ibm.netrexx.diag
options binary nostrictcase   -- 'nostrictcase' mixes these options

class DiagMutual2 extends DiagMutual implements DiagMutual3

 properties public
  barprop=22
  ok=boolean 1

 properties private constant
  paw=String 'acrAaL'

 /* Construct a set of tests; raise DiagX if not OK */
 method DiagMutual2(that=DiagMutual)
  super(paw)
  ok=ok & super.pubprop=44
  ok=ok & that.barprop=11
  ok=ok & this.barprop=22
  ok=ok & this.barmeth='2'
  ok=ok & that.barmeth='1'
  ok=ok & super.footprint==paw
  if \ok then signal DiagX('Mutual2')

 method runner(a=DiagMutual2)
  say barmeth

 method barmeth returns char
  return '2'
