/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* netrexx.lang.RexxOperators interface class                         */
/* ------------------------------------------------------------------ */
/* Copyright IBM Corporation, 1996, 1997.  All Rights Reserved.       */
/* Author   Mike Cowlishaw                                            */
/* 96.01.30 Initial version                                           */
/* 96.02.26 NetRexx 0.20 .. settings passed to all operators          */
/*                                                                    */
package netrexx.lang
options binary nodecimal strictargs

/**
   This interface class defines the methods that must be implemented for a
class to fully participate as a primary class in a NetRexx program.
 */

class RexxOperators interface
  /** The ' ' operator.  */
  method OpCcblank(set=RexxSet, rhs=Rexx) returns Rexx
  /** The '||' operator.  */
  method OpCc(set=RexxSet, rhs=Rexx) returns Rexx

  /** The '+' operator.  */
  method OpAdd(set=RexxSet, rhs=Rexx) returns Rexx
  /** The '-' operator.  */
  method OpSub(set=RexxSet, rhs=Rexx) returns Rexx
  /** The '*' operator.  */
  method OpMult(set=RexxSet, rhs=Rexx) returns Rexx
  /** The '/' operator.  */
  method OpDiv(set=RexxSet, rhs=Rexx) returns Rexx
  /** The '%' operator.  */
  method OpDivI(set=RexxSet, rhs=Rexx) returns Rexx
  /** The '//' operator.  */
  method OpRem(set=RexxSet, rhs=Rexx) returns Rexx
  /** The '**' operator.  */
  method OpPow(set=RexxSet, rhs=Rexx) returns Rexx

  /** The '=' operator.  */
  method OpEq(set=RexxSet, rhs=Rexx) returns boolean
  /** The '\=' operator.  */
  method OpNotEq(set=RexxSet, rhs=Rexx) returns boolean
  /** The '<' operator.  */
  method OpLt(set=RexxSet, rhs=Rexx) returns boolean
  /** The '>' operator.  */
  method OpGt(set=RexxSet, rhs=Rexx) returns boolean
  /** The '<=' operator.  */
  method OpLtEq(set=RexxSet, rhs=Rexx) returns boolean
  /** The '>=' operator.  */
  method OpGtEq(set=RexxSet, rhs=Rexx) returns boolean

  /** The '==' operator.  */
  method OpEqS(set=RexxSet, rhs=Rexx) returns boolean
  /** The '\==' operator.  */
  method OpNotEqS(set=RexxSet, rhs=Rexx) returns boolean
  /** The '<<' operator.  */
  method OpLtS(set=RexxSet, rhs=Rexx) returns boolean
  /** The '>>' operator.  */
  method OpGtS(set=RexxSet, rhs=Rexx) returns boolean
  /** The '<<=' operator.  */
  method OpLtEqS(set=RexxSet, rhs=Rexx) returns boolean
  /** The '>>=' operator.  */
  method OpGtEqS(set=RexxSet, rhs=Rexx) returns boolean

  /** The '|' operator.  */
  method OpOr(set=RexxSet, rhs=Rexx) returns boolean
  /** The '&' operator.  */
  method OpAnd(set=RexxSet, rhs=Rexx) returns boolean
  /** The '&&' operator.  */
  method OpXor(set=RexxSet, rhs=Rexx) returns boolean

  /** The '\' prefix operator.  */
  method OpNot(set=RexxSet) returns boolean
  /** The '+' prefix operator.  */
  method OpPlus(set=RexxSet) returns Rexx
  /** The '-' prefix operator.  */
  method OpMinus(set=RexxSet) returns Rexx
