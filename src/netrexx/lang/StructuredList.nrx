-- Define the StructuredList interface for methods of NetRexx structured lists
package netrexx.lang

/** StructuredList - an interface defining minimum operations to implement NetRexx structured list processing  */

/* required constructors: StructuredList(initiallist=Rexx)  -- creates a structured list object that is not structured until buildlist is called */										

class StructuredList interface
				
	method islist returns Rexx
		-- returns 1 if a list has been structured, 0 if not
		
	method elementcount returns Rexx
		-- returns the number of elements in a structured list (equivalent to mylist["elements"]
		
	method getelement(index=Rexx) returns StructuredList
		-- returns the list element for the specified index (equivalent to mylist[index])

	method getJavaList returns java.util.List
		--	returns a Java List view of a structured list
						
	method index(element=Rexx,start=Rexx)  returns Rexx
		-- returns the first index higher than or equal to start containing the specified element, start defaults to 1 
		
	method insertelement(index=Rexx, element=Rexx ) returns StructuredList
		-- returns a copy of the list with the provided element inserted at the specified index
		
	method replaceanelement(index=Rexx, element=Rexx ) returns StructuredList
		-- returns a copy of the list with the specified element replaced by the provided element
		
	method replaceelement(index=Rexx, element=Rexx ) returns StructuredList
		-- returns a copy of the list with the specified element replaced by the provided element
		
	method deleteanelement(index=Rexx) returns StructuredList
		-- returns a copy of the list with the specified element removed
		
	method deleteelement(index=Rexx) returns StructuredList
		-- returns a copy of the list with the specified element removed
		
	method sublist(fromIndex=Rexx,toIndex=Rexx) returns StructuredList
		-- returns a structured list containing the elements between specified indexes inclusive
	
	method join(input2=StructuredList) returns StructuredList
		-- returns a copy of the list with all elements of the specified list added 
		
	method buildlist(ruleset=Rexx) returns StructuredList
		-- returns a structured list built from the root object value according to the specified ruleset
		
/* optional structured list operations:	
	method append(element=Rexx) returns StructuredList
		adds an element to the end of a structured list
				
	method minval
		returns the minimum numeric element of a structured list
		
	method maxval
		returns the maximum numeric element of a structured list
		
	method sum
		returns the sum of all numeric elements of a structured list
		
	method flatlist
		returns a Rexx object containing all elements and sublists but with all meta-data removed.
		
		method head
			returns the first element in a list
			
		method tail
			returns the sublist containing all elements of a list except for the first element
			
		methods (first, rest) can be equivalent to head and tail
		
		method reverselist
			returns a structured list with elements reversed in order
			
		method count(element=Rexx)
			returns a count of how many times an element is contained in a list
*/		
