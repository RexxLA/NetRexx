/**
 * Class streamdemo is a demo of the NetRexx 4.03 Classic Rexx inspired stream I/O class 
 * <BR>
 * Created on: Wed, 23, Mar 2022 11:59:13 +0100
 */
-- write two lines to the file testdata.txt
lineout('testdata.txt','the first quick brown fox')
lineout('testdata.txt','jumps over the first lazy dog')

-- write two lines to the file testdata2.txt
lineout('testdata2.txt','the second quick brown fox')
lineout('testdata2.txt','jumps over the second lazy dog')

-- close the file
stream('testdata.txt','c','CLOSE')

-- see if it exists. Returns the full path
say stream('testdata.txt','c','QUERY EXISTS')
-- query its size. Should be 56 bytes
say stream('testdata.txt','c','QUERY SIZE')

-- display lines from different files 
say linein('testdata.txt')
say linein('testdata2.txt')
say linein('testdata.txt')

-- close the file
stream('testdata.txt','c','CLOSE')

-- show the lines() function - loop until eof
loop i=1 while lines('testdata.txt') > 0
  say linein('testdata.txt') i
end

-- show the charout function, which outputs UTF
loop for 15
  charout('testdata.dat','a')
end

-- read back these 15 characters
loop for 15
  say charin('testdata.dat') 'from loop 15'
end

-- close the file
stream('testdata.dat','c','CLOSE')

-- use the chars() function to loop until EOF
loop i=1 while chars('testdata.dat') > 0
  say charin('testdata.dat') 'from chars' i
end

-- display the last modified date of the last file
say stream('testdata.dat','c','QUERY DATETIME')
-- in the post-2000 era
say stream('testdata.dat','c','QUERY TIMESTAMP')

/* ERROR situations */
-- these need to return empty lines, files do not exist
say stream('testdata.dt','c','QUERY EXISTS')
say stream('testdata.dt','c','QUERY SIZE')
say stream('testdata.dt','c','QUERY DATETIME')

-- run over the size of a file
loop for 50
  say linein('testdata.txt')
end
