/** pick tests: pick_tests2.njp */

/*
  23/ 2/ 5 Documentation.  Jeff Hennick
  22/ 1/21 Jeff Hennick
*/

pipe (pick_tests2)

 o: faninany |
    sort |
    specs 2-* 1 |
    cons ?

   literal line 1.1;line 1.2 last;line 2.1;line 2;Line 2.2;LIne 2.3 LAST;LINE 3.1 last |
   split ; |
   d: fanout ?

-- pick from dstring ?
   d: |
   pick from 6.3 = /2.2/ |
   c1: compare any ~2# 1 pick from dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal Line 2.2;LIne 2.3 LAST;LINE 3.1 last  |
   split ; |
   c1: ?

-- pick from after dstring ?
   d: |
   pick from after 6.3 = /2.2/ |
   c2: compare any ~2# 2 pick from after dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal LIne 2.3 LAST;LINE 3.1 last  |
   split ; |
   c2: ?

-- pick from dstring to dstring ?
   d: |
   pick from 6.3 = /2.2/ to 6.3 = /2.3/|
   c3: compare any ~2# 3 pick from dstring to dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal Line 2.2  |
   split ; |
   c3: ?

-- pick from dstring to after dstring ?
   d: |
   pick from 6.3 = /2.2/ to after 6.3 = /2.3/|
   c4: compare any ~2# 4 pick from dstring to after dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal Line 2.2;LIne 2.3 LAST  |
   split ; |
   c4: ?

-- pick from dstring count ?
   d: |
   pick from 6.3 = /2.2/ count 2 |
   c5: compare any ~2# 5 pick from dstring count ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal Line 2.2;LIne 2.3 LAST |
   split ; |
   c5: ?

-- pick from dstring count high ?
   d: |
   pick from 6.3 = /2.2/ count 10|
   c6: compare any ~2# 6 pick from dstring count high ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal Line 2.2;LIne 2.3 LAST;LINE 3.1 last |
   split ; |
   c6: ?

-- pick while ?
   d: |
   pick while 1.4 == /line/ |
   c7: compare any ~2# 7 pick while ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal line 1.1;line 1.2 last;line 2.1;line 2 |
   split ; |
   c7: ?

-- pick to dstring ?
   d: |
   pick to 6.3 == /2.3/ |
   c8: compare any ~2# 8 pick to dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal line 1.1;line 1.2 last;line 2.1;line 2;Line 2.2 |
   split ; |
   c8: ?


-- pick to after dstring ?
   d: |
   pick to after 6.3 == /2.3/ |
   c9: compare any ~2# 9 pick to after dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal line 1.1;line 1.2 last;line 2.1;line 2;Line 2.2;LIne 2.3 LAST |
   split ; |
   c9: ?


-- pick from after dstring to after dstring ?
   d: |
   pick from after 6.3 = /2.2/ to after 6.3 = /2.3/|
   c10: compare any ~2#10 pick from after dstring to after dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal LIne 2.3 LAST  |
   split ; |
   c10:


/** pick

          +--NOPAD-----+
>>--PICK--+------------+--+----------------------+--+---------------+-->
          +--PAD-xorc--+  +--LINENUMBERS--(1)(3)-+  +--| ANYcase |--+
                          +--LN--(1)(3)----------+

>--+--+---------------------------+--| List |--+--><
   |  +--+--FROM--+--+---------+--+            |
   |  |  +--TO----+  +--AFTER--+  |            |
   |  +--WHILE--------------------+            |
   +---| Fromto |------------------------------+

Fromto:
|--FROM--+---------+--| List |--+--TO--+---------+--| List |--+--|
         +--AFTER--+            |      +--AFTER--+            |
                                +--COUNT-number---------------+

List:
|--+---------------------------+--| Test |--|
   +--| List |--+--AND--(4)-+--+
                +--OR--(4)--+

Test:
|--| RangeString |--+--| NonEqualOp |--| RangeString |--+--|
                    +--| EqualOp |--| CommaList |-------+

CommaList:
   +------(3)(6)-------+
   +---,--(4)----------+
|--v--| RangeString |--+--|

RangeString:
|--+--+----------------------------------------+--inputRange--+--|
   |  +--PREVIOUS--(2)(3)--+-------------------|              |
   |                       +--NOFIRST--(5)(3)--+              |
   +--delimitedString-----------------------------------------+
   +--number+--(4)--------------------------------------------+

EqualOp:
"strict"
==  ¬==  <<  <<=  >>  >>=  IN  NOTIN  \== (3)  ^== (3)

"numeric"
=  ¬=  <  <=  >  >=  \= (3) ^= (3)

ANYcase:
ANYcase  CASEANY  CASEIGNORE  CASELESS  IGNORECASE

Notes:
(1) NetRexx only. Inserts the original record number followed by a SPACE
    at the beginning of each output record.
(2) NetRexx only. Uses the data from the previous record.  Before the first
    record, this is Rexx "".
(3) NetRexx Pipelines only.  Not yet in CMS Pipelines.
(4) CMS Pipelines only.  Not yet in NetRexx Pipelines.
(5) NetRexx Only. Uses first record data for first record instead of previous "".
(6) CMS uses ",", NetRexx does not.  CMS limits to right side, NetRexx allows
    on the left, too; also with any comparison op.
    NetRexx concats the several ranges.

*/

