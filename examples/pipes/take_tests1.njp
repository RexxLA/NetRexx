-- tests for TAKE stage

/** take

             +-FIRST-+  +-1----------+
   >>--TAKE--+-------+--+------------+--+----------+-----------------------------><
             +-LAST--+  +-snumber(2)-+  +-BYTEs(1)-+
                        +-*----------+
  (1) CMS must be BYTES
  (2) CMS only number; njpipe: minus reverses first/last

*/

-- 19/09/15

pipe (take_tests1)

 o: faninany |
    sort |
    specs 2-* 1 |
    console ?

-- take ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   take |
   c1: compare any ~2#  1 take ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r1; |
   split ; |
   c1: ?

-- take first ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   take first |
   c2: compare any ~2#  2 take first ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r1 |
   split ; |
   c2: ?

-- take first number ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   take first 3 |
   c3: compare any ~2#  3 first 3 ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r1;r2;r3 |
   split ; |
   c3: ?

-- take last ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   take last |
   c4: compare any ~2#  4 last ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r6 |
   split ; |
   c4: ?

-- take last number ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   take last 2 |
   c5: compare any ~2#  5 last 2 ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r5;r6 |
   split ; |
   c5: ?

-- take (secondary) ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   t: take ?
   t: |
   c6: compare any ~2#  6 take (secondary) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r2;r3;r4;r5;r6 |
   split ; |
   c6: ?

-- take last (secondary) ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   t7: take last ?
   t7: |
   c7: compare any ~2#  7 last (secondary) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r1;r2;r3;r4;r5 |
   split ; |
   c7: ?

-- take bytes ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   take bytes |
   c8: compare any ~2#  8 bytes ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r |
   split ; |
   c8: ?

-- take number bytes ?
   literal r1;r2;r3;r4;r5;r6 |
   split ; |
   take 5 bytes |
   c9: compare any ~2#  9 5 bytes ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal r1;r2;r |
   split ; |
   c9: ?
