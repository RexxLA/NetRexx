/** regex

>>--+--REGEX--+--+--------------------------+--regex_Dstring-(1)---><
    +--GREP---+  +-(--| options_string |--)-+

options_string:
   +----------------------------+
|--v-+------------------------+-+--|
     +-Numbers----------------+ (2)
     +-Before-+-1------+------+ (3)
     |        +-number-+      |
     +-After-+-1------+-------+ (3)
     |       +-number-+       |
     +-Context-+-1------+-----+ (4)
     |         +-number-+     |
     +-NOSeparator------------+ (5)
     +-Separator-+-/--/----+--+ (5)
     |           +-DString-+  |
     +-Tertiary---------------+ (6)
     +-COUnt------------------+ (7)

 NetRexx Pipelines only.
 Records matching the RegEx are put out on primary output.
 Records not matching are put out on secondary, if connected, or discarded.

(1) Regex_Dstring is a Java RegEx expresion. Null string passes all records.
(2) Records are prefaced with records number, 10 characters, right justified.
(3) Number of records put out after a matching record.
(4) Number of records put out before and after a matching record.
(5) Inserted before a group of "before records" or the found record with "after records."
(6) Send all matching records (no numbers) to tertiary output stream, if connected.
(7) Only a count of matches is put out on the primary output stream. (Other options
    probably should not be used with this.)

*/

/*
  21/ 2/ 3 Cleanup spaces after -- and labels.  Jeff Hennick
  20/ 6/28 Jeff Hennick
*/

pipe (regex_tests01)

 o: faninany |
    sort singleok |
    specs 2-* 1 |
    cons ?

-- regex  ?
   literal a1a a2b a3c d4d e5e f6f g7g|
   split |
  regex /c$/ |
   c1: compare any ~2# 1regex ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal :a3c |
   split ; |
   c1: ?

-- numbersregex  ?
   literal a1a a2b a3c d4d e5e f6f g7g|
   split |
  regex (numbers) /c$/ |
   c2: compare any ~2# 2 numbersregex ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal          3:a3c |
   split ; |
   c2: ?

-- numbers (secondary)  ?
   literal a1a a2b a3c d4d e5e f6f g7g|
   split |
   t3: regex (numbers) /c$/ |
   hole ?
   t3: |
   c3: compare any ~2# 3 numbers (secondary) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal          1:a1a;         2:a2b;         4:d4d;         5:e5e;         6:f6f;         7:g7g |
   split ; |
   c3: ?

-- after number  ?
   literal a1a a2b a3c d4d e5e f6f g7g|
   split |
  regex (after 2) /c$/ |
   c4: compare any ~2# 4 after number ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;:a3c;-d4d;-e5e/ |
   split ; |
   c4: ?

-- after number (reset) ?
   literal a1a a2b a3c d4c e5e f6f g7g|
   split |
  regex (after 2) /c$/ |
   c5: compare any ~2# 5 after number (reset)~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;:a3c;:d4c;-e5e;-f6f/ |
   split ; |
   c5: ?

-- separator ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (after 2 separator) /c$/ |
   c6: compare any ~2# 6 separator ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;:a3c;-d4d;-e5e;--;:g7c/ |
   split ; |
   c6: ?

-- separator dstring?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (after 2 separator /% %/) /c$/ |
   c7: compare any ~2# 7 separator dstring~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal % %;:a3c;-d4d;-e5e;% %;:g7c |
   split ; |
   c7: ?

-- noseparator ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (noseparator after 2 separator /% %/) /c$/ |
   c8: compare any ~2# 8 noseparator ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal :a3c;-d4d;-e5e;:g7c |
   split ; |
   c8: ?

-- before separator ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (before 2 separator ) /c$/ |
   c9: compare any ~2# 9 before separator ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;-a1a;-a2b;:a3c;--;-e5e;-f6f;:g7c/ |
   split ; |
   c9: ?

-- before 1 ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (before 1 separator ) /c$/ |
   c10: compare any ~2#10 before 1 ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;-a2b;:a3c;--;-f6f;:g7c/ |
   split ; |
   c10: ?

-- before 0 ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (before 0 separator ) /c$/ |
   c11: compare any ~2#11 before 0 ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /:a3c;:g7c/ |
   split ; |
   c11: ?

-- before 5 ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (before 5 separator ) /c$/ |
   c12: compare any ~2#12 before 5 ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;-a1a;-a2b;:a3c;--;-a2b;-a3c;-d4d;-e5e;-f6f;:g7c/ |
   split ; |
   c12: ?

-- context 2 ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (context 2 separator ) /c$/ |
   c13: compare any ~2#13 context 2 ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;-a1a;-a2b;:a3c;-d4d;-e5e;--;-e5e;-f6f;:g7c/ |
   split ; |
   c13: ?

-- before (default - early) ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (before separator ) /c$/ |
   c14: compare any ~2#14 before (default - early) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;-a2b;:a3c;--;-f6f;:g7c/ |
   split ; |
   c14: ?

-- before (default - last) ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (before separator ) /c$/ |
   c15: compare any ~2#15 before (default - last) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;-a2b;:a3c;--;-f6f;:g7c/ |
   split ; |
   c15: ?

-- before (abbrevs) ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (b sep ) /c$/ |
   c16: compare any ~2#16 before (abbrevs) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /--;-a2b;:a3c;--;-f6f;:g7c/ |
   split ; |
   c16: ?

-- number before  ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
  regex (n b nosep ) /c$/ |
   c17: compare any ~2#17 number before ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /         2-a2b;         3:a3c;         6-f6f;         7:g7c/ |
   split ; |
   c17: ?

-- number before (tertiary) ?
   literal a1a a2b a3c d4d e5e f6f g7c|
   split |
   r18: regex (n b ter ) /c$/ |
   hole ?
   r18: |
   hole ?
   r18: |
   c18: compare any ~2#18 number before (tertiary) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   strliteral /a3c;g7c/ |
   split ; |
   c18: ?

-- regex  count ?
   literal a1a a2b a3c d4d e5e f6f g7g|
   split |
  regex ( count ) /^a/ |
   c19: compare any ~2#19regex count ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal 3 |
   split ; |
   c19: ?
