
/** split

   >>--SPLIT--+---------+--+-----------------+----------------------------->
              +-ANYCase-+  +-MINimum--number-+

      +-AT----------------------+           +-BLANK------------------+
   >--+-------------------------+--+-----+--+------------------------+----><
      +-+---------+--+-BEFORE-+-+  +-NOT-+  +-+ target +--+--------+-+
        +-snumber-+  +-AFTER--+                           +-number-+

   target:
   +--+-xrange----------------------+--------------------------------------+
      +-+-STRing-+--delimitedString-+
        +-ANYof--+
*/

pipe (split_tests2)

 o: faninany |
    sort |
    specs 2-* 1 |
    console ?

-- split snumber after xrange (single) ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split 3 after i |
   c11: compare any ~2#11 split snumber after xrange (single) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal NetRexx is i;ntended as a diale;ct of Rexx that can be efficie;nt and portable. |
   split ; |
   c11: ?

-- split snumber after xrange (negative, single) ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split -3 after i |
   c12: compare any ~2#12 split snumber after xrange (negative, single) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal NetRex;x i;s intended as a; dialect of Rexx that can be e;ff;icient and portable. |
   split ; |
   c12: ?

-- split anycase snumber after xrange (single) ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split anycas 3 after r |
   c13: compare any ~2#13 split anycase snumber after xrange (single) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal NetRexx; is intended as a dialect of Rexx; that can be efficient and portab;le. |
   split ; |
   c13: ?

-- split snumber after anyof xrange (range) ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split 3 after anyof /r-t/ |
   c14: compare any ~2#14 split snumber after anyof xrange (range) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal NetRex;x is intend;ed as a dialect of; Rexx that; can be efficient an;d portab;le. |
   split ; |
   c14: ?

-- split anycase snumber after anyof xrange (range) ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split anycase 3 after anyof /r-t/ |
   c15: compare any ~2#15 split anycase snumber after anyof xrange (range) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal NetRex;x is intend;ed as a dialect of; Rexx; that; can be efficient an;d portab;le. |
   split ; |
   c15: ?

-- split anycase snumber after anyof xrange (negative, range) ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split anycase -3 after r-t |
   c16: compare any ~2#16 split anycase snumber after anyof xrange (negative, range) ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal N;etRexx; is;intended; as a dial;ect o;f Rex;x t;hat can be effici;ent and;p;ortable. |
   split ; |
   c16: ?

-- split snumber after string dstring ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split 3 after string /Rexx/ |
   c17: compare any ~2#17 split snumber after string dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal NetRexx is; intended as a dialect of Rexx th;at can be efficient and portable. |
   split ; |
   c17: ?

-- split snumber before string dstring ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split 2 before string /Rexx/ |
   c18: compare any ~2#18 split snumber before string dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal N;etRexx is intended as a dialect o;f Rexx that can be efficient and portable. |
   split ; |
   c18: ?

-- split before string dstring ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split before string /Rexx/ |
   c19: compare any ~2#19 split before string dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal Net;Rexx is intended as a dialect of;Rexx that can be efficient and portable. |
   split ; |
   c19: ?

-- split anycase before string dstring ?
   literal NetRexx is intended as a dialect of Rexx that can be efficient and portable. |
   split anycase before string /n/ |
   c20: compare any ~2#20 split anycase before string dstring ~ equal ~*OK*~ notequal ~**FAIL**  at rec \\c col \\b.~ less /Less:\nActual:\n\\p\nExpected:\n\\s\n/ more /More:\nActual:\n\\p\nExpected:\n\\s\n/ |
   o: ?
   literal NetRexx is i;nte;nded as a dialect of Rexx that ca;n be efficie;nt a;nd portable. |
   split ; |
   c20: ?
