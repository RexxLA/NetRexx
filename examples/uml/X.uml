@startuml
set separator none
interface RxClauseParser {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +scan (int)
}
class NrAddress {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrAddress (RxTranslator)
 +scan (int)
 +scanWITH (Rexx)
 +scanWithWhat (Rexx, Rexx, Rexx)
 -addr : Rexx
 -addressing : boolean
 -code : RxCode
 -expr : RxExpr
 -parser : RxParser
 -rxt : RxTranslator
 -tclass : RxClass
 -tmethod : RxMethod
 -tokens : RxToken[]
 -with : Rexx
}
class NrAnnotate {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrAnnotate (RxTranslator)
 +scan (int)
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrAssign {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrAssign (RxTranslator)
 +process (RxCode, int)
 +scan (int)
 -conv : RxConvert
 -converter : RxConverter
 -deprecated : boolean
 -javaline : Rexx
 -lhs : RxCode
 -lhtype : RxType
 -parser : RxParser
 -pcursor : RxCursor
 -pooler : RxVarpool
 -rhs : RxCode
 -rhslitexpr : boolean
 -rxt : RxTranslator
 -tokens : RxToken[]
 -tracename : Rexx
 -tracenames : String[]
 -tracetag : char
 -unknownrhs : String
}
abstract class NrBlock {
 +evalProtect (RxCursor)
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrBlock (RxTranslator)
 +scan (int)
 ~catches : Vector
 ~endclause : RxClause
 ~finclause : RxClause
 protcode : RxCode
 -rxt : RxTranslator
}
class NrCatch {
 +canCatch (RxCursor, RxSignal)
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrCatch (RxTranslator)
 +scan (int)
 -catassign : Rexx
 -catinfo : RxClassInfo
 -catname : Rexx
 -cattemp : Rexx
 -parser : RxParser
 -pcursor : RxCursor
 -pooler : RxVarpool
 -rxt : RxTranslator
 -tokens : RxToken[]
 -tokname : RxToken
 -topblock : NrBlock
}
class RxClass {
 +addimplements (Vector, RxClassInfo)
 +beginclass (RxToken, int)
 +beginclass2 (int)
 -checkclass (Rexx, RxToken)
 +closeclasses (int)
 +defaultscan (int)
 +endclass ()
 -endclassx ()
 +generate ()
 +getAssigns ()
 -getclass (int)
 +interpret (RxCursor)
 +RxClass (RxTranslator)
 +scan (int)
 +scan0 ()
 +scan05 ()
 +scan1 ()
 +scan15 ()
 +scan2 ()
 +setAnnotation (Rexx)
 +showxref2 (RxCursor)
 ~abstracts : int
 -classAnnotation : Rexx
 ~classbinary : boolean
 ~classclauses : RxClause
 -classer : RxClasser
 ~classinfo : RxClassInfo
 ~classmethods : Vector
 ~classname : Rexx
 ~classnum : int
 ~classprogram : RxProgram
 ~classpropatts : int
 ~classprotopool : Hashtable
 ~classrunnumer : RexxSet
 ~classruntrace : RexxTrace
 ~classset : String
 -classtoken : RxToken
 ~classtrace : String
 ~classtracevars : Rexx
 ~classusei : RxClassInfo[]
 ~constant : int
 ~constantchunk : int
 ~constants : Rexx
 ~constructors : int
 ~curaddress : Rexx
 ~curcpool : Hashtable
 -deptok : RxToken
 -dummies : Vector
 -extend : Rexx
 -exttok : RxToken
 -getclassnext : int
 ~hadtrace : boolean
 -implerror : Vector
 -implist : Vector
 -imptoks : Vector
 ~methods : int
 ~nonstatics : int
 -objectinfo : RxClassInfo
 -packassumed : Rexx
 -parentinfo : RxClassInfo
 -parser : RxParser
 -pcursor : RxCursor
 -pooler : RxVarpool
 ~props : int
 -pubtok : RxToken
 -rxt : RxTranslator
 -sourcenamevar : String
 -tokens : RxToken[]
 ~tracelevel : int
 ~uniques : int
 -uselist : Vector
 -usetoks : Vector
 ~varindirs : Vector
 ~varlist : Vector
}
class NrDo {
 +endinitial ()
 +generate ()
 +getAssigns ()
 +getBinary ()
 +interpret (RxCursor)
 +NrDo (RxTranslator)
 +scan (int)
 +setBinary (boolean)
 -dobinary : boolean
 -labelchunk : int
 -loopitem : NrLoop
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrElse {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrElse (RxTranslator)
 +scan (int)
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrEnd {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrEnd (RxTranslator)
 +scan (int)
 -isprotect : boolean
 -istry : boolean
 -oldlevel : NrLevel
 -parser : RxParser
 -reachable : boolean
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrExit {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrExit (RxTranslator)
 +scan (int)
 -exitjavacode : Rexx
 -parser : RxParser
 -pcursor : RxCursor
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrFinally {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrFinally (RxTranslator)
 +scan (int)
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
 -topblock : NrBlock
}
class NrIf {
 +endif (RxClause)
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrIf (RxTranslator)
 +scan (int)
 -converter : RxConverter
 ~elseclause : RxClause
 -encapsule : boolean
 -endit : char[]
 -exprs : Vector
 ~nextclause : RxClause
 -parser : RxParser
 -pcursor : RxCursor
 -rxt : RxTranslator
 ~thenclause : RxClause
 -tokens : RxToken[]
}
class NrImport {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrImport (RxTranslator)
 +scan (int)
 -classer : RxClasser
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrInterpret {
 -endblock (RxCursor)
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrInterpret (RxTranslator)
 +scan (int)
 -unwind (RxCursor)
 -expr : RxExpr
 -interpret : String
 -olevel : int
 -oparser : RxParser
 -othislevel : NrLevel
 -otracer : RxTracer
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrIterate {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrIterate (RxTranslator)
 +scan (int)
 -control : NrLevel
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrLeave {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrLeave (RxTranslator)
 +scan (int)
 -control : NrLevel
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrLevel {
 +NrLevel (RxClause)
 +NrLevel (Rexx, RxClause)
 +toString ()
 +blocklabel : Rexx
 +bycode : RxCode
 +casecode : RxCode
 +caught : Vector
 +clause : RxClause
 +compop : Rexx
 +dobinarysave : boolean
 +dropout : boolean
 +forcount : int
 +IF_DONE : int
 +IF_ELSE : int
 +IF_ELSEOK : int
 +IF_THEN : int
 +IF_THENEXP : int
 +ifstate : int
 +innerwraps : boolean
 +javalabel : Rexx
 +key : Rexx
 +keytoken : RxToken
 +lastterm : boolean
 +loopvar : RxVariable
 +loopvarname : Rexx
 +needend : boolean
 +nextone : boolean
 +oversnap : Vector
 +prev : NrLevel
 +SEL_ALLOK : int
 +SEL_OTHER : int
 +SEL_THEN : int
 +SEL_THENEXP : int
 +SEL_WHENEXP : int
 +selstate : int
 +signals : Vector
 +terminal : boolean
 +thisone : boolean
 +tocode : RxCode
 +TRY_CATCH : int
 +TRY_FINAL : int
 +TRY_INIT : int
 +tryadded : boolean
 +trychunk : int
 +trystate : int
}
class NrLoop {
 +endinitial ()
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 -makebyone ()
 +NrLoop (RxTranslator)
 -safelabel (Rexx)
 +scan (int)
 -tracevar (RxCursor, RxVariable)
 -assign : boolean
 -byexpr : RxExpr
 -byonecode : RxCode
 -converter : RxConverter
 -dicttype : RxType
 -exprs : Vector
 -firsttriv : boolean
 -forexpr : RxExpr
 -initexpr : RxExpr
 -iterable : boolean
 -iterabletype : RxType
 -labelchunk : int
 -looplabel : String
 -maytrace : boolean
 -needfirst : boolean
 -overrexx : boolean
 -overterm : RxCode
 -overtype : RxType
 -parser : RxParser
 -pcursor : RxCursor
 -pooler : RxVarpool
 -rxt : RxTranslator
 -toexpr : RxExpr
 -tokby : RxToken
 -tokens : RxToken[]
 -tokfor : RxToken
 -tokto : RxToken
 -tokvar : RxToken
 -tracelevel : int
 -tracename : Rexx
 -tracenames : String[]
 -tracetag : char
 -untilexpr : RxExpr
 -var : RxVariable
 -varcode : RxCode
 -varlook : Rexx
 -varname : Rexx
 -whileexpr : RxExpr
}
class NrMethodcall {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrMethodcall (RxTranslator)
 +process (RxCode, boolean)
 +scan (int)
 -rxt : RxTranslator
 ~special : boolean
 -term : RxCode
}
class RxMethod {
 +beginmethod ()
 +beginmethod2 ()
 +checkprivaterefs ()
 +defaultscan (int)
 +defaultscan1 ()
 +defaultscan2 ()
 +defer (Rexx)
 +dosynthetic (RxField)
 +endmethod ()
 -endmethod2 ()
 +generate ()
 +getAssigns ()
 +getField ()
 +getVisibMod ()
 +interpret (RxCursor)
 +isAbstract ()
 +isNative ()
 +RxMethod (RxTranslator)
 +scan (int)
 +scan1 ()
 +scan2 ()
 +setAnnotation (Rexx)
 +setrettype (RxType, RxToken)
 +synthetic (int, RxField, int, Rexx)
 +toConciseString ()
 +traceargs ()
 -argvar : RxVariable
 -classer : RxClasser
 -classinfo : RxClassInfo
 ~curaddress : Rexx
 -deferred : Rexx
 -defers : int
 -describe : Rexx
 -explicitsignals : Vector
 -impliedreturns : boolean
 -impliedreturnstok : RxToken
 -methodabstract : boolean
 -methodAnnotation : Rexx
 ~methodargcode : RxCode[]
 ~methodargends : String
 -methodargpending : Rexx
 ~methodargvars : RxVariable[]
 -methodatts : int
 ~methodbinary : boolean
 ~methodclause : RxClause
 ~methodclauses : RxClause
 ~methodconstructor : boolean
 ~methoddefault : boolean
 -methoddeprecated : boolean
 -methodempty : boolean
 -methodfields : RxField[]
 ~methodhadnumeric : boolean
 ~methodhadthissuper : boolean
 ~methodmaxtrace : int
 ~methodname : Rexx
 -methodnative : boolean
 ~methodprogram : RxProgram
 -methodpropname : Rexx
 ~methodprotected : boolean
 ~methodprotopool : Hashtable
 ~methodrettype : RxType
 ~methodrettypeknown : boolean
 ~methodset : Rexx
 -methodsetpending : Rexx
 -methodsignalschunks : Rexx
 ~methodstartchunk : int
 ~methodstatic : boolean
 -methodsuperchunk : int
 ~methodsynthetic : boolean
 -methodsyntype : int
 -methodtoken : RxToken
 ~methodtrace : Rexx
 ~methodtracechange : boolean
 ~methodtracedefer : boolean
 -methodtracepending : Rexx
 ~methodtracevars : Rexx
 ~methodtypeisdefault : boolean
 -methodvisib : int
 -optargfirst : int
 -optargtoken : RxToken
 -overrides : Vector
 -parser : RxParser
 -pcursor : RxCursor
 -pooler : RxVarpool
 -rxt : RxTranslator
 -staticandfinal : boolean
 -staticimplied : boolean
 ~SYN_DEFCON : int
 ~SYN_EMPTY : int
 ~SYN_INDIRECT : int
 -tokens : RxToken[]
}
class NrMethod {
 +NrMethod (RxTranslator)
 -classer : RxClasser
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrNop {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrNop (RxTranslator)
 +scan (int)
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrNumeric {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrNumeric (RxTranslator)
 +numupdate (RxCursor)
 +scan (int)
 -code : RxCode
 -conv : RxConvert
 -expr : RxExpr
 -form : boolean
 -numset : RexxSet
 -parser : RxParser
 -pcursor : RxCursor
 -rxt : RxTranslator
 -setprop : Rexx
 -tokens : RxToken[]
}
class NrOptions {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrOptions (RxTranslator)
 +scan (int)
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrOtherwise {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrOtherwise (RxTranslator)
 +scan (int)
 -parser : RxParser
 -rxt : RxTranslator
 -startsel : NrSelect
 -tokens : RxToken[]
}
class NrPackage {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrPackage (RxTranslator)
 +scan (int)
 -packagename : Rexx
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrParse {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrParse (RxTranslator)
 +scan (int)
 -converter : RxConverter
 -ilist : Rexx
 -ins : int
 -olist : Rexx
 -parser : RxParser
 -pcursor : RxCursor
 -pooler : RxVarpool
 -rcla : Rexx
 -rdim : Rexx
 -refs : int
 -rlist : Rexx
 -rxt : RxTranslator
 -term : RxCode
 -termconv : RxConvert
 -tlist : Rexx
 -tokens : RxToken[]
 -tracenames : String[]
 -vin : Rexx
 -vout : Rexx
}
class NrProperties {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrProperties (RxTranslator)
 +scan (int)
 -atts : int
 -keywords : Rexx
 -parser : RxParser
 -pcursor : RxCursor
 -rxt : RxTranslator
 -staticprop : boolean
 -tokens : RxToken[]
}
class NrReturn {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrReturn (RxTranslator)
 +scan (int)
 -expr : RxExpr
 -parser : RxParser
 -pcursor : RxCursor
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrSay {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrSay (RxTranslator)
 +scan (int)
 -expr : RxExpr
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrSelect {
 +endinitial ()
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrSelect (RxTranslator)
 +scan (int)
 -caseexpr : RxExpr
 ~casevarcode : RxCode
 ~dupcheck : Rexx
 -labelchunk : int
 ~mayswitch : boolean
 ~noswitch : boolean
 ~other : RxClause
 -parser : RxParser
 -pcursor : RxCursor
 ~pendings : Vector
 -rxt : RxTranslator
 ~streamer : RxStreamer
 -tokens : RxToken[]
 ~whens : Vector
}
class NrSelect.Pending {
 +out (boolean)
 +Pending (int, Rexx, Rexx)
 -ifcode : Rexx
 -swcode : Rexx
 -where : int
}
class NrSignal {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrSignal (RxTranslator)
 +scan (int)
 -field : RxField
 -noargs : RxCode[]
 -parser : RxParser
 -rxt : RxTranslator
 -term : RxCode
 -tokens : RxToken[]
}
class NrThen {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrThen (RxTranslator)
 +scan (int)
 -parser : RxParser
 -rxt : RxTranslator
 -tokens : RxToken[]
}
class NrTrace {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrTrace (RxTranslator)
 +scan (int)
 -addnames : String[]
 +level : int
 -parser : RxParser
 -pcursor : RxCursor
 -rxt : RxTranslator
 -subnames : String[]
 -tokens : RxToken[]
 -warnkey : char[]
}
class NrWhen {
 +generate ()
 +getAssigns ()
 +interpret (RxCursor)
 +NrWhen (RxTranslator)
 +scan (int)
 -currselstate : int
 -endit : char[]
 -exprs : Vector
 -parser : RxParser
 -rxt : RxTranslator
 -selcase : boolean
 -startsel : NrSelect
 -startselc : RxClause
 -tokens : RxToken[]
 -whenoff : int
}
class RxClasser {
 -accessible (RxCursor, RxClassInfo, RxField, RxToken)
 +add2ImportedClasses (Class)
 +addlookaside (RxClassInfo)
 ~addpackage (String, Hashtable)
 +addshortref (RxClassInfo)
 -argtlist (RxType[])
 +cleanlookaside ()
 +currpackage ()
 +dirfind (String, String, String, boolean, RxProgram, boolean)
 +discardlocals ()
 +findanyclass (RxCursor, Rexx, RxToken)
 +findclass (RxCursor, RxType, RxToken, boolean)
 +findclass (RxCursor, Rexx, RxToken, boolean)
 +findclassbyid (int)
 +findfield (RxCursor, boolean, boolean, boolean, boolean, RxClassInfo, Rexx, RxType[], RxToken, boolean)
 +findfieldbyid (int)
 +findimps (RxCursor, RxClassInfo, RxToken)
 +findknownclass (Rexx)
 -findpackclass (RxCursor, boolean, Rexx, RxToken, boolean)
 ~getpackage (String, boolean)
 +getshortref (String)
 +importclasses (Rexx, boolean, RxProgram, boolean)
 +importclasses (Rexx)
 +initclasspath ()
 +isambiguous (RxProgram, Rexx)
 +ispackage (String)
 +isshortref (String)
 +issubclass (RxCursor, RxClassInfo, RxClassInfo, RxToken)
 +issubclass (RxCursor, RxClassInfo, RxType, RxToken)
 +issubclass (RxCursor, RxType, RxType, RxToken)
 +javakey (String)
 -loadclass (RxCursor, RxClassInfo, RxToken, boolean)
 +modfind (String, String, String, boolean, RxProgram, boolean)
 -packdirfind (String, Hashtable)
 -packdirsearch (File, String, Hashtable, boolean)
 -packmodfind (String)
 +registerfield (RxField)
 +registerfield (RxToken, RxClassInfo, Rexx, RxType, int, int, RxType[], Rexx, RxClauseParser)
 +registerlocalclass (String, String, String, RxToken)
 +RxClasser (RxTranslator, String[])
 -searchfield (RxCursor, boolean, boolean, boolean, boolean, RxClassInfo, RxClassInfo, Rexx, RxType[], RxToken, boolean, boolean)
 -testsubclass (RxCursor, RxClassInfo, RxClassInfo, RxToken, RxType)
 +unimplemented (RxCursor, RxClassInfo, RxClassInfo)
 ~warndep (RxToken, RxClassInfo)
 ~warndep (RxToken, RxField)
 -zipfind (ZipFile, String, String, boolean, RxProgram, boolean, Hashtable)
 -classdefines : Vector
 -classpathpax : Vector
 -classpaths : int
 -classpathseg : Vector
 -classpathzip : Vector
 -classpool : RxClassPool
 -dot : char
 -fsep : char
 -importclasses : Vector
 -isJrt : boolean
 -javakeytable : Hashtable
 -jrtprefix : String
 -localclasses : Vector
 -localfields : Vector
 -modpacktable : Hashtable
 -packagetable : Hashtable
 -psep : char
 -rxt : RxTranslator
 -searchinginterfaces : boolean
 -standpacks : String[]
 -standpacksscope : boolean[]
 -zsep : char
}
class RxClassImage {
 -getclass (int)
 -getref (int)
 -getutf8 (int)
 -getvalue (int)
 +isvisible (String)
 -parseclass ()
 -parsefield (int)
 -parsesig (String)
 -parsesiglist (String)
 +RxClassImage (RxTranslator, RxClassInfo, InputStream, long, RxToken)
 -u1 (int)
 -u2 (int)
 -u4 (int)
 -u8 (int)
 -classinfo : RxClassInfo
 -classname : String
 -classprivate : boolean
 -conoffset : int[]
 +data : byte[]
 -foundname : String
 -getsigrem : String
 +interfaces : String[]
 +isabstract : boolean
 +isaccsuper : boolean
 +isallpublic : boolean
 +isdependent : boolean
 +isdeprecated : boolean
 +isfinal : boolean
 +isinterface : boolean
 +isprivate : boolean
 +ispublic : boolean
 +methfields : RxField[]
 +minors : Vector
 +modifiers : String
 -nextstart : int
 -packend : int
 +parentname : String
 +propfields : RxField[]
 -rxt : RxTranslator
 +supername : String
 +thisfullname : String
 +thisminors : int
 +thisname : String
 +thispackage : String
 +thisparents : int
 +thisshortname : String
 -tok : RxToken
}
class RxClassInfo {
 +getClassObject (ClassLoader)
 +getfieldarray (String)
 +registerfield (String, RxField)
 +RxClassInfo (String, String, Object, Object, boolean, RxProgram, boolean)
 +toString ()
 +ambcheck : boolean
 +ambiguous : boolean
 +children : Vector
 +classid : int
 +classobject : Class
 +entry : Object
 +explicit : boolean
 +fields : Hashtable
 +fileitem : Object
 +fullname : String
 +hidden : boolean
 +imagedata : byte[]
 +impinfos : RxClassInfo[]
 +implied : boolean
 +impnames : String[]
 +importer : RxProgram
 +initialized : boolean
 +isabstract : boolean
 +isadapter : boolean
 +isallpublic : boolean
 +isdependent : boolean
 +isdeprecated : boolean
 +isfinal : boolean
 +isinterface : boolean
 +ispublic : boolean
 +loaded : boolean
 +local : boolean
 +localclass : RxClass
 +lowname : String
 +methlist : Vector
 +minors : int
 +next : RxClassInfo
 +nickable : boolean
 +packname : String
 +parentinfo : RxClassInfo
 +parents : int
 +proplist : Vector
 +shortname : String
 +superinfo : RxClassInfo
 +type : RxType
}
class RxClassPool {
 +discard (RxClassInfo)
 +find (RxProgram, String, String, boolean)
 +invalidatenonlocal (String, String)
 +register (String, String, Object, Object, boolean, RxProgram, boolean)
 +RxClassPool (RxTranslator)
 +stats ()
 +unhide ()
 -hiddenlist : Vector
 -maxint : int
 -rxt : RxTranslator
 -table : RxClassInfo[]
 -tablesize : int
}
class RxPersistClass {
 -byte2char (byte)
 +persist (String, String, byte[])
 +RxPersistClass (Rexx, Rexx, RxTranslator)
 conoffset : int[]
 data : byte[]
 rxt : RxTranslator
 sourcename : Rexx
}
class RxMapClassLoader {
 +findClass (String)
 +RxMapClassLoader (HashMap)
 -classes : HashMap
}
class RxByteArrayJavaClass {
 +getBytes ()
 +openInputStream ()
 +openOutputStream ()
 +RxByteArrayJavaClass (String)
 ~stream : ByteArrayOutputStream
}
class RxType {
 +basetype (int)
 +dump ()
 +equals (Object)
 +getClassFileName ()
 +getClassName ()
 +getClassObject (ClassLoader)
 +getPackageName ()
 +isarray ()
 +isBasePrimitive ()
 +isNull ()
 +isPrimitive ()
 +RxType (Rexx, Rexx, int)
 +RxType (Rexx, int)
 -split (Rexx)
 +toJava ()
 +toJavaSig ()
 +toJavaString (RxType[])
 +toSig ()
 +toString ()
 ~BOOL_CLASS : Rexx
 ~BOOL_TYPE : RxType
 ~BOOLEAN_LITS : Rexx
 ~BYTE_CLASS : Rexx
 ~BYTE_TYPE : RxType
 ~CHAR_CLASS : Rexx
 ~CHAR_TYPE : RxType
 ~CHARARRAY_CLASS : Rexx
 ~CHARARRAY_TYPE : RxType
 ~CHARSEQUENCE_CLASS : Rexx
 ~CHARSEQUENCE_TYPE : RxType
 ~CLASS_CLASS : Rexx
 ~CLASS_TYPE : RxType
 -classfilename : Rexx
 +classname : Rexx
 +dimension : int
 ~DOUBLE_CLASS : Rexx
 ~DOUBLE_TYPE : RxType
 ~EMPTY_TYPES : RxType[]
 ~ENUM_CLASS : Rexx
 ~ENUM_TYPE : RxType
 ~FLOAT_CLASS : Rexx
 ~FLOAT_TYPE : RxType
 -hadprimitive : boolean
 ~INT_CLASS : Rexx
 ~INT_TYPE : RxType
 ~LONG_CLASS : Rexx
 ~LONG_TYPE : RxType
 ~MAP_CLASS : Rexx
 ~MAP_TYPE : RxType
 ~NULL_CLASS : Rexx
 ~NULL_TYPE : RxType
 ~OBJECT_CLASS : Rexx
 ~OBJECT_TYPE : RxType
 -ourclass : Class
 -packagename : Rexx
 -primitive : boolean
 ~PRIMITIVE_SIGS : Rexx
 ~PRIMITIVES : Rexx
 ~REXX_CLASS : Rexx
 ~REXX_TYPE : RxType
 ~REXXADDRESS_CLASS : Rexx
 ~REXXIO_CLASS : Rexx
 ~REXXIO_TYPE : RxType
 ~REXXNOOTHER_CLASS : Rexx
 ~REXXNOOTHER_TYPE : RxType
 ~REXXPARSE_CLASS : Rexx
 ~REXXPARSE_TYPE : RxType
 ~REXXSET_CLASS : Rexx
 ~REXXSET_TYPE : RxType
 ~REXXTRACE_CLASS : Rexx
 ~REXXTRACE_TYPE : RxType
 ~REXXUTIL_CLASS : Rexx
 ~REXXUTIL_TYPE : RxType
 ~SHORT_CLASS : Rexx
 ~SHORT_TYPE : RxType
 ~STRING_CLASS : Rexx
 ~STRING_TYPE : RxType
 ~STRINGARRAY_CLASS : Rexx
 ~STRINGARRAY_TYPE : RxType
 ~THROWABLE_CLASS : Rexx
 ~THROWABLE_TYPE : RxType
 ~VECTOR_CLASS : Rexx
 ~VECTOR_TYPE : RxType
 ~VOID_CLASS : Rexx
 ~VOID_TYPE : RxType
}
class RxField {
 +attributesToJava (int)
 +excepTypes ()
 +isAbstract ()
 +isConstant ()
 +isConstructor ()
 +isDefault ()
 +isDeprecated ()
 +isFinal ()
 +isKnownValue ()
 +isMethod ()
 +isNative ()
 +isProtected ()
 +isStatic ()
 +isSynthetic ()
 +isTransient ()
 +isVolatile ()
 +JVMsig ()
 +RxField (RxProgram, RxClassInfo, Rexx, RxType, int, int, RxType[], Rexx)
 +toConciseString (RxProgram, boolean)
 +toString (RxProgram)
 +visibilityToJava (int)
 +ATT_ABSTRACT : int
 +ATT_CONSTVALUE : int
 +ATT_DEFAULT : int
 +ATT_DEPRECATED : int
 +ATT_FINAL : int
 +ATT_NATIVE : int
 +ATT_NONE : int
 +ATT_PROTECT : int
 +ATT_STATIC : int
 +ATT_SYNTHETIC : int
 +ATT_TRANSIENT : int
 +ATT_VOLATILE : int
 -emptytypes : RxType[]
 +fieldambig : boolean
 +fieldargtypes : RxType[]
 +fieldatts : int
 +fieldconvert : RxConvert[]
 +fieldcost : int
 +fieldcount : int
 +fieldexcep : Rexx
 +fieldhidden : RxClassInfo
 +fieldid : int
 +fieldinfo : RxClassInfo
 +fieldlocal : RxClauseParser
 -fieldmethod : boolean
 +fieldname : Rexx
 +fieldprogram : RxProgram
 +fieldref2 : boolean
 +fieldspecial : RxField
 +fieldtype : RxType
 +fieldvalue : Object
 +fieldvisib : int
 +VIS_INHER : int
 +VIS_PRIV : int
 +VIS_PUB : int
 +VIS_SHAR : int
 +VIS_UNKNOWN : int
 -voidtype : RxType
}
class NetRexxC {
 +checkdirforcompiler (String)
 +clgMain (Rexx, String)
 +findjavacompiler ()
 +main (Rexx, PrintWriter)
 +main (Rexx, String[], PrintWriter, List)
 +main (Rexx, String, PrintWriter, List)
 +main (String[])
 +main2 (String[], PrintWriter)
 +main2 (String[], String[], PrintWriter)
 NetRexxC ()
 -parseline (String[])
 -process (String[], PrintWriter)
 -tenth (long)
 -usage ()
 +validateClassPath ()
 +wildcard (Rexx, Rexx)
 +address : boolean
 +argarray : String[]
 -classlist : java.util.List
 +classpath : String
 +color : boolean
 +compile : boolean
 +compileexplicit : boolean
 +console : boolean
 +crossrefexplicit : boolean
 +deps : int
 +ecj : boolean
 +exec : boolean
 +files : Vector
 +flags : Vector
 +helpreq : boolean
 +implicituses : boolean
 +javac : boolean
 +javaexplicit : boolean
 +keep : boolean
 +keepasjava : boolean
 -logfilename : String
 +madelog : boolean
 -minversion : String
 -programstrings : String[]
 +prompt : boolean
 +savelog : boolean
 +targetvm : Rexx
 +testflag : RxFlag
 +time : boolean
 +usageone : boolean
 +warnexit0 : boolean
}
class RxTranslator {
 -checkflags (Rexx[])
 +compile (boolean)
 +dispose (boolean, boolean)
 -dotranslate (RxSource[])
 +endexec ()
 +exec (String[])
 +getexitvalue ()
 +getProgram ()
 +getstarttime ()
 +main (String[])
 +RxTranslator ()
 +say (Rexx)
 +setaddress (Rexx)
 +setdeps (Rexx)
 +setimplicituses (Rexx)
 +setkeeps (Rexx, Rexx, List, Rexx, Rexx)
 -setlanguage (RxProgram)
 +setlanguages (Rexx[])
 +settargetvm (Rexx)
 -showpendings ()
 +startexec ()
 +summary (boolean)
 +translate (Rexx[], RxSource[], PrintStream, PrintWriter, boolean)
 +translate (Rexx[], Rexx[], PrintStream, PrintWriter, boolean)
 ~address : boolean
 ~babels : RxBabel[]
 -badjavac : boolean
 ~classer : RxClasser
 ~classlist : java.util.List
 ~classpath : String
 ~comp : boolean
 ~compilerChoice : String
 ~converter : RxConverter
 ~convertible : int
 ~deprecateds : Hashtable
 ~deps : boolean
 ~ecj : boolean
 ~eparser : RxExprParser
 ~exec : boolean
 +EXIT_ERROR : int
 +EXIT_OK : int
 +EXIT_WARN : int
 ~exiting : boolean
 ~hadexit : boolean
 ~imports : String[]
 ~interpreter : RxInterpreter
 ~interpreting : boolean
 ~javac : boolean
 ~jsr223Engine : AbstractScriptEngine
 ~keep : boolean
 ~keepasjava : boolean
 ~loader : RxProxyLoader
 ~localpackages : Hashtable
 ~nrxApi : NetRexxA
 ~pass : int
 ~pass0 : boolean
 ~pass1 : boolean
 ~pass2 : boolean
 ~program : RxProgram
 -programlist : RxProgram[]
 +proxyInterpreter : RxInterpreter
 -savecon : PrintStream
 -savelog : PrintWriter
 -starttime : Rexx
 ~superflag : RxFlag
 ~targetvm : Rexx
 ~tparser : RxTermParser
 ~wontexec : boolean
}
class RxTranslator.diagListener {
 +report (Diagnostic)
}
class RxFlag {
 +RxFlag (RxFlag)
 +RxFlag ()
 +setFlag (Rexx)
 +toConciseString ()
 +toString (boolean)
 +usage ()
 +annotations : boolean
 +binary : boolean
 +bytes : boolean
 +comments : boolean
 +compact : boolean
 +crossref : boolean
 +decimal : boolean
 +diag : boolean
 +explicit : boolean
 +format : boolean
 +implicituses : boolean
 +java : boolean
 +logo : boolean
 +maxassign : int
 +model : int
 +replace : boolean
 +sourcedir : boolean
 +strictargs : boolean
 +strictassign : boolean
 +strictcase : boolean
 +strictimport : boolean
 +strictmethods : boolean
 +strictprops : boolean
 +strictsignal : boolean
 +symbols : boolean
 +test : boolean
 +trace : int
 +utf8 : boolean
 +verbose : int
}
class RxParser {
 +addexceptions (boolean, Rexx, RxToken, boolean)
 +checkdupconvar (Rexx, RxToken)
 +checkduplabel (Rexx, RxToken)
 +checknest ()
 +clauses ()
 +crossclass ()
 -deferredClass ()
 +endblock ()
 +hexcheck (char, RxToken)
 +iskey (char[], String)
 +istok (RxToken, RxToken)
 +packstring (char[], RxToken)
 +parseclassbody (boolean)
 +parsemethodbody (boolean)
 +parseprogram ()
 +poplevel ()
 +pushlevel (Rexx)
 +reachcheck ()
 +RxParser (RxTranslator, RxClauser)
 +scraplevel ()
 -statecheck (RxClause)
 -classAnnotation : Rexx
 -clausenum : int
 -clauser : RxClauser
 +cursor : RxCursor
 -defclass : RxClauseParser
 -defmethod : RxClauseParser
 +indention : int
 +lastclass : RxClass
 +level : int
 +programstartchunk : int
 +publicclass : Rexx
 -rxt : RxTranslator
 +thislevel : NrLevel
 -tracer : RxTracer
 +uniques : int
}
class RxClauser {
 -addtoken (RxToken)
 +clause (int)
 +clauses ()
 +match (RxToken[], int)
 -nexttoken ()
 -readline ()
 -reparse (RxToken)
 +RxClauser (RxTranslator, RxSource)
 -BAD : char
 -BPART : byte
 -carray : RxClause[]
 -ccount : int
 -cmt : Rexx
 ~copyright : Rexx
 -DPART : byte
 -EPART : byte
 -intrans : char[]
 -IPART : byte
 -isif : boolean
 -line : char[]
 -linelen : int
 -lineno : int
 -nextpos : int
 -outrans : char[]
 -rxt : RxTranslator
 -source : RxSource
 -tarray : RxToken[]
 -TBD : char
 -tcount : int
 -tranmax : char
 -trantable : char[]
 -XPART : byte
}
class RxClause {
 +RxClause ()
 +showtokens ()
 +toString ()
 +tracelines (RxTranslator)
 +clausenum : int
 +last : RxClause
 +lookaside : RxClauseParser
 +next : RxClause
 +skipend : boolean
 +startprot : boolean
 +tokens : RxToken[]
}
class RxToken {
 +RxToken (char, int, int, int, char)
 +RxToken (char, int, int, int, char[])
 +toString ()
 +AT : char
 +COMMA : char
 +DOT : char
 +END : char
 +EOC : char
 +EOI : char
 +EOL : char
 +EOS : char
 +LBRK : char
 +len : int
 +line : int
 +LPAR : char
 +NUM : char
 +OP : char
 +pos : int
 +RBRK : char
 +RPAR : char
 +SP : char
 +STR : char
 +SYM : char
 +type : char
 +value : char[]
}
class RxExprParser {
 -binarytype (RxType, RxType)
 +codeop (RxCursor, Rexx, RxToken, RxCode, RxCode)
 +evalexpr (RxCursor, boolean, int, char[], Rexx, char, Rexx)
 -getcode (Rexx)
 -getprio (Rexx, RxToken)
 +oneopdo (RxCursor, char[], RxToken, RxCode)
 -opdo (RxCursor, RxToken[], Stack, Stack, Rexx, RxToken, int)
 -optokens (RxToken[], int)
 +parseexpr (RxCursor, boolean, int, char[], Rexx, char, Rexx, RxToken)
 +RxExprParser (RxTranslator)
 -settings ()
 +twoopdo (RxCursor, Rexx, RxToken, RxCode, RxCode)
 -allcompareops : Rexx
 -arithops : Rexx
 -classer : RxClasser
 -compareops : Rexx
 -converter : RxConverter
 ~copyright : Rexx
 -equalityops : Rexx
 -int0 : Integer
 -int1 : Integer
 -logicops : Rexx
 -O_AND : int
 -O_BLANK : int
 -O_CONCAT : int
 -O_CONDOR : int
 -O_DIVIDE : int
 -O_EQ : int
 -O_GT : int
 -O_GTEQ : int
 -O_IDIVIDE : int
 -O_LT : int
 -O_LTEQ : int
 -O_MINUS : int
 -O_NEQ : int
 -O_NOT : int
 -O_OR : int
 -O_PLUS : int
 -O_POWER : int
 -O_REM : int
 -O_SEQ : int
 -O_SGT : int
 -O_SGTEQ : int
 -O_SLT : int
 -O_SLTEQ : int
 -O_SNEQ : int
 -O_TIMES : int
 -O_XOR : int
 -rxt : RxTranslator
 -semicolon : RxExprOpType
}
class RxExprOpType {
 +RxExprOpType (char, RxToken, int, boolean)
 ~isprefix : boolean
 ~off : int
 ~tok : RxToken
 ~type : char
}
class RxTermParser {
 -accexcep (RxCode, Rexx)
 +badstatic (RxCursor, RxVariable, RxToken)
 +badstatic (RxCursor, RxField, RxToken)
 -checkstatic (RxCursor, Rexx, RxToken)
 -codestypeString (RxCursor, RxCode[])
 -codetypes (RxCode[])
 -convertargs (RxCursor, RxToken, RxField, RxCode[], boolean, boolean)
 +evalterm (RxCursor, int, boolean)
 -getParent (RxCursor, Object, RxClassInfo, RxToken)
 -hasE (Rexx)
 -massagestring (RxToken, RxCode)
 -numbertype (RxCode)
 -parsearray (RxCursor, int)
 -parsemethargs (RxCursor, int)
 -parsestem (RxCursor, int)
 +parsesymbol (RxCursor, int)
 +parseterm (RxCursor, int, boolean)
 -rexxnum (RxCode)
 +RxTermParser (RxTranslator)
 -shortestname (RxCursor, RxClassInfo)
 -specialwordcode (RxCursor, Rexx, RxToken, RxCode)
 +uniscape (Rexx)
 +x2o (Rexx)
 -classer : RxClasser
 -converter : RxConverter
 ~copyright : Rexx
 -interpreter : RxInterpreter
 -rxt : RxTranslator
 -specialwords : Rexx
}
class RxCursor {
 +RxCursor (RxProgram, RxClass, RxMethod, RxClause)
 ~CUR_EXCEP : int
 ~CUR_ITER : int
 ~CUR_LEAVE : int
 ~CUR_NOACT : int
 ~CUR_RETURN : int
 ~curact : boolean
 ~curactblock : NrBlock
 ~curacttype : int
 ~curbinary : boolean
 ~curclass : RxClass
 ~curclause : RxClause
 ~curendprot : boolean
 ~curexec : boolean
 ~curjump : RxClause
 ~curlevel : NrLevel
 ~curlpool : Hashtable
 ~curmethod : RxMethod
 ~curnewprot : boolean
 ~curnumer : RexxSet
 ~curparent : Object
 ~curprecall : boolean
 ~curprogram : RxProgram
 ~curpropatts : int
 ~curreturn : Object
 ~curskipone : boolean
 ~curskiptrace : boolean
 ~curstatic : boolean
 ~curthis : Object
 ~curtrace : RexxTrace
 ~intvpool : Hashtable
}
class RxCode {
 +append (RxCode)
 +copy ()
 +dump ()
 +getNext ()
 +isOne ()
 +prepend (RxCode)
 +RxCode (char, RxType, Rexx)
 +RxCode ()
 +toString ()
 ~array : RxArray
 ~begclause : RxClause
 ~begoff : int
 ~constant : boolean
 ~endclause : RxClause
 ~endoff : int
 ~exceptions : Rexx
 ~field : RxField
 ~group : char
 ~isstem : boolean
 ~javacode : Rexx
 -next : RxCode
 ~pentype : RxType
 ~penvalue : Object
 -prev : RxCode
 +S_CCONST : char
 +S_CONSTR : char
 +S_EXPR : char
 +S_FINAL : char
 +S_LIT : char
 +S_METHOD : char
 +S_PROP : char
 +S_TYPE : char
 +S_VAR : char
 +T_UNKNOWN : char
 ~type : RxType
 ~value : Object
 ~wrapped : boolean
}
class RxExpr {
 +evaluate (RxCursor, char, Rexx)
 +firsttoken ()
 +RxExpr (RxTranslator, RxCursor, int, RxCode)
 ~addone : boolean
 ~addzero : boolean
 ~ASSIGN_EXPR : int
 ~CASE_EXPR : int
 ~code : RxCode
 ~conv : RxConvert
 -ender : Rexx
 -endins : char[]
 ~exprtype : int
 ~IF_EXPR : int
 ~litexpr : boolean
 ~LOOP_EXPRB : int
 ~LOOP_EXPRF : int
 ~LOOP_EXPRI : int
 ~LOOP_EXPRT : int
 ~LOOP_EXPRU : int
 ~LOOP_EXPRW : int
 ~NUMERIC_EXPR : int
 ~RETURN_EXPR : int
 -rxt : RxTranslator
 ~SAY_EXPR : int
 -tokens : RxToken[]
 ~type : RxType
 ~WHEN_EXPR : int
}
class RxArray {
 +RxArray (Rexx, boolean, int, int)
 +toString ()
 +arraycode : RxCode[]
 +arrayconstant : boolean
 +arraydef : boolean
 +arraydim : int
 +arraygen : Rexx
 +arraynext : int
}
class RxTracer {
 -cleanup (Rexx)
 +RxTracer (RxTranslator)
 +tracearg (RxVariable, int)
 +traceclause (RxClause, int, String[])
 +tracecode (RxCode, RxToken, char, int, Rexx, boolean)
 ~copyright : Rexx
 -rxt : RxTranslator
}
class RxModel {
 +add (Rexx, Rexx)
 +mark (Rexx)
 +process ()
 +RxModel (RxProgram)
 +scrub (Rexx)
 +unite (Rexx, Rexx)
 -bcnt : int
 -ccls : int
 -cmtd : int
 -cpkg : int
 -ecnt : int
 -IW : int
 -kdx : int
 -kind : Rexx
 -MOLD : Rexx[]
 -NL : Rexx
 -note : Rexx
 -program : RxProgram
 -WS : Rexx
}
class NetRexxA {
 +eAsk ()
 +eAskDark ()
 +eSay (char[])
 +eSay (boolean)
 +eSay (double)
 +eSay (float)
 +eSay (long)
 +eSay (char)
 +eSay (Rexx)
 +eSay (String)
 +eSay (Object)
 +eval (String, String, String, String, String, PrintWriter, PrintStream)
 +exiting ()
 +getClassObject (String, String, int)
 +interpret (String, String, String, String, PrintWriter, PrintStream)
 +NetRexxA ()
 +parse (String[], String[], String[], PrintWriter, PrintStream)
 +parse (String[], String[], PrintWriter, PrintStream)
 +setEngine (NetRexxScriptEngine)
 -savedprogram : String
 -started : boolean
 -translator : RxTranslator
}
class NetRexxI {
 +NetRexxI ()
 +parse (String[], String[], String[], PrintWriter, PrintStream)
 +setEngine (RxScriptEngine)
 ~rxt : RxTranslator
 -started : boolean
}
class RxScriptEngine {
 +createBindings ()
 +eval (Reader, ScriptContext)
 +eval (String, ScriptContext)
 +getFactory ()
 +gettype (Rexx)
 +makeProgram (Rexx)
 +RxScriptEngine (Bindings)
 +RxScriptEngine ()
 +classloader : ClassLoader
 +instance : RxScriptEngine
 -interpreter : NetRexxI
 MY_ENGINE_VERSION : String
 MY_LANGUAGE : String
 MY_LANGUAGE_VERSION : String
 MY_NAME : String
 MY_SHORT_NAME : String
 myFactory : ScriptEngineFactory
 +scriptargs : String
 +scriptflags : String
 +scriptname : String
 +verbose : String
}
class RxScriptEngineFactory {
 +getEngineName ()
 +getEngineVersion ()
 +getExtensions ()
 +getLanguageName ()
 +getLanguageVersion ()
 +getMethodCallSyntax (String, String, String[])
 +getMimeTypes ()
 +getNames ()
 +getOutputStatement (String)
 +getParameter (String)
 +getProgram (String[])
 +getScriptEngine ()
 +RxScriptEngineFactory ()
 -extensions : java.util.List
 -FILEEXT : String
 -mimeTypes : java.util.List
 -MIMETYPES : String[]
 -myScriptEngine : ScriptEngine
 -names : java.util.List
 -NAMES : String[]
}
class RxInterpreter {
 +callMethod (Object, RxField, Object[], RxToken, boolean, boolean)
 +callMethod (Object, RxField, RxCode[], RxToken)
 +callMethod (Object, int, Object[])
 +code2ref (Object, RxType)
 -doProperty (Object, RxField, RxToken, boolean, Object)
 -endblock (RxCursor)
 +endBody (RxCursor)
 +getArrayElementValue (RxCursor, Object, RxType, RxArray, RxToken)
 +getProperty (Object, RxField, RxToken)
 +getStemElementValue (RxCursor, Rexx, RxArray, RxToken)
 +getVar (RxCursor, RxVariable, RxToken)
 -initializeProperties (RxClass, Object)
 +initvalue (RxType)
 +poplevel (RxCursor)
 +proxyInit (int)
 +pushlevel (RxCursor)
 +ref2code (Object, RxType)
 +runfree (RxCursor)
 +runprotected (RxCursor, Object)
 +RxInterpreter (RxTranslator)
 +setArrayElementValue (RxCursor, Object, RxType, RxArray, RxToken, Object)
 +setProperty (Object, RxField, RxToken, Object)
 +setStemElementValue (RxCursor, Rexx, RxArray, RxToken, Rexx)
 -setupArgs (RxType[], Object[], Class[], Object[], RxType, Object)
 +setVar (RxCursor, RxVariable, RxToken, Object)
 +signvalue (RxCode)
 +stringvalue (RxCode)
 -unwind (RxCursor)
 -char0 : Rexx
 -dub0 : Double
 ~helper : RxInterpreterHelper
 -int0 : Integer
 -long0 : Long
 -nojump : RxClause
 ~rxt : RxTranslator
}
class WriterOutputStream {
 +close ()
 +flush ()
 +write (byte[], int, int)
 +write (int)
 +WriterOutputStream (Writer)
 -w : Writer
}
class RxInterpreterHelper {
 +RxInterpreterHelper (RxTranslator)
 +showSource (RxCursor, Rexx)
 ~rxt : RxTranslator
}
class RxSignal {
 +RxSignal (RxCursor, Object, RxToken)
 +showFrames (RxTranslator)
 +toString ()
 -eyecatch : Rexx
 +signalframes : Vector
 +signalinfo : RxClassInfo
 +signalobj : Object
 +signaltoken : RxToken
}
class RxSignal.Frame {
 +Frame (RxProgram, RxField, RxToken)
 ~framefield : RxField
 ~frameprogram : RxProgram
 ~frametoken : RxToken
}
class RxSignalPend {
 +RxSignalPend (Object, RxToken)
 +signalobj : Object
 +signaltoken : RxToken
}
class RxProxy {
 +accflags (RxField)
 +accflags (RxClassInfo)
 -add4 (int, int)
 -add8 (int, long)
 -addit (String, int)
 -addMethSig (RxField)
 -addone (int, int)
 -addSig (RxType)
 -addtwo (int, int, int)
 ~addutf8 (char[])
 +conClass (RxType)
 +conDouble (double)
 +conFloat (float)
 +conInt (int)
 +conLong (long)
 +conRef (int, RxType, String, String)
 +conRef (int, RxType, String, RxType)
 +conString (String)
 +getBytes ()
 +RxProxy (RxTranslator, RxClassInfo)
 +writeByte (byte[], int, int)
 +writeInt (byte[], int, int)
 +writeShort (byte[], int, int)
 callMethodsig : String
 cinitname : String
 -clasattlen : int
 -clasatts : Vector
 -classlength : int
 -conindex : int
 -conlength : int
 -conlist : Vector
 -constants : Hashtable
 dollarname : String
 ~dollarref : int
 doubleType : RxType
 floatType : RxType
 -impclasses : int[]
 ~info : RxClassInfo
 interpreterType : RxType
 intType : RxType
 longType : RxType
 majorVersion : int
 -methattlen : int
 -methatts : Vector[]
 -methcount : int
 -methflags : int[]
 -methnameid : int[]
 -methtypeid : int[]
 minorVersion : int
 oArrayType : RxType
 oinitname : String
 -propattlen : int
 -propatts : Vector[]
 -propcount : int
 -propflags : int[]
 -propnameid : int[]
 -proptypeid : int[]
 proxyInitsig : String
 ~refCM : int
 ~refdv : int
 ~reffv : int
 ~refiv : int
 ~reflv : int
 ~refPI : int
 ~rxt : RxTranslator
 -superclass : int
 -thisclass : int
 ~thisref : int
 translatorType : RxType
 voidsig : String
}
class RxProxy.Attrib {
 +Attrib (String)
 +size ()
 +writeByte (byte[], int, int)
 +writeBytes (byte[], int)
 +writeInt (byte[], int, int)
 +writeShort (byte[], int, int)
 ~length : int
 ~nameid : int
}
class RxProxy.AttribCV {
 +AttribCV (Object)
 +writeBytes (byte[], int)
 ~valueid : int
}
class RxProxy.AttribSF {
 +AttribSF (String)
 +writeBytes (byte[], int)
 ~fileid : int
}
class RxProxy.AttribEC {
 +AttribEC (RxType[])
 +AttribEC (RxField)
 +writeBytes (byte[], int)
 ~exids : int[]
}
class RxProxy.AttribCO {
 +AttribCO (RxField)
 +makeIconst (byte[], int, int)
 +makeUnwrap (byte[], int, RxType)
 +writeBytes (byte[], int)
 ~bytes : byte[]
 ~byteslen : int
 ~maxlocals : int
 ~maxstack : int
 ~par : RxProxy
 ~rxt : RxTranslator
}
class RxProxyLoader {
 ~loadClass (RxClassInfo, boolean)
 loadClass (String, boolean)
 +RxProxyLoader (RxTranslator)
 +selectParent (RxTranslator)
 ~rxt : RxTranslator
}
class NrVersion {
 +getCopyright ()
 +getFullVersion ()
 +getLogo ()
 +getPipesCopyright ()
 +getPipesVersion ()
 +getProcdate ()
 +getVersion ()
 +getWorkspaceVersion ()
 +main (String[])
 +NrVersion ()
 -copyright : String
 -mod : String
 -pipescopyright : String
 -pipesversion : String
 -procdate : String
 -version : String
}
class RxProcessor {
 +copyright : Rexx
 +procdate : Rexx
}
interface RuntimeConstants {
 +ACC_ABSTRACT : int
 +ACC_FINAL : int
 +ACC_INTERFACE : int
 +ACC_NATIVE : int
 +ACC_PRIVATE : int
 +ACC_PROTECTED : int
 +ACC_PUBLIC : int
 +ACC_STATIC : int
 +ACC_STRICT : int
 +ACC_SUPER : int
 +ACC_SYNCHRONIZED : int
 +ACC_TRANSIENT : int
 +ACC_VOLATILE : int
 +CONSTANT_CLASS : int
 +CONSTANT_DOUBLE : int
 +CONSTANT_FIELD : int
 +CONSTANT_FLOAT : int
 +CONSTANT_INTEGER : int
 +CONSTANT_INTERFACEMETHOD : int
 +CONSTANT_INVOKEDYNAMIC : int
 +CONSTANT_LONG : int
 +CONSTANT_METHOD : int
 +CONSTANT_METHODHANDLE : int
 +CONSTANT_METHODTYPE : int
 +CONSTANT_NAMEANDTYPE : int
 +CONSTANT_STRING : int
 +CONSTANT_UNICODE : int
 +CONSTANT_UTF8 : int
 +JAVA_DEFAULT_MINOR_VERSION : int
 +JAVA_DEFAULT_VERSION : int
 +JAVA_MAGIC : int
 +JAVA_MAX_SUPPORTED_MINOR_VERSION : int
 +JAVA_MAX_SUPPORTED_VERSION : int
 +JAVA_MIN_SUPPORTED_VERSION : int
 +opc_aaload : int
 +opc_aastore : int
 +opc_aconst_null : int
 +opc_aload : int
 +opc_aload_0 : int
 +opc_aload_1 : int
 +opc_aload_2 : int
 +opc_aload_3 : int
 +opc_anewarray : int
 +opc_areturn : int
 +opc_arraylength : int
 +opc_astore : int
 +opc_astore_0 : int
 +opc_astore_1 : int
 +opc_astore_2 : int
 +opc_astore_3 : int
 +opc_athrow : int
 +opc_baload : int
 +opc_bastore : int
 +opc_bipush : int
 +opc_breakpoint : int
 +opc_caload : int
 +opc_castore : int
 +opc_checkcast : int
 +opc_d2f : int
 +opc_d2i : int
 +opc_d2l : int
 +opc_dadd : int
 +opc_daload : int
 +opc_dastore : int
 +opc_dcmpg : int
 +opc_dcmpl : int
 +opc_dconst_0 : int
 +opc_dconst_1 : int
 +opc_ddiv : int
 +opc_dead : int
 +opc_dload : int
 +opc_dload_0 : int
 +opc_dload_1 : int
 +opc_dload_2 : int
 +opc_dload_3 : int
 +opc_dmul : int
 +opc_dneg : int
 +opc_drem : int
 +opc_dreturn : int
 +opc_dstore : int
 +opc_dstore_0 : int
 +opc_dstore_1 : int
 +opc_dstore_2 : int
 +opc_dstore_3 : int
 +opc_dsub : int
 +opc_dup : int
 +opc_dup2 : int
 +opc_dup2_x1 : int
 +opc_dup2_x2 : int
 +opc_dup_x1 : int
 +opc_dup_x2 : int
 +opc_f2d : int
 +opc_f2i : int
 +opc_f2l : int
 +opc_fadd : int
 +opc_faload : int
 +opc_fastore : int
 +opc_fcmpg : int
 +opc_fcmpl : int
 +opc_fconst_0 : int
 +opc_fconst_1 : int
 +opc_fconst_2 : int
 +opc_fdiv : int
 +opc_fload : int
 +opc_fload_0 : int
 +opc_fload_1 : int
 +opc_fload_2 : int
 +opc_fload_3 : int
 +opc_fmul : int
 +opc_fneg : int
 +opc_frem : int
 +opc_freturn : int
 +opc_fstore : int
 +opc_fstore_0 : int
 +opc_fstore_1 : int
 +opc_fstore_2 : int
 +opc_fstore_3 : int
 +opc_fsub : int
 +opc_getfield : int
 +opc_getstatic : int
 +opc_goto : int
 +opc_goto_w : int
 +opc_i2b : int
 +opc_i2c : int
 +opc_i2d : int
 +opc_i2f : int
 +opc_i2l : int
 +opc_i2s : int
 +opc_iadd : int
 +opc_iaload : int
 +opc_iand : int
 +opc_iastore : int
 +opc_iconst_0 : int
 +opc_iconst_1 : int
 +opc_iconst_2 : int
 +opc_iconst_3 : int
 +opc_iconst_4 : int
 +opc_iconst_5 : int
 +opc_iconst_m1 : int
 +opc_idiv : int
 +opc_if_acmpeq : int
 +opc_if_acmpne : int
 +opc_if_icmpeq : int
 +opc_if_icmpge : int
 +opc_if_icmpgt : int
 +opc_if_icmple : int
 +opc_if_icmplt : int
 +opc_if_icmpne : int
 +opc_ifeq : int
 +opc_ifge : int
 +opc_ifgt : int
 +opc_ifle : int
 +opc_iflt : int
 +opc_ifne : int
 +opc_ifnonnull : int
 +opc_ifnull : int
 +opc_iinc : int
 +opc_iload : int
 +opc_iload_0 : int
 +opc_iload_1 : int
 +opc_iload_2 : int
 +opc_iload_3 : int
 +opc_imul : int
 +opc_ineg : int
 +opc_instanceof : int
 +opc_invokedynamic : int
 +opc_invokeinterface : int
 +opc_invokespecial : int
 +opc_invokestatic : int
 +opc_invokevirtual : int
 +opc_ior : int
 +opc_irem : int
 +opc_ireturn : int
 +opc_ishl : int
 +opc_ishr : int
 +opc_istore : int
 +opc_istore_0 : int
 +opc_istore_1 : int
 +opc_istore_2 : int
 +opc_istore_3 : int
 +opc_isub : int
 +opc_iushr : int
 +opc_ixor : int
 +opc_jsr : int
 +opc_jsr_w : int
 +opc_l2d : int
 +opc_l2f : int
 +opc_l2i : int
 +opc_label : int
 +opc_ladd : int
 +opc_laload : int
 +opc_land : int
 +opc_lastore : int
 +opc_lcmp : int
 +opc_lconst_0 : int
 +opc_lconst_1 : int
 +opc_ldc : int
 +opc_ldc2_w : int
 +opc_ldc_w : int
 +opc_ldiv : int
 +opc_lload : int
 +opc_lload_0 : int
 +opc_lload_1 : int
 +opc_lload_2 : int
 +opc_lload_3 : int
 +opc_lmul : int
 +opc_lneg : int
 +opc_lookupswitch : int
 +opc_lor : int
 +opc_lrem : int
 +opc_lreturn : int
 +opc_lshl : int
 +opc_lshr : int
 +opc_lstore : int
 +opc_lstore_0 : int
 +opc_lstore_1 : int
 +opc_lstore_2 : int
 +opc_lstore_3 : int
 +opc_lsub : int
 +opc_lushr : int
 +opc_lxor : int
 +opc_monitorenter : int
 +opc_monitorexit : int
 +opc_multianewarray : int
 +opc_new : int
 +opc_newarray : int
 +opc_nop : int
 +opc_pop : int
 +opc_pop2 : int
 +opc_putfield : int
 +opc_putstatic : int
 +opc_ret : int
 +opc_return : int
 +opc_saload : int
 +opc_sastore : int
 +opc_sipush : int
 +opc_swap : int
 +opc_tableswitch : int
 +opc_try : int
 +opc_wide : int
 +opcLengths : int[]
 +opcNames : String[]
 +SIG_ : String
 +SIG_ARRAY : String
 +SIG_BOOLEAN : String
 +SIG_BYTE : String
 +SIG_CLASS : String
 +SIG_DOUBLE : String
 +SIG_ENDCLASS : String
 +SIG_ENDMETHOD : String
 +SIG_FLOAT : String
 +SIG_INT : String
 +SIG_LONG : String
 +SIG_METHOD : String
 +SIG_PACKAGE : String
 +SIG_SHORT : String
 +SIG_VOID : String
 +SIGC_ : char
 +SIGC_ARRAY : char
 +SIGC_BOOLEAN : char
 +SIGC_BYTE : char
 +SIGC_CLASS : char
 +SIGC_DOUBLE : char
 +SIGC_ENDCLASS : char
 +SIGC_ENDMETHOD : char
 +SIGC_FLOAT : char
 +SIGC_INT : char
 +SIGC_LONG : char
 +SIGC_METHOD : char
 +SIGC_PACKAGE : char
 +SIGC_SHORT : char
 +SIGC_VOID : char
 +T_BOOLEAN : int
 +T_BYTE : int
 +T_CHAR : int
 +T_CLASS : int
 +T_DOUBLE : int
 +T_FLOAT : int
 +T_INT : int
 +T_LONG : int
 +T_SHORT : int
}
class NrAnsi {
 +NrAnsi (boolean)
 +ANSI_BLUE : String
 +ANSI_LINE_CLEAR : String
 +ANSI_LINE_UP : String
 +ANSI_RED : String
 +ANSI_RESET : String
 +ANSI_YELLOW : String
}
class RxMessage {
 +makemessage (String, Rexx, Rexx, Rexx, Rexx)
 +RxMessage (RxMessageOutput, int, RxToken, String, Rexx, Rexx, Rexx, Rexx)
 -badmessages : boolean
 -config : RxMessageOutput
 +ERROR : int
 -eyecatch : Rexx
 +INFO : int
 -messagebundle : ResourceBundle
 +SEVERE : int
 +WARN : int
}
class RxError {
 +RxError (RxTranslator, RxToken, String, Rexx, Rexx, Rexx, Rexx)
}
class RxWarn {
 +RxWarn (RxTranslator, RxToken, String, Rexx, Rexx, Rexx, Rexx)
}
class RxQuit {
 +RxQuit (RxTranslator, RxToken, String, Rexx, Rexx, Rexx, Rexx)
 +RxQuit ()
}
interface RxBabel {
 +fieldModifiers (RxField)
 +fieldVisibility (int)
 +getExtension ()
 +getFullVersion ()
 +getName ()
 +getVersion ()
 +typeConcise (RxType)
 +typeString (RxType)
}
class NrBabel {
 +fieldModifiers (RxField)
 +fieldVisibility (int)
 +NrBabel (RxTranslator)
 +typeConcise (RxType)
 +typeString (RxType)
 Extension : Rexx
 FullVersion : Rexx
 Name : Rexx
 -program : RxProgram
 -rxt : RxTranslator
 Version : Rexx
}
interface RxSource {
 +close ()
 +getLine (int)
 +getLineCount ()
 +getName ()
 +getPath ()
 +getShortName ()
}
class RxFileReader {
 +close ()
 +getLine (int)
 +getLineCount ()
 +getName ()
 +getPath ()
 +getShortName ()
 +openfile (Rexx)
 +openfile (Rexx, String)
 +recover ()
 +RxFileReader (RxTranslator)
 -bitesize : int
 -filesep : Rexx
 -infile : Rexx
 -infileob : File
 -infilepath : Rexx
 -inhandle : BufferedReader
 -inline : Object[]
 -inmemob : String
 -inopen : boolean
 -inread : boolean
 -inspace : int
 -rxt : RxTranslator
 -sourcelines : int
}
class RxStreamer {
 +checkoutfile ()
 -chunk (Rexx, boolean, boolean)
 +closefiles ()
 +createCrossrefFile (Rexx)
 +createModelFile (Rexx)
 +crossref (Rexx)
 +disposeoutputfile (boolean, boolean)
 +model (Rexx)
 +openfiles (Rexx, Rexx, Rexx)
 +out (Rexx, boolean)
 +outinsert (Rexx, int, int)
 +outinsertpart (Rexx, int)
 +outpart (Rexx, boolean)
 +outwrite ()
 +postindent (int)
 +RxStreamer (RxTranslator, RxProgram)
 -blank : Rexx
 +byteoutstream : ByteArrayOutputStream
 -chunklist : Vector
 +chunks : int
 -jcomstart : char[]
 -jncomend : char[]
 -jncomstart : char[]
 -lastinlineno : int
 -linesep : Rexx
 -linesepchars : char[]
 -maxindent : int
 -modfile : Rexx
 -modfileob : File
 -modhandle : OutputStreamWriter
 +outfile : Rexx
 +outfilefull : Rexx
 -outfileob : File
 -outhandle : OutputStreamWriter
 -outnewline : boolean
 -program : RxProgram
 -rxt : RxTranslator
 -xrffile : Rexx
 -xrffileob : File
 -xrfhandle : OutputStreamWriter
}
class RxChunk {
 +RxChunk (char[], int, boolean, int, int)
 ~datachars : char[]
 ~indent : int
 ~insert : String
 ~line : int
 ~postindent : int
 ~sep : boolean
}
class RxException {
 +find (RxException[])
 +find (Vector)
 +RxException (RxCursor, RxClassInfo, RxToken)
 -errortype : RxType
 +excephard : boolean
 +excepinfo : RxClassInfo
 +exceptok : RxToken
 -runextype : RxType
 -rxt : RxTranslator
}
class RxProgram {
 +getSourceFileSpec ()
 +getSourceLine (int)
 +getSourceLineCount ()
 +isCompactOutput ()
 +RxProgram (RxTranslator, RxFlag, Rexx)
 +say (Rexx)
 +toConciseString (RxType[])
 +toString (RxType[])
 +toString (RxType)
 +abandon : boolean
 +babel : RxBabel
 +classes : Vector
 +clauser : RxClauser
 +errorcount : int
 +flag : RxFlag
 +hadtrace : boolean
 +javaimports : Hashtable
 +model : RxModel
 +packagename : Rexx
 +parser : RxParser
 +pendings : Vector
 +pendnumeric : Vector
 +pendtrace : Vector
 +pooler : RxVarpool
 +programname : Rexx
 +quieterror : boolean
 +shortref : Hashtable
 +source : RxSource
 +streamer : RxStreamer
 +tracer : RxTracer
 +tracewarn : boolean
 +translator : RxTranslator
 +warncount : int
}
interface RxMessageOutput {
 +getSourceFileSpec ()
 +getSourceLine (int)
 +getSourceLineCount ()
 +isCompactOutput ()
 +say (Rexx)
}
class RxForwardingJavaFileManager {
 +getJavaFileForOutput (Location, String, Kind, FileObject)
 +RxForwardingJavaFileManager (JavaFileManager)
 +classFileObjects : ArrayList
}
class RxInMemoryJavaFileObject {
 +getCharContent (boolean)
 +RxInMemoryJavaFileObject (String, String)
 -program : String
}
class RxConverter {
 +addconstant (RxCursor, RxType, RxCode)
 +assigncost (RxCursor, RxType, RxType)
 +convertcode (RxCursor, RxType, int, RxCode, RxToken)
 +javawrap (RxCode)
 +litexpr (RxCursor, RxCode)
 -primstring (RxCode)
 +RxConverter (RxTranslator)
 -tobool (RxCursor, RxCode)
 -tochar (RxCode)
 +torexx (RxCursor, RxCode, boolean)
 -tostr (RxCode)
 -valueRP (RxCode, RxType)
 -classer : RxClasser
 -CONVERT_BC : int
 -CONVERT_BCA : int
 -CONVERT_BP : int
 -CONVERT_BR : int
 -CONVERT_BS : int
 -CONVERT_CAB : int
 -CONVERT_CAC : int
 -CONVERT_CAP : int
 -CONVERT_CAR : int
 -CONVERT_CAS : int
 -CONVERT_CB : int
 -CONVERT_CCA : int
 -CONVERT_CP : int
 -CONVERT_CR : int
 -CONVERT_CS : int
 -CONVERT_CSQR : int
 -CONVERT_CSQS : int
 -CONVERT_NO : int
 -CONVERT_NOP : int
 -CONVERT_NP : int
 -CONVERT_OCA : int
 -CONVERT_OR : int
 -CONVERT_OS : int
 -CONVERT_PB : int
 -CONVERT_PC : int
 -CONVERT_PCA : int
 -CONVERT_PR : int
 -CONVERT_PS : int
 -CONVERT_RB : int
 -CONVERT_RC : int
 -CONVERT_RCA : int
 -CONVERT_RCSQ : int
 -CONVERT_RMAP : int
 -CONVERT_RP : int
 -CONVERT_RS : int
 -CONVERT_SB : int
 -CONVERT_SC : int
 -CONVERT_SCA : int
 -CONVERT_SP : int
 -CONVERT_SR : int
 -CONVERT_WO : int
 -CONVERT_WP : int
 -CONVERT_XXX : int
 -int0 : Integer
 -int1 : Integer
 +MAXASSIGN : int
 -MAXCONLEN : int
 -rxt : RxTranslator
 -wrapok : Rexx
}
class RxConvert {
 +RxConvert (int, int)
 +cost : int
 +proc : int
}
class RxVariable {
 +attributes ()
 +copy ()
 +isabstractargument ()
 +isargument ()
 +isarray ()
 +isconstant ()
 +isdeprecated ()
 +isindirect ()
 +islit ()
 +islocal ()
 +isnonstaticprop ()
 +isprivateprop ()
 +isproperty ()
 +isreadonly ()
 +isstaticprop ()
 +isunused ()
 +javamodifiers ()
 +RxVariable (Rexx, Rexx, RxToken, int, RxType, boolean)
 +setlit ()
 +tracetag ()
 +visibility ()
 +VAR_ARG : int
 +VAR_CONSTANT : int
 +VAR_DEPRECATED : int
 +VAR_INDIRECT : int
 +VAR_INHERIT : int
 +VAR_LIT : int
 +VAR_LOCAL : int
 +VAR_OPTIONAL : int
 +VAR_PRIVATE : int
 +VAR_PROP : int
 +VAR_PUBLIC : int
 +VAR_READONLY : int
 +VAR_SHARED : int
 +VAR_STATIC : int
 +VAR_TRANSIENT : int
 +VAR_UNUSED : int
 +VAR_VOLATILE : int
 +varabstract : boolean
 +varatts : int
 +varctype : Rexx
 +varfield : RxField
 +varmain : boolean
 +varname : Rexx
 +varrefs : StringBuffer
 +varseen : boolean
 +varspell : Rexx
 +vartoken : RxToken
 +vartype : RxType
 +varvalue : Object
}
class RxVarpool {
 -addxref (RxCursor, RxVariable, RxToken, char, boolean)
 +checkclassunused (RxCursor)
 +checkmethodunused (RxCursor)
 +checkvar (RxCursor, int, Rexx, RxType, RxToken, RxType, RxToken, boolean, char)
 +findvar (RxCursor, Rexx, RxToken, boolean, boolean, int)
 +getindirects (RxCursor)
 -poolget (RxCursor, String)
 -poolput (RxCursor, String, RxVariable)
 +refindvar (RxCursor, Rexx)
 +repoolvar (RxCursor, RxVariable, boolean)
 +RxVarpool (RxTranslator)
 +showxref (RxCursor)
 +showxref2 (RxCursor)
 -warnclassunused (RxVariable)
 -warnmethodunused (RxVariable)
 -classer : RxClasser
 -parser : RxParser
 -program : RxProgram
 -rxt : RxTranslator
}
SimpleJavaFileObject <|-- RxInMemoryJavaFileObject
NrBlock <|-- NrSelect
NrBlock <|-- NrLoop
RuntimeException <|-- RxWarn
RuntimeException <|-- RxQuit
RxProxy.Attrib <|-- RxProxy.AttribCO
NrBlock <|-- NrDo
ClassLoader <|-- RxProxyLoader
ClassLoader <|-- RxMapClassLoader
SimpleJavaFileObject <|-- RxByteArrayJavaClass
RxProxy.Attrib <|-- RxProxy.AttribSF
RuntimeException <|-- RxSignal
RxProxy.Attrib <|-- RxProxy.AttribCV
AbstractScriptEngine <|-- RxScriptEngine
OutputStream <|-- WriterOutputStream
RxProxy.Attrib <|-- RxProxy.AttribEC
RuntimeException <|-- RxError
ForwardingJavaFileManager <|-- RxForwardingJavaFileManager
RxMethod <|-- NrMethod
RuntimeException <|-- RxSignalPend
RxClauseParser *-- NrParse
RxClauseParser *-- NrReturn
RxClauseParser *-- NrWhen
RxSource *-- RxFileReader
RxClauseParser *-- NrIterate
RxClauseParser *-- NrCatch
RxClauseParser *-- NrEnd
RxClauseParser *-- NrElse
RxClauseParser *-- NrImport
RxClauseParser *-- RxMethod
RxClauseParser *-- NrSelect
RxClauseParser *-- NrInterpret
RxClauseParser *-- NrProperties
RxClauseParser *-- NrMethodcall
RxClauseParser *-- NrOtherwise
RxClauseParser *-- NrSay
RxClauseParser *-- NrThen
RxClauseParser *-- NrLoop
RxClauseParser *-- NrTrace
Cloneable *-- RxCode
ScriptEngine *-- RxScriptEngine
RxClauseParser *-- NrPackage
RxBabel *-- NrBabel
RxMessageOutput *-- RxProgram
javax.tools.DiagnosticListener *-- RxTranslator.diagListener
RxClauseParser *-- NrBlock
RxClauseParser *-- NrFinally
RxClauseParser *-- NrLeave
RxClauseParser *-- RxClass
RxClauseParser *-- NrAssign
RxClauseParser *-- NrAddress
RxClauseParser *-- NrAnnotate
RxClauseParser *-- NrIf
RxClauseParser *-- NrExit
RxClauseParser *-- NrNumeric
ScriptEngineFactory *-- RxScriptEngineFactory
RxClauseParser *-- NrDo
RxClauseParser *-- NrOptions
RxClauseParser *-- NrSignal
RxClauseParser *-- NrNop
NrSelect --x NrSelect.Pending
RxTranslator --x RxTranslator.diagListener
RxProxy --x RxProxy.AttribCO
RxProxy --x RxProxy.AttribSF
RxProxy --x RxProxy.AttribCV
RxProxy --x RxProxy.Attrib
RxSignal --x RxSignal.Frame
RxProxy --x RxProxy.AttribEC
@enduml
