@startuml
set separator none
class BadArgumentException {
 +BadArgumentException (String)
 +BadArgumentException ()
 -serialVersionUID : long
}
class BadColumnException {
 +BadColumnException (String)
 +BadColumnException ()
 -serialVersionUID : long
}
class BadNumericException {
 +BadNumericException (String)
 +BadNumericException ()
 -serialVersionUID : long
}
class DivideException {
 +DivideException (String)
 +DivideException ()
 -serialVersionUID : long
}
class ExponentOverflowException {
 +ExponentOverflowException (String)
 +ExponentOverflowException ()
 -serialVersionUID : long
}
class InterpretException {
 +InterpretException (String)
 +InterpretException ()
 -serialVersionUID : long
}
interface LineHandler {
 +handle (Rexx)
}
class NoOtherwiseException {
 +NoOtherwiseException (String)
 +NoOtherwiseException ()
 -serialVersionUID : long
}
class NotCharacterException {
 +NotCharacterException (String)
 +NotCharacterException ()
 -serialVersionUID : long
}
class NotLogicException {
 +NotLogicException (String)
 +NotLogicException ()
 -serialVersionUID : long
}
class RexxAddress {
 +execAddress (String, String, Object, Object, int, Object, int)
 +execAddress (String, Rexx, Object, Object, int, Object, int)
 +getSystemAddressee ()
 +RC ()
 +Say (char[])
 -command : String
 -exitcode : Rexx
 -serialVersionUID : long
 -StdOut : ConcurrentLinkedDeque
 -sysaddr : Rexx
}
class RexxComparator {
 +compare (Object, Object)
 +RexxComparator ()
 -serialVersionUID : long
}
class Rexx {
 +abbrev (Rexx, Rexx)
 +abs ()
 +append (Rexx)
 +b2d (Rexx)
 +b2x ()
 +buildlist (Rexx, Rexx)
 +buildMap (Object, Object)
 +buildmap (Object, Object)
 +c2d ()
 +c2x ()
 +center (Rexx, Rexx)
 +centre (Rexx, Rexx)
 +changestr (Rexx, Rexx)
 -charaddsub (char[], char[], int)
 +charAt (int)
 +checkextraquotes (Rexx, Rexx, Rexx)
 +clear ()
 +compare (Rexx, Rexx)
 +compareTo (Object)
 -concat (RexxSet, Rexx, int)
 +containsKey (Object)
 +containsValue (Object)
 +copies (Rexx)
 +copyIndexed (Rexx)
 +copyindexed (Rexx)
 +count (Rexx)
 +countstr (Rexx)
 -cut (int)
 +d2b (Rexx)
 +d2c ()
 +d2x ()
 +d2x (Rexx)
 +datatype (Rexx)
 +deleteanelement (Rexx)
 +deleteelement (Rexx)
 +delimiterinfo (Rexx, Rexx)
 +delstr (Rexx, Rexx)
 +delword (Rexx, Rexx)
 -docompare (RexxSet, Rexx)
 -docomparestrict (RexxSet, Rexx)
 -dodivide (char, RexxSet, Rexx)
 +dumplist (Rexx, String, String, String)
 +dumplist ()
 +dumpvar (Rexx, String)
 +dumpvar ()
 +elementcount ()
 +elementname ()
 +elementvalue ()
 +entrySet ()
 +equals (Object)
 +exists (Rexx)
 -finish (int, boolean)
 +first ()
 +flatlist ()
 +format (Rexx, Rexx, Rexx, Rexx, Rexx)
 +get (Object)
 +getdelims (Rexx)
 +getelement (Rexx)
 +getflags (Rexx)
 +getJavaList ()
 +getnode (Rexx)
 +getrules (Rexx)
 +hashCode ()
 +head ()
 +index (Rexx, Rexx)
 +insert (Rexx, Rexx, Rexx, Rexx)
 +insertelement (Rexx, Rexx)
 -intcheck (int, int)
 -intlength ()
 -intwords ()
 +isEmpty ()
 +isIndexed ()
 +isindexed ()
 +islist ()
 +iterator ()
 +join (StructuredList)
 +keys ()
 +keySet ()
 +lastpos (Rexx, Rexx)
 +lastpos (Rexx)
 -layout ()
 ~layoutnum ()
 +left (Rexx, Rexx)
 +length ()
 +lower (Rexx, Rexx)
 +max (Rexx)
 +maxval ()
 +metamap (Rexx, Rexx, Rexx)
 +min (Rexx)
 +minval ()
 +OpAdd (RexxSet, Rexx)
 +OpAnd (RexxSet, Rexx)
 +OpCc (RexxSet, Rexx)
 +OpCcblank (RexxSet, Rexx)
 +OpDiv (RexxSet, Rexx)
 +OpDivI (RexxSet, Rexx)
 +OpEq (RexxSet, Rexx)
 +OpEqS (RexxSet, Rexx)
 +OpGt (RexxSet, Rexx)
 +OpGtEq (RexxSet, Rexx)
 +OpGtEqS (RexxSet, Rexx)
 +OpGtS (RexxSet, Rexx)
 +OpLt (RexxSet, Rexx)
 +OpLtEq (RexxSet, Rexx)
 +OpLtEqS (RexxSet, Rexx)
 +OpLtS (RexxSet, Rexx)
 +OpMinus (RexxSet)
 +OpMult (RexxSet, Rexx)
 +OpNot (RexxSet)
 +OpNotEq (RexxSet, Rexx)
 +OpNotEqS (RexxSet, Rexx)
 +OpOr (RexxSet, Rexx)
 +OpPlus (RexxSet)
 +OpPow (RexxSet, Rexx)
 +OpRem (RexxSet, Rexx)
 +OpSub (RexxSet, Rexx)
 -optioncheck (String)
 +OpXor (RexxSet, Rexx)
 +overlay (Rexx, Rexx, Rexx, Rexx)
 -padcheck ()
 +pos (Rexx, Rexx)
 +put (Object, Rexx)
 +put (Object, Object)
 +putAll (Rexx)
 +putAll (Map)
 +reconstructlist (Rexx, Rexx, Rexx)
 +remove (Object)
 +replaceanelement (Rexx, Rexx)
 +replaceelement (Rexx, Rexx)
 +rest ()
 +reverse ()
 +reverselist ()
 +Rexx (Map)
 +Rexx ()
 ~Rexx (char[], boolean)
 +Rexx (double)
 +Rexx (float)
 +Rexx (long)
 +Rexx (int)
 +Rexx (short)
 +Rexx (byte)
 +Rexx (boolean)
 +Rexx (Rexx)
 +Rexx (String[])
 +Rexx (CharSequence)
 +Rexx (String)
 +Rexx (char[])
 +Rexx (char)
 +right (Rexx, Rexx)
 -round (int)
 +rules ()
 -sa2ca (String[])
 +sequence (Rexx)
 +setRexxMap (Object[], Object[], Rexx)
 +sign ()
 +significance ()
 +size (int)
 +soundex ()
 +space (Rexx, Rexx)
 +strip (Rexx, Rexx)
 +sublist (Rexx, Rexx)
 +substr (Rexx, Rexx, Rexx)
 +subword (Rexx, Rexx)
 +sum ()
 +tail ()
 +testnode (Rexx)
 +toboolean ()
 +tobyte ()
 +toByteArray ()
 +tochar (char[])
 +tochar (String)
 +tochar ()
 +tochararray (Rexx)
 +tochararray (char)
 +toCharArray ()
 +todouble ()
 +tofloat ()
 +toint ()
 +tolong ()
 +toMap ()
 +toRexx (String)
 +toRexx (char[])
 +toshort ()
 +toString (Rexx)
 +toString ()
 +translate (Rexx, Rexx, Rexx)
 +trunc (Rexx)
 +upper (Rexx, Rexx)
 +value (Rexx)
 +values ()
 +verify (Rexx, Rexx, Rexx)
 +word (Rexx)
 +wordindex (Rexx)
 +wordlength (Rexx)
 +wordpos (Rexx, Rexx)
 +words ()
 +wrap (Object)
 +x2b ()
 +x2c ()
 +x2d ()
 +x2d (Rexx)
 ~chars : char[]
 ~coll : Hashtable
 +DefaultDigits : int
 +DefaultForm : byte
 ~dig : int
 +Digits09 : String
 ~exp : int
 ~form : byte
 +Hexes : char[]
 ~ind : byte
 ~isneg : byte
 ~ispos : byte
 ~iszero : byte
 +Lowers : String
 ~mant : char[]
 ~MaxArg : int
 ~MaxExp : int
 ~MinArg : int
 ~MinExp : int
 ~NotaNum : byte
 -serialVersionUID : long
 +Uppers : String
}
class Rexx.BaseIterator {
 +BaseIterator (Rexx)
 +hasNext ()
 +next ()
 +remove ()
 base : Rexx
 e : Enumeration
 last : Rexx
 nxt : Rexx
}
class Rexx.KeySet {
 +add (Object)
 +addAll (Collection)
 +clear ()
 +contains (Object)
 +containsAll (Collection)
 +equals (Object)
 +isEmpty ()
 +iterator ()
 +KeySet (Rexx)
 +remove (Object)
 +removeAll (Collection)
 +retainAll (Collection)
 +size ()
 +toArray (Object[])
 +toArray ()
 base : Rexx
}
class Rexx.EntrySet {
 +clear ()
 +contains (Object)
 +containsAll (Collection)
 +EntrySet (Rexx)
 +iterator ()
 +remove (Object)
 +removeAll (Collection)
 +retainAll (Collection)
 +toArray (Object[])
 base2 : Rexx
}
class Rexx.EntrySetIterator {
 +EntrySetIterator (Rexx)
 +next ()
 base2 : Rexx
}
class Rexx.MapEntry {
 +getKey ()
 +getValue ()
 +MapEntry (Rexx, Rexx)
 +setValue (Rexx)
 +setValue (Object)
 base : Rexx
 key : Rexx
}
class Rexx.ValueCollection {
 +clear ()
 +iterator ()
 +size ()
 +ValueCollection (Rexx)
 base : Rexx
}
class Rexx.ValueIterator {
 +next ()
 +ValueIterator (Rexx)
 base2 : Rexx
}
class Rexx.RexxList {
 +add (int, Object)
 +get (int)
 +remove (int)
 +RexxList (StructuredList)
 +set (int, Object)
 +size ()
 +currentlist : StructuredList
}
class Rexx.RxMap {
 +RxMap (Rexx)
}
class RexxDate {
}
class RexxIO {
 +Ask ()
 +AskDark ()
 +AskOne ()
 +File (Rexx)
 +forEachline (LineHandler, Rexx)
 +forEachline (LineHandler)
 +pipeSay (char[])
 +pipeSay (boolean)
 +pipeSay (double)
 +pipeSay (float)
 +pipeSay (long)
 +pipeSay (char)
 +pipeSay (Rexx)
 +pipeSay (String)
 +pipeSay (Object)
 +popOutputStream ()
 +pushOutputStream (OutputStream)
 +Say (char[])
 +Say (boolean)
 +Say (double)
 +Say (float)
 +Say (long)
 +Say (char)
 +Say (Rexx)
 +Say (String)
 +Say (Object)
 +setOutputStream (OutputStream)
 -fileIn : BufferedReader
 -serialVersionUID : long
 -StdIn : BufferedReader
 -StdOut : ConcurrentLinkedDeque
}
class RexxNode {
 +RexxNode (Rexx)
 +initleaf : Rexx
 +leaf : Rexx
 -serialVersionUID : long
}
interface RexxOperators {
 +OpAdd (RexxSet, Rexx)
 +OpAnd (RexxSet, Rexx)
 +OpCc (RexxSet, Rexx)
 +OpCcblank (RexxSet, Rexx)
 +OpDiv (RexxSet, Rexx)
 +OpDivI (RexxSet, Rexx)
 +OpEq (RexxSet, Rexx)
 +OpEqS (RexxSet, Rexx)
 +OpGt (RexxSet, Rexx)
 +OpGtEq (RexxSet, Rexx)
 +OpGtEqS (RexxSet, Rexx)
 +OpGtS (RexxSet, Rexx)
 +OpLt (RexxSet, Rexx)
 +OpLtEq (RexxSet, Rexx)
 +OpLtEqS (RexxSet, Rexx)
 +OpLtS (RexxSet, Rexx)
 +OpMinus (RexxSet)
 +OpMult (RexxSet, Rexx)
 +OpNot (RexxSet)
 +OpNotEq (RexxSet, Rexx)
 +OpNotEqS (RexxSet, Rexx)
 +OpOr (RexxSet, Rexx)
 +OpPlus (RexxSet)
 +OpPow (RexxSet, Rexx)
 +OpRem (RexxSet, Rexx)
 +OpSub (RexxSet, Rexx)
 +OpXor (RexxSet, Rexx)
}
class RexxParse {
 +parse (Rexx, char[], Rexx[])
 +ABS : char
 +EOP : char
 +EOS : char
 +MaxCol : int
 +MinCol : int
 +MINUS : char
 +PLUS : char
 +STRING : char
 +VAR : char
 +VARABS : char
 +VARLIST : char
 +VARMINUS : char
 +VARPLUS : char
}
class RexxRexx {
 +abbrev (Rexx, Rexx, String)
 +abs (Rexx)
 +b2d (Rexx, Rexx)
 +b2x (Rexx)
 +c2d (Rexx)
 +c2x (Rexx, int)
 +center (Rexx, Rexx, Rexx)
 +centre (Rexx, Rexx, Rexx)
 +changestr (Rexx, Rexx, Rexx)
 +compare (Rexx, Rexx, Rexx)
 +compareTo (Rexx, Object)
 +copies (Rexx, Rexx)
 +copyindexed (Rexx, Rexx)
 +countstr (Rexx, Rexx)
 +d2b (Rexx, Rexx)
 +d2c (Rexx)
 +d2x (Rexx)
 +d2x (Rexx, Rexx)
 +datatype (Rexx, Rexx)
 +delstr (Rexx, Rexx, Rexx)
 +delword (Rexx, Rexx, Rexx)
 +directory ()
 +exists (Rexx, Rexx)
 +format (Rexx, Rexx, Rexx, Rexx, Rexx, Rexx)
 +insert (Rexx, Rexx, Rexx, int, Rexx)
 +lastpos (Rexx, Rexx, Rexx)
 +lastpos (Rexx, Rexx)
 +left (Rexx, Rexx, Rexx)
 +length (Rexx)
 +lower (Rexx, Rexx, String)
 +max (Rexx, Rexx, Rexx)
 +max (Rexx, Rexx)
 +min (Rexx, Rexx, Rexx)
 +min (Rexx, Rexx)
 +overlay (Rexx, Rexx, Rexx, String, Rexx)
 +pos (Rexx, Rexx, Rexx)
 +random ()
 +reverse (Rexx)
 +RexxRexx ()
 +right (Rexx, Rexx, Rexx)
 +sequence (Rexx, Rexx)
 +sign (Rexx)
 +soundex (Rexx)
 +space (Rexx, Rexx, Rexx)
 +strip (Rexx, Rexx, Rexx)
 +substr (Rexx, Rexx, String, Rexx)
 +subword (Rexx, Rexx, String)
 +translate (Rexx, Rexx, Rexx, Rexx)
 +trunc (Rexx, Rexx)
 +upper (Rexx, Rexx, int)
 +user ()
 +value (Rexx, Rexx)
 +verify (Rexx, Rexx, Rexx, Rexx)
 +word (Rexx, Rexx)
 +wordindex (Rexx, Rexx)
 +wordlength (Rexx, Rexx)
 +wordpos (Rexx, Rexx, Rexx)
 +words (Rexx)
 +x2b (Rexx)
 +x2c (Rexx, int)
 +x2d (Rexx)
 +x2d (Rexx, Rexx)
}
class RexxSet {
 +formword ()
 +RexxSet (RexxSet)
 +RexxSet (int, byte)
 +RexxSet (int)
 +RexxSet ()
 +setDigits (Rexx)
 +setForm (Rexx)
 +DEFAULT_DIGITS : int
 +DEFAULT_FORM : byte
 +digits : int
 +ENGINEERING : byte
 +form : byte
 +PLAIN : byte
 +SCIENTIFIC : byte
 -serialVersionUID : long
}
class RexxStream {
 +charin (Rexx, int, int)
 +charout (Rexx)
 +charout (Rexx, Rexx, int)
 +chars (Rexx)
 +linein (Rexx, int, int)
 +linein ()
 +lineout (Rexx, Rexx, int)
 +lineout (Rexx)
 +lines (Rexx)
 +pull ()
 +RexxStream ()
 +stream (Rexx, Rexx, Rexx)
 -fileHandles : TreeMap
}
class RexxStream.FileHandle {
 +available ()
 +close ()
 +FileHandle (String, String)
 +getState ()
 +isReady ()
 +isWritable ()
 +makeWritable ()
 +readChar (int, int)
 +readLine (int, int)
 +readUTF8Char ()
 +setSeekPosition (Rexx, Rexx)
 +writeChar (Rexx, int)
 +writeLine (Rexx, int)
 -charread : Rexx
 -charwrite : Rexx
 ERROR : char
 -isWritable : boolean
 -lineread : Rexx
 -linewrite : Rexx
 -mode : Rexx
 NOTREADY : char
 -readChannel : FileChannel
 -readpos : Rexx
 READY : char
 -state : char
 -tpath : Path
 UNKNOWN : char
 -writeChannel : FileChannel
 -writepos : Rexx
}
class RexxTaskPool {
 +execute (Runnable)
 +execute (Object, String)
 +RexxTaskPool (Object, String)
 +RexxTaskPool (int, int)
 +RexxTaskPool ()
 +run ()
 +start (Object, String)
 +startmain (Object, String)
 +startrunnable (Runnable)
 +waitforallpools ()
 +waituntildone ()
 ca1 : Class[]
 poolmap : HashMap
 -poolno : Rexx
 +poolnumber : int
 -poolsiz3 : Rexx
 +poolsize : int
 -realtask : Object
 sa0 : String[]
 -saveparms : String
 +threadpool : ThreadPoolExecutor
}
class RexxTime {
 +Date (Rexx, Rexx, Rexx, Rexx, Rexx)
 +date (Rexx, Rexx, Rexx, Rexx, Rexx)
 +Date (Rexx)
 +date (Rexx)
 +Date ()
 +date ()
 -DateFormat (Rexx, Rexx, Rexx)
 -Leap (Rexx)
 -main (String[])
 -nativeDate ()
 +RexxTime ()
 +time (Rexx)
 +Time (Rexx)
 +time (char)
 -Time2Date (Rexx)
 -Time2Date2 (Rexx)
 -timeFormatC (Rexx, Rexx)
 Months : Rexx
 months3 : Rexx
 starttime : Rexx
 WeekDays : Rexx
}
class RexxTrace {
 +getContext ()
 +levelword ()
 +modnames (String[], String[])
 +newlevel (int)
 +reset ()
 +RexxTrace (RexxTrace)
 +RexxTrace (int, PrintStream, String)
 +setContext (boolean)
 +showContext ()
 +traceboolean (int, boolean, char, int, String)
 +tracebyte (int, byte, char, int, String)
 +tracechar (int, char, char, int, String)
 +tracechararray (int, char[], char, int, String)
 +traceclause (int, String[], int, String[])
 +traceclause (int, String, int, String[])
 +tracedouble (int, double, char, int, String)
 +tracefloat (int, float, char, int, String)
 +traceint (int, int, char, int, String)
 +tracelong (int, long, char, int, String)
 +traceObject (int, Object, char, int, String)
 -traceresult (int, Rexx, char, String)
 +traceRexx (int, Rexx, char, int, String)
 +traceshort (int, short, char, int, String)
 +traceString (int, String, char, int, String)
 +ALL : int
 -context : boolean
 +INTER : int
 -lastline : int
 -lastprogramname : String
 -lastthread : Thread
 -level : int
 -levelwords : Rexx
 +METHODS : int
 -nulltrace : String
 +OFF : int
 +OPS : int
 -programname : String
 +RESULTS : int
 +TERMS : int
 -threadlock : Object
 -tracestream : PrintStream
 +VAR : int
 -varnames : String[]
 -width : int
}
class RexxUtil {
 +d2x (Rexx, int)
 +doublePow (double, int)
 +doubleToRexx (double, int)
 +floatPow (double, int)
 +format (Rexx, int, int, int, int, char)
 -hexint (char)
 +translate (char[], char[], char[], char)
 +trunc (Rexx, int)
 +x2b (Rexx)
 +x2c (Rexx)
 +x2d (Rexx, int)
 -one : Rexx
 -serialVersionUID : long
 -sixteen : Rexx
 -zero : Rexx
}
class RexxWords {
 +abbrev (char[], char[], int)
 +centre (char[], int, char)
 +changestr (char[], char[], char[])
 +compare (char[], char[], char)
 +countstr (char[], char[])
 +delstr (char[], int, int)
 +delword (char[], int, int)
 +insert (char[], char[], int, int, char)
 +nextblank (char[], int)
 +nextnonblank (char[], int)
 +overlay (char[], char[], int, int, char)
 +pos (char[], char[], int)
 +pos (String, String, int)
 +pos (char, char[], int)
 +pos (char, String, int)
 +space (char[], int, char)
 +subword (char[], int, int)
 +verify (char[], char[], char, int)
 +verifym (char[], char[], int)
 +verifyn (char[], char[], int)
 +word (char[], int)
 +wordindex (char[], int)
 +wordlength (char[], int)
 +wordpos (char[], char[], int)
 +words (char[])
 -serialVersionUID : long
}
interface StructuredList {
 +buildlist (Rexx)
 +deleteanelement (Rexx)
 +deleteelement (Rexx)
 +elementcount ()
 +getelement (Rexx)
 +getJavaList ()
 +index (Rexx, Rexx)
 +insertelement (Rexx, Rexx)
 +islist ()
 +join (StructuredList)
 +replaceanelement (Rexx, Rexx)
 +replaceelement (Rexx, Rexx)
 +sublist (Rexx, Rexx)
}
class Sysutils {
 -determineOS ()
 -FileTree (Rexx, Rexx, Rexx, Rexx, Rexx, SimpleDateFormat, Rexx, Rexx)
 +rxCmd (Rexx, int)
 +rxExec (Rexx, int)
 -rxExecArray (String[])
 +rxGetStderr ()
 +rxGetstdout ()
 +SysCloseEventSem (Rexx)
 +SysCloseMutexSem (Rexx)
 +SysCreateEventSem (String)
 +SysCreateMutexSem (String)
 +SysFileDelete (Rexx)
 +SysFileExists (Rexx)
 +SysFileRead (Rexx, Rexx)
 +SysFileSearch (Rexx, Rexx, Rexx, Rexx)
 +SysFileTree (Rexx, Rexx, Rexx, String, String)
 +SysFileWrite (Rexx, Rexx)
 +SysGetFileDateTime (Rexx, Rexx)
 +SysGetKey (String)
 +SysIsFile (Rexx)
 +SysIsFileDirectory (Rexx)
 +SysMkDir (Rexx)
 +SysOpenEventSem (Rexx)
 +SysOpenMutexSem (Rexx)
 +SysReleaseEventSem (Rexx)
 +SysReleaseMutexSem (Rexx)
 +SysRequestEventSem (Rexx, int)
 +SysRequestMutexSem (Rexx, int)
 +SysRmDir (Rexx)
 +SysSearchPath (Rexx, Rexx, Rexx)
 +SysSleep (Rexx)
 +SysStemCopy (Rexx, Rexx, int, int, Rexx, String)
 +SysStemDelete (Rexx, Rexx, int)
 +SysStemInsert (Rexx, Rexx, Rexx)
 +Sysutils ()
 +SysVersion ()
 -envSeparator : Rexx
 -os : Rexx
 -osVersion : Rexx
 -rxExec : String[]
 -rxRc : Rexx
 -rxStderr : String[]
 -rxStdout : String[]
 -semEventVector : Vector
 -semMutexVector : Vector
}
Rexx.BaseIterator <|-- Rexx.ValueIterator
Rexx <|-- RexxUtil
Rexx.KeySet <|-- Rexx.EntrySet
RuntimeException <|-- NoOtherwiseException
RuntimeException <|-- DivideException
RuntimeException <|-- BadColumnException
Rexx.BaseIterator <|-- Rexx.EntrySetIterator
AbstractCollection <|-- Rexx.ValueCollection
RuntimeException <|-- BadArgumentException
RuntimeException <|-- NotCharacterException
RuntimeException <|-- BadNumericException
Rexx <|-- Rexx.RxMap
RuntimeException <|-- ExponentOverflowException
RuntimeException <|-- InterpretException
RexxTime <|-- RexxDate
AbstractList <|-- Rexx.RexxList
RuntimeException <|-- NotLogicException
Serializable *-- RexxUtil
Serializable *-- RexxWords
Executor *-- RexxTaskPool
Serializable *-- RexxAddress
RexxOperators *-- Rexx
Serializable *-- RexxIO
Iterator *-- Rexx.BaseIterator
java.util.Map *-- Rexx.RxMap
Set *-- Rexx.KeySet
Serializable *-- RexxNode
Map.Entry *-- Rexx.MapEntry
Serializable *-- RexxSet
java.util.Comparator *-- RexxComparator
Rexx --x Rexx.ValueIterator
Rexx --x Rexx.EntrySet
Rexx --x Rexx.EntrySetIterator
Rexx --x Rexx.ValueCollection
Rexx --x Rexx.BaseIterator
Rexx --x Rexx.RxMap
Rexx --x Rexx.KeySet
RexxStream --x RexxStream.FileHandle
Rexx --x Rexx.MapEntry
Rexx --x Rexx.RexxList
@enduml
