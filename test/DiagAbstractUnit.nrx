/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* NetRexx language processor diagnostics                         mfc */
/* Copyright (c) IBM Corporation 1996, 1997.  All Rights Reserved.    */
/* ------------------------------------------------------------------ */
/* DiagAbstract                                                       */
/*                                                                    */
/*   An object that tests abstract classes.                           */
/*                                                                    */
/* ------------------------------------------------------------------ */
/* Change list (see RxLanguage for master change list)                */
/* 1997.10.18 Initial                                                 */
/* 2012.11.15 recast as junit test                                    */
/* ------------------------------------------------------------------ */
import junit.framework.

options binary

-- Class extends an abstract class
class DiagAbstractUnit public extends DiagAbstract2Unit

 /* Construct a set of tests; raise DiagX exception if error */
 method testDiagAbstractUnit
  -- super() is implied, here
  flag=boolean 1

  x=super.bar
  y=jabba()
  z=wocky()

  flag=flag & (x y z)=='77 33 99'

  AssertTrue(flag)

 method wocky returns int
  return 99


/* Here's the (abstract) superclass... */
class DiagAbstract2Unit abstract extends TestCase

  bar=int

  method DiagAbstract2Unit
    super()
    bar=77

  method jabba          returns int     -- this one's a real method
    return 33

  method wocky abstract returns int     -- this one's abstract

