/* IBM Materials Licensed under International Components for Unicode  */
/* Licence version 1.8.1 (ICU Licence) - Property of IBM              */
/* IBM NetRexx                                                        */
/* Copyright (c) 1995-2009 IBM Corp.                                  */
/* Copyright (c) 2011- RexxLA                                         */
/* ------------------------------------------------------------------ */
/* NetRexx language processor                                     mfc */
/* Copyright (c) IBM Corporation 1996, 2000.  All Rights Reserved.    */
/* ------------------------------------------------------------------ */
/* RxFlag                                                             */
/*                                                                    */
/*   An object that describes the per-program or per-compile flags.   */
/*                                                                    */
/*   Some of these might be available in some languages only, in      */
/*   which case if they are to be On by default, their initial        */
/*   setting should be set by a call to an RxBabel method.            */
/*                                                                    */
/*   Any addition here needs five changes, one in each large method.  */
/*                                                                    */
/* ------------------------------------------------------------------ */
/* Change list (see RxLanguage for master change list)                */
/* 1997.04.20 Initial                                                 */
/* 1997.07.12 bytes/java flags added but not externalized             */
/* 1997.07.13 -symbols .. include symbol table in .class file         */
/* 1997.08.04 test flag added [currently undocumented]                */
/* 1997.10.18 add comments flag                                       */
/* 1998.09.30 add strictimport flag                                   */
/* 1999.04.06 add strictprops                                         */
/* 1999.09.30 add exec and java (interpret, generate code)            */
/* 2000.02.08 add usage method for NetRexxC (etc.) to get at.         */
/* 2000.04.19 drop exec (now handled by caller)                       */
/* ------------------------------------------------------------------ */
package COM.ibm.netrexx.process
options binary nodecimal

/**   An object that describes the per-program or per-compile flags.   */
class RxFlag
  properties public
  -- ! anything added here must also be in the copy/clone constructor
  binary      =boolean 0      -- all classes are binary classes
  bytes       =boolean 0      -- generate bytecodes
  comments    =boolean 0      -- copy comments across to .java
  compact     =boolean 0      -- display compact error messages
  crossref    =boolean 1      -- generate cross-reference
  decimal     =boolean 1      -- allow implicit decimal arithmetic
  diag        =boolean 0      -- diagnostic output
  explicit    =boolean 0      -- local variables must be explicit
  java        =boolean 1      -- generate Java source
  logo        =boolean 1      -- display logo (banner)
  format      =boolean 0      -- format output file [0=keep input line numbers]
  replace     =boolean 0      -- replace output file if exists
  sourcedir   =boolean 0      -- force output files to source directory
  strictargs  =boolean 0      -- empty args must be specified; args must be used
  strictassign=boolean 0      -- assign types must be cost-free
    maxassign =int     RxConverter.MAXASSIGN -- default maximum assignment cost [0-100]
  strictcase  =boolean 0      -- names must match in case
  strictimport=boolean 0      -- imports must be explicit
  strictprops =boolean 0      -- even local properties must be qualified
  strictsignal=boolean 0      -- signals are checked
--strictwarn  =boolean 0      -- only warn of 'strict' infringements
  symbols     =boolean 0      -- include symbols table
  test        =boolean 0      -- enable test features
  trace       =int     2      -- trace stream, or 0 for NOTRACE
  utf8        =boolean 0      -- source file is in UTF8 encoding
  verbose     =int     3      -- progress reports of output [0-5]

 /** Construct the flags with default values */
  method RxFlag()
    return
    
  /** Construct a copy of a flags object
     Arg1 is the flags object to copy. */
    -- later use cloneable interface
  method RxFlag(orig=RxFlag)
    binary=orig.binary
    bytes=orig.bytes
    comments=orig.comments
    compact=orig.compact
    crossref=orig.crossref
    decimal=orig.decimal
    diag=orig.diag
    explicit=orig.explicit
    format=orig.format
    java=orig.java
    logo=orig.logo
    replace=orig.replace
    sourcedir=orig.sourcedir
    strictargs=orig.strictargs
    strictassign=orig.strictassign
    strictcase=orig.strictcase
    strictimport=orig.strictimport
    strictprops=orig.strictprops
    strictsignal=orig.strictsignal
    --strictwarn=orig.strictwarn
    symbols=orig.symbols
    test=orig.test
    trace=orig.trace
    utf8=orig.utf8
    verbose=orig.verbose
    maxassign=orig.maxassign
    return

 /** setFlag: parse an option word and set option flag
    Arg1 is an option word (unchecked, no spaces, no prefix'-')
    An option word sets a flag unless prefixed with 'no', in which case
      the flag is reset.
    Returns 1 if recognized (good), 0 if error */
  method setFlag(options=Rexx) returns boolean
    -- words are recognized independently of case
    opt=options.upper           -- uppercase the word
    parse opt c2 +2 rest
    if c2\=='NO' then new=1; else do; new=0; opt=rest; end
    select
      when opt=='BINARY'       then binary      =new
      when opt=='COMMENTS'     then comments    =new
      when opt=='COMPACT'      then compact     =new
      when opt=='CROSSREF'     then crossref    =new
      when opt=='DECIMAL'      then decimal     =new
      when opt=='DIAG'         then diag        =new
      when opt=='EXPLICIT'     then explicit    =new
      when opt=='FORMAT'       then format      =new
      when opt=='JAVA'         then java        =new
      when opt=='LOGO'         then logo        =new
      when opt=='PFPN'         then pfpn        =new
      when opt=='REPLACE'      then replace     =new
      when opt=='SOURCEDIR'    then sourcedir   =new
      when opt=='STRICTARGS'   then strictargs  =new
      when opt=='STRICTASSIGN' then do
        maxassign=(1-new)*RxConverter.MAXASSIGN
        strictassign=new
      end
      when opt=='STRICTCASE'   then strictcase  =new
      when opt=='STRICTIMPORT' then strictimport=new
      when opt=='STRICTPROPS'  then strictprops =new
      when opt=='STRICTSIGNAL' then strictsignal=new
      --  when opt=='STRICTWARN'   then strictwarn  =new
      when opt=='SYMBOLS'      then symbols     =new
      when opt=='TEST'         then test        =new
      when opt=='TRACE'        then trace       =new*2
      when opt=='TRACE1'       then trace       =new*1
      when opt=='TRACE2'       then trace       =new*2
      when opt=='UTF8'         then utf8        =new
      when opt=='VERBOSE'      then verbose     =new*3    /* same as V3 */
      when opt=='VERBOSE0'     then verbose     =0
      when opt=='VERBOSE1'     then verbose     =new*1
      when opt=='VERBOSE2'     then verbose     =new*2
      when opt=='VERBOSE3'     then verbose     =new*3
      when opt=='VERBOSE4'     then verbose     =new*4
      when opt=='VERBOSE5'     then verbose     =new*5
      otherwise return 0 /* unknown */
    end
    return 1 /* was OK */
    
  /** toString -- return a string of all flags
     Arg1 is 1 to return No settings as well as set settings
   */
  method toString(nose=boolean 1) returns String
    acc=Rexx ''
    if binary       then acc=acc 'Binary'
    else if nose then acc=acc 'NoBinary'
    if comments     then acc=acc 'Comments'
    else if nose then acc=acc 'NoComments'
    if compact      then acc=acc 'Compact'
    else if nose then acc=acc 'NoCompact'
    if crossref     then acc=acc 'Crossref'
    else if nose then acc=acc 'NoCrossref'
    if decimal      then acc=acc 'Decimal'
    else if nose then acc=acc 'NoDecimal'
    if diag         then acc=acc 'Diag'
    else if nose then acc=acc 'NoDiag'
    if explicit     then acc=acc 'Explicit'
    else if nose then acc=acc 'NoExplicit'
    if format       then acc=acc 'Format'
    else if nose then acc=acc 'NoFormat'
    if java         then acc=acc 'Java'
    else if nose then acc=acc 'NoJava'
    if logo         then acc=acc 'Logo'
    else if nose then acc=acc 'NoLogo'
    if replace      then acc=acc 'Replace'
    else if nose then acc=acc 'NoReplace'
    if sourcedir    then acc=acc 'Sourcedir'
    else if nose then acc=acc 'NoSourcedir'
    if strictargs   then acc=acc 'Strictargs'
    else if nose then acc=acc 'NoStrictargs'
    if strictassign then acc=acc 'Strictassign'
    else if nose then acc=acc 'NoStrictassign'
    if strictcase   then acc=acc 'Strictcase'
    else if nose then acc=acc 'NoStrictcase'
    if strictimport then acc=acc 'Strictimport'
    else if nose then acc=acc 'NoStrictimport'
    if strictprops  then acc=acc 'Strictprops'
    else if nose then acc=acc 'NoStrictprops'
    if strictsignal then acc=acc 'Strictsignal'
    else if nose then acc=acc 'NoStrictsignal'
    --if strictwarn   then acc=acc 'Strictwarn'
    --   else if nose then acc=acc 'NoStrictwarn'
    if symbols      then acc=acc 'Symbols'
    else if nose then acc=acc 'NoSymbols'
    if test         then acc=acc 'Test'
    else if nose then acc=acc 'NoTest'
    if trace>0      then acc=acc 'Trace'trace
    else if nose then acc=acc 'NoTrace'
    if utf8         then acc=acc 'UTF8'
    else if nose then acc=acc 'NoUTF8'
    if verbose>0    then acc=acc 'Verbose'verbose
    else if nose then acc=acc 'NoVerbose'
    return acc.space.toString
    
  /** toConciseString -- return a string of active flags */
  method toConciseString returns String
    -- simply call toString requesting no Nos
    return toString(0)
    
    
  /** usage :display usage hints */
    -- intended for use from shell, e.g., NetRexxC
  method usage static
    say '  -binary       -- all classes are binary classes'
			 --say '  -bytes        -- generate bytecodes'
    say '  -comments     -- copy comments across to generated .java'
    say '  -compact      -- display error messages in compact form'
    say '  -crossref     -- generate cross-reference listing'
    say '  -decimal      -- allow implicit decimal arithmetic'
    say '  -diag         -- show diagnostic messages'
    say '  -explicit     -- local variables must be explicitly declared'
    say '  -java         -- generate Java source code for this program'
    say '  -logo         -- display logo (banner) after starting'
    say '  -format       -- format output file (pretty-print)'
    say '  -replace      -- replace .java file even if it exists'
    say '  -sourcedir    -- force output files to source directory'
    say '  -strictargs   -- empty argument lists must be specified as ()'
    say '  -strictassign -- assignment must be cost-free'
    say '  -strictcase   -- names must match in case'
    say '  -strictimport -- all imports must be explicit'
    say '  -strictprops  -- even local properties must be qualified'
    say '  -strictsignal -- signals list must be explicit'
    say '  -symbols      -- include symbols table in generated .class files'
			 --say '  -test         -- enable test features'
    say '  -trace[n]     -- trace stream [1 or 2], or 0 for NOTRACE'
    say '  -utf8         -- source file is in UTF8 encoding'
    say '  -verbose[n]   -- verbosity of progress reports [0-5]'
    return
    